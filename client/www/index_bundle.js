!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/public",n(n.s="./src/index.js")}({"./node_modules/babel-runtime/core-js/object/create.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/create.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/object/define-property.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/define-property.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/object/get-prototype-of.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/get-prototype-of.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/object/set-prototype-of.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/object/set-prototype-of.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/promise.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/promise.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/symbol.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/symbol/index.js"),__esModule:!0}},"./node_modules/babel-runtime/core-js/symbol/iterator.js":function(e,t,n){e.exports={default:n("./node_modules/core-js/library/fn/symbol/iterator.js"),__esModule:!0}},"./node_modules/babel-runtime/helpers/asyncToGenerator.js":function(e,t,n){"use strict";t.__esModule=!0;var r,o=n("./node_modules/babel-runtime/core-js/promise.js"),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){return function(){var t=e.apply(this,arguments);return new i.default(function(e,n){return function r(o,l){try{var a=t[o](l),u=a.value}catch(e){return void n(e)}if(!a.done)return i.default.resolve(u).then(function(e){r("next",e)},function(e){r("throw",e)});e(u)}("next")})}}},"./node_modules/babel-runtime/helpers/classCallCheck.js":function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},"./node_modules/babel-runtime/helpers/createClass.js":function(e,t,n){"use strict";t.__esModule=!0;var r,o=n("./node_modules/babel-runtime/core-js/object/define-property.js"),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},"./node_modules/babel-runtime/helpers/inherits.js":function(e,t,n){"use strict";t.__esModule=!0;var r=l(n("./node_modules/babel-runtime/core-js/object/set-prototype-of.js")),o=l(n("./node_modules/babel-runtime/core-js/object/create.js")),i=l(n("./node_modules/babel-runtime/helpers/typeof.js"));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(r.default?(0,r.default)(e,t):e.__proto__=t)}},"./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":function(e,t,n){"use strict";t.__esModule=!0;var r,o=n("./node_modules/babel-runtime/helpers/typeof.js"),i=(r=o)&&r.__esModule?r:{default:r};t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,i.default)(t))&&"function"!=typeof t?e:t}},"./node_modules/babel-runtime/helpers/typeof.js":function(e,t,n){"use strict";t.__esModule=!0;var r=l(n("./node_modules/babel-runtime/core-js/symbol/iterator.js")),o=l(n("./node_modules/babel-runtime/core-js/symbol.js")),i="function"==typeof o.default&&"symbol"==typeof r.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function l(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(r.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},"./node_modules/babel-runtime/regenerator/index.js":function(e,t,n){e.exports=n("./node_modules/regenerator-runtime/runtime-module.js")},"./node_modules/core-js/library/fn/object/create.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.create.js");var r=n("./node_modules/core-js/library/modules/_core.js").Object;e.exports=function(e,t){return r.create(e,t)}},"./node_modules/core-js/library/fn/object/define-property.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.define-property.js");var r=n("./node_modules/core-js/library/modules/_core.js").Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},"./node_modules/core-js/library/fn/object/get-prototype-of.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.get-prototype-of.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Object.getPrototypeOf},"./node_modules/core-js/library/fn/object/set-prototype-of.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.set-prototype-of.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf},"./node_modules/core-js/library/fn/promise.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.object.to-string.js"),n("./node_modules/core-js/library/modules/es6.string.iterator.js"),n("./node_modules/core-js/library/modules/web.dom.iterable.js"),n("./node_modules/core-js/library/modules/es6.promise.js"),n("./node_modules/core-js/library/modules/es7.promise.finally.js"),n("./node_modules/core-js/library/modules/es7.promise.try.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Promise},"./node_modules/core-js/library/fn/symbol/index.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.symbol.js"),n("./node_modules/core-js/library/modules/es6.object.to-string.js"),n("./node_modules/core-js/library/modules/es7.symbol.async-iterator.js"),n("./node_modules/core-js/library/modules/es7.symbol.observable.js"),e.exports=n("./node_modules/core-js/library/modules/_core.js").Symbol},"./node_modules/core-js/library/fn/symbol/iterator.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.string.iterator.js"),n("./node_modules/core-js/library/modules/web.dom.iterable.js"),e.exports=n("./node_modules/core-js/library/modules/_wks-ext.js").f("iterator")},"./node_modules/core-js/library/modules/_a-function.js":function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},"./node_modules/core-js/library/modules/_add-to-unscopables.js":function(e,t){e.exports=function(){}},"./node_modules/core-js/library/modules/_an-instance.js":function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},"./node_modules/core-js/library/modules/_an-object.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js");e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},"./node_modules/core-js/library/modules/_array-includes.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-iobject.js"),o=n("./node_modules/core-js/library/modules/_to-length.js"),i=n("./node_modules/core-js/library/modules/_to-absolute-index.js");e.exports=function(e){return function(t,n,l){var a,u=r(t),s=o(u.length),c=i(l,s);if(e&&n!=n){for(;s>c;)if((a=u[c++])!=a)return!0}else for(;s>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}}},"./node_modules/core-js/library/modules/_classof.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_cof.js"),o=n("./node_modules/core-js/library/modules/_wks.js")("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,l;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(l=r(t))&&"function"==typeof t.callee?"Arguments":l}},"./node_modules/core-js/library/modules/_cof.js":function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},"./node_modules/core-js/library/modules/_core.js":function(e,t){var n=e.exports={version:"2.6.3"};"number"==typeof __e&&(__e=n)},"./node_modules/core-js/library/modules/_ctx.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_a-function.js");e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},"./node_modules/core-js/library/modules/_defined.js":function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},"./node_modules/core-js/library/modules/_descriptors.js":function(e,t,n){e.exports=!n("./node_modules/core-js/library/modules/_fails.js")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},"./node_modules/core-js/library/modules/_dom-create.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js"),o=n("./node_modules/core-js/library/modules/_global.js").document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},"./node_modules/core-js/library/modules/_enum-bug-keys.js":function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},"./node_modules/core-js/library/modules/_enum-keys.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-keys.js"),o=n("./node_modules/core-js/library/modules/_object-gops.js"),i=n("./node_modules/core-js/library/modules/_object-pie.js");e.exports=function(e){var t=r(e),n=o.f;if(n)for(var l,a=n(e),u=i.f,s=0;a.length>s;)u.call(e,l=a[s++])&&t.push(l);return t}},"./node_modules/core-js/library/modules/_export.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_ctx.js"),l=n("./node_modules/core-js/library/modules/_hide.js"),a=n("./node_modules/core-js/library/modules/_has.js"),u=function(e,t,n){var s,c,d,f=e&u.F,p=e&u.G,m=e&u.S,h=e&u.P,y=e&u.B,b=e&u.W,v=p?o:o[t]||(o[t]={}),_=v.prototype,g=p?r:m?r[t]:(r[t]||{}).prototype;for(s in p&&(n=t),n)(c=!f&&g&&void 0!==g[s])&&a(v,s)||(d=c?g[s]:n[s],v[s]=p&&"function"!=typeof g[s]?n[s]:y&&c?i(d,r):b&&g[s]==d?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):h&&"function"==typeof d?i(Function.call,d):d,h&&((v.virtual||(v.virtual={}))[s]=d,e&u.R&&_&&!_[s]&&l(_,s,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},"./node_modules/core-js/library/modules/_fails.js":function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},"./node_modules/core-js/library/modules/_for-of.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_ctx.js"),o=n("./node_modules/core-js/library/modules/_iter-call.js"),i=n("./node_modules/core-js/library/modules/_is-array-iter.js"),l=n("./node_modules/core-js/library/modules/_an-object.js"),a=n("./node_modules/core-js/library/modules/_to-length.js"),u=n("./node_modules/core-js/library/modules/core.get-iterator-method.js"),s={},c={};(t=e.exports=function(e,t,n,d,f){var p,m,h,y,b=f?function(){return e}:u(e),v=r(n,d,t?2:1),_=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=a(e.length);p>_;_++)if((y=t?v(l(m=e[_])[0],m[1]):v(e[_]))===s||y===c)return y}else for(h=b.call(e);!(m=h.next()).done;)if((y=o(h,v,m.value,t))===s||y===c)return y}).BREAK=s,t.RETURN=c},"./node_modules/core-js/library/modules/_global.js":function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},"./node_modules/core-js/library/modules/_has.js":function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},"./node_modules/core-js/library/modules/_hide.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-dp.js"),o=n("./node_modules/core-js/library/modules/_property-desc.js");e.exports=n("./node_modules/core-js/library/modules/_descriptors.js")?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},"./node_modules/core-js/library/modules/_html.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js").document;e.exports=r&&r.documentElement},"./node_modules/core-js/library/modules/_ie8-dom-define.js":function(e,t,n){e.exports=!n("./node_modules/core-js/library/modules/_descriptors.js")&&!n("./node_modules/core-js/library/modules/_fails.js")(function(){return 7!=Object.defineProperty(n("./node_modules/core-js/library/modules/_dom-create.js")("div"),"a",{get:function(){return 7}}).a})},"./node_modules/core-js/library/modules/_invoke.js":function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},"./node_modules/core-js/library/modules/_iobject.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_cof.js");e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},"./node_modules/core-js/library/modules/_is-array-iter.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_iterators.js"),o=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},"./node_modules/core-js/library/modules/_is-array.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_cof.js");e.exports=Array.isArray||function(e){return"Array"==r(e)}},"./node_modules/core-js/library/modules/_is-object.js":function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},"./node_modules/core-js/library/modules/_iter-call.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js");e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},"./node_modules/core-js/library/modules/_iter-create.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_object-create.js"),o=n("./node_modules/core-js/library/modules/_property-desc.js"),i=n("./node_modules/core-js/library/modules/_set-to-string-tag.js"),l={};n("./node_modules/core-js/library/modules/_hide.js")(l,n("./node_modules/core-js/library/modules/_wks.js")("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(l,{next:o(1,n)}),i(e,t+" Iterator")}},"./node_modules/core-js/library/modules/_iter-define.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_library.js"),o=n("./node_modules/core-js/library/modules/_export.js"),i=n("./node_modules/core-js/library/modules/_redefine.js"),l=n("./node_modules/core-js/library/modules/_hide.js"),a=n("./node_modules/core-js/library/modules/_iterators.js"),u=n("./node_modules/core-js/library/modules/_iter-create.js"),s=n("./node_modules/core-js/library/modules/_set-to-string-tag.js"),c=n("./node_modules/core-js/library/modules/_object-gpo.js"),d=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,m,h,y,b){u(n,t,m);var v,_,g,j=function(e){if(!f&&e in T)return T[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},w=t+" Iterator",x="values"==h,k=!1,T=e.prototype,E=T[d]||T["@@iterator"]||h&&T[h],S=E||j(h),C=h?x?j("entries"):S:void 0,P="Array"==t&&T.entries||E;if(P&&(g=c(P.call(new e)))!==Object.prototype&&g.next&&(s(g,w,!0),r||"function"==typeof g[d]||l(g,d,p)),x&&E&&"values"!==E.name&&(k=!0,S=function(){return E.call(this)}),r&&!b||!f&&!k&&T[d]||l(T,d,S),a[t]=S,a[w]=p,h)if(v={values:x?S:j("values"),keys:y?S:j("keys"),entries:C},b)for(_ in v)_ in T||i(T,_,v[_]);else o(o.P+o.F*(f||k),t,v);return v}},"./node_modules/core-js/library/modules/_iter-detect.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],l=i[r]();l.next=function(){return{done:n=!0}},i[r]=function(){return l},e(i)}catch(e){}return n}},"./node_modules/core-js/library/modules/_iter-step.js":function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},"./node_modules/core-js/library/modules/_iterators.js":function(e,t){e.exports={}},"./node_modules/core-js/library/modules/_library.js":function(e,t){e.exports=!0},"./node_modules/core-js/library/modules/_meta.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_uid.js")("meta"),o=n("./node_modules/core-js/library/modules/_is-object.js"),i=n("./node_modules/core-js/library/modules/_has.js"),l=n("./node_modules/core-js/library/modules/_object-dp.js").f,a=0,u=Object.isExtensible||function(){return!0},s=!n("./node_modules/core-js/library/modules/_fails.js")(function(){return u(Object.preventExtensions({}))}),c=function(e){l(e,r,{value:{i:"O"+ ++a,w:{}}})},d=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!u(e))return"F";if(!t)return"E";c(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!u(e))return!0;if(!t)return!1;c(e)}return e[r].w},onFreeze:function(e){return s&&d.NEED&&u(e)&&!i(e,r)&&c(e),e}}},"./node_modules/core-js/library/modules/_microtask.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_task.js").set,i=r.MutationObserver||r.WebKitMutationObserver,l=r.process,a=r.Promise,u="process"==n("./node_modules/core-js/library/modules/_cof.js")(l);e.exports=function(){var e,t,n,s=function(){var r,o;for(u&&(r=l.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(u)n=function(){l.nextTick(s)};else if(!i||r.navigator&&r.navigator.standalone)if(a&&a.resolve){var c=a.resolve(void 0);n=function(){c.then(s)}}else n=function(){o.call(r,s)};else{var d=!0,f=document.createTextNode("");new i(s).observe(f,{characterData:!0}),n=function(){f.data=d=!d}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},"./node_modules/core-js/library/modules/_new-promise-capability.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_a-function.js");function o(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},"./node_modules/core-js/library/modules/_object-create.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_object-dps.js"),i=n("./node_modules/core-js/library/modules/_enum-bug-keys.js"),l=n("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO"),a=function(){},u=function(){var e,t=n("./node_modules/core-js/library/modules/_dom-create.js")("iframe"),r=i.length;for(t.style.display="none",n("./node_modules/core-js/library/modules/_html.js").appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;r--;)delete u.prototype[i[r]];return u()};e.exports=Object.create||function(e,t){var n;return null!==e?(a.prototype=r(e),n=new a,a.prototype=null,n[l]=e):n=u(),void 0===t?n:o(n,t)}},"./node_modules/core-js/library/modules/_object-dp.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_ie8-dom-define.js"),i=n("./node_modules/core-js/library/modules/_to-primitive.js"),l=Object.defineProperty;t.f=n("./node_modules/core-js/library/modules/_descriptors.js")?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return l(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},"./node_modules/core-js/library/modules/_object-dps.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-dp.js"),o=n("./node_modules/core-js/library/modules/_an-object.js"),i=n("./node_modules/core-js/library/modules/_object-keys.js");e.exports=n("./node_modules/core-js/library/modules/_descriptors.js")?Object.defineProperties:function(e,t){o(e);for(var n,l=i(t),a=l.length,u=0;a>u;)r.f(e,n=l[u++],t[n]);return e}},"./node_modules/core-js/library/modules/_object-gopd.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-pie.js"),o=n("./node_modules/core-js/library/modules/_property-desc.js"),i=n("./node_modules/core-js/library/modules/_to-iobject.js"),l=n("./node_modules/core-js/library/modules/_to-primitive.js"),a=n("./node_modules/core-js/library/modules/_has.js"),u=n("./node_modules/core-js/library/modules/_ie8-dom-define.js"),s=Object.getOwnPropertyDescriptor;t.f=n("./node_modules/core-js/library/modules/_descriptors.js")?s:function(e,t){if(e=i(e),t=l(t,!0),u)try{return s(e,t)}catch(e){}if(a(e,t))return o(!r.f.call(e,t),e[t])}},"./node_modules/core-js/library/modules/_object-gopn-ext.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-iobject.js"),o=n("./node_modules/core-js/library/modules/_object-gopn.js").f,i={}.toString,l="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return l&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return l.slice()}}(e):o(r(e))}},"./node_modules/core-js/library/modules/_object-gopn.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-keys-internal.js"),o=n("./node_modules/core-js/library/modules/_enum-bug-keys.js").concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},"./node_modules/core-js/library/modules/_object-gops.js":function(e,t){t.f=Object.getOwnPropertySymbols},"./node_modules/core-js/library/modules/_object-gpo.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_has.js"),o=n("./node_modules/core-js/library/modules/_to-object.js"),i=n("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO"),l=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},"./node_modules/core-js/library/modules/_object-keys-internal.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_has.js"),o=n("./node_modules/core-js/library/modules/_to-iobject.js"),i=n("./node_modules/core-js/library/modules/_array-includes.js")(!1),l=n("./node_modules/core-js/library/modules/_shared-key.js")("IE_PROTO");e.exports=function(e,t){var n,a=o(e),u=0,s=[];for(n in a)n!=l&&r(a,n)&&s.push(n);for(;t.length>u;)r(a,n=t[u++])&&(~i(s,n)||s.push(n));return s}},"./node_modules/core-js/library/modules/_object-keys.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-keys-internal.js"),o=n("./node_modules/core-js/library/modules/_enum-bug-keys.js");e.exports=Object.keys||function(e){return r(e,o)}},"./node_modules/core-js/library/modules/_object-pie.js":function(e,t){t.f={}.propertyIsEnumerable},"./node_modules/core-js/library/modules/_object-sap.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_fails.js");e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],l={};l[e]=t(n),r(r.S+r.F*i(function(){n(1)}),"Object",l)}},"./node_modules/core-js/library/modules/_perform.js":function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},"./node_modules/core-js/library/modules/_promise-resolve.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_is-object.js"),i=n("./node_modules/core-js/library/modules/_new-promise-capability.js");e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},"./node_modules/core-js/library/modules/_property-desc.js":function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},"./node_modules/core-js/library/modules/_redefine-all.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_hide.js");e.exports=function(e,t,n){for(var o in t)n&&e[o]?e[o]=t[o]:r(e,o,t[o]);return e}},"./node_modules/core-js/library/modules/_redefine.js":function(e,t,n){e.exports=n("./node_modules/core-js/library/modules/_hide.js")},"./node_modules/core-js/library/modules/_set-proto.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js"),o=n("./node_modules/core-js/library/modules/_an-object.js"),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n("./node_modules/core-js/library/modules/_ctx.js")(Function.call,n("./node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},"./node_modules/core-js/library/modules/_set-species.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_object-dp.js"),l=n("./node_modules/core-js/library/modules/_descriptors.js"),a=n("./node_modules/core-js/library/modules/_wks.js")("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:r[e];l&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},"./node_modules/core-js/library/modules/_set-to-string-tag.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_object-dp.js").f,o=n("./node_modules/core-js/library/modules/_has.js"),i=n("./node_modules/core-js/library/modules/_wks.js")("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},"./node_modules/core-js/library/modules/_shared-key.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_shared.js")("keys"),o=n("./node_modules/core-js/library/modules/_uid.js");e.exports=function(e){return r[e]||(r[e]=o(e))}},"./node_modules/core-js/library/modules/_shared.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_core.js"),o=n("./node_modules/core-js/library/modules/_global.js"),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n("./node_modules/core-js/library/modules/_library.js")?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},"./node_modules/core-js/library/modules/_species-constructor.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_an-object.js"),o=n("./node_modules/core-js/library/modules/_a-function.js"),i=n("./node_modules/core-js/library/modules/_wks.js")("species");e.exports=function(e,t){var n,l=r(e).constructor;return void 0===l||null==(n=r(l)[i])?t:o(n)}},"./node_modules/core-js/library/modules/_string-at.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-integer.js"),o=n("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return function(t,n){var i,l,a=String(o(t)),u=r(n),s=a.length;return u<0||u>=s?e?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===s||(l=a.charCodeAt(u+1))<56320||l>57343?e?a.charAt(u):i:e?a.slice(u,u+2):l-56320+(i-55296<<10)+65536}}},"./node_modules/core-js/library/modules/_task.js":function(e,t,n){var r,o,i,l=n("./node_modules/core-js/library/modules/_ctx.js"),a=n("./node_modules/core-js/library/modules/_invoke.js"),u=n("./node_modules/core-js/library/modules/_html.js"),s=n("./node_modules/core-js/library/modules/_dom-create.js"),c=n("./node_modules/core-js/library/modules/_global.js"),d=c.process,f=c.setImmediate,p=c.clearImmediate,m=c.MessageChannel,h=c.Dispatch,y=0,b={},v=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},_=function(e){v.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++y]=function(){a("function"==typeof e?e:Function(e),t)},r(y),y},p=function(e){delete b[e]},"process"==n("./node_modules/core-js/library/modules/_cof.js")(d)?r=function(e){d.nextTick(l(v,e,1))}:h&&h.now?r=function(e){h.now(l(v,e,1))}:m?(i=(o=new m).port2,o.port1.onmessage=_,r=l(i.postMessage,i,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(r=function(e){c.postMessage(e+"","*")},c.addEventListener("message",_,!1)):r="onreadystatechange"in s("script")?function(e){u.appendChild(s("script")).onreadystatechange=function(){u.removeChild(this),v.call(e)}}:function(e){setTimeout(l(v,e,1),0)}),e.exports={set:f,clear:p}},"./node_modules/core-js/library/modules/_to-absolute-index.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-integer.js"),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},"./node_modules/core-js/library/modules/_to-integer.js":function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},"./node_modules/core-js/library/modules/_to-iobject.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_iobject.js"),o=n("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return r(o(e))}},"./node_modules/core-js/library/modules/_to-length.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-integer.js"),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},"./node_modules/core-js/library/modules/_to-object.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_defined.js");e.exports=function(e){return Object(r(e))}},"./node_modules/core-js/library/modules/_to-primitive.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_is-object.js");e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},"./node_modules/core-js/library/modules/_uid.js":function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},"./node_modules/core-js/library/modules/_user-agent.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js").navigator;e.exports=r&&r.userAgent||""},"./node_modules/core-js/library/modules/_wks-define.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_library.js"),l=n("./node_modules/core-js/library/modules/_wks-ext.js"),a=n("./node_modules/core-js/library/modules/_object-dp.js").f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:l.f(e)})}},"./node_modules/core-js/library/modules/_wks-ext.js":function(e,t,n){t.f=n("./node_modules/core-js/library/modules/_wks.js")},"./node_modules/core-js/library/modules/_wks.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_shared.js")("wks"),o=n("./node_modules/core-js/library/modules/_uid.js"),i=n("./node_modules/core-js/library/modules/_global.js").Symbol,l="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=l&&i[e]||(l?i:o)("Symbol."+e))}).store=r},"./node_modules/core-js/library/modules/core.get-iterator-method.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_classof.js"),o=n("./node_modules/core-js/library/modules/_wks.js")("iterator"),i=n("./node_modules/core-js/library/modules/_iterators.js");e.exports=n("./node_modules/core-js/library/modules/_core.js").getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},"./node_modules/core-js/library/modules/es6.array.iterator.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_add-to-unscopables.js"),o=n("./node_modules/core-js/library/modules/_iter-step.js"),i=n("./node_modules/core-js/library/modules/_iterators.js"),l=n("./node_modules/core-js/library/modules/_to-iobject.js");e.exports=n("./node_modules/core-js/library/modules/_iter-define.js")(Array,"Array",function(e,t){this._t=l(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},"./node_modules/core-js/library/modules/es6.object.create.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js");r(r.S,"Object",{create:n("./node_modules/core-js/library/modules/_object-create.js")})},"./node_modules/core-js/library/modules/es6.object.define-property.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js");r(r.S+r.F*!n("./node_modules/core-js/library/modules/_descriptors.js"),"Object",{defineProperty:n("./node_modules/core-js/library/modules/_object-dp.js").f})},"./node_modules/core-js/library/modules/es6.object.get-prototype-of.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_to-object.js"),o=n("./node_modules/core-js/library/modules/_object-gpo.js");n("./node_modules/core-js/library/modules/_object-sap.js")("getPrototypeOf",function(){return function(e){return o(r(e))}})},"./node_modules/core-js/library/modules/es6.object.set-prototype-of.js":function(e,t,n){var r=n("./node_modules/core-js/library/modules/_export.js");r(r.S,"Object",{setPrototypeOf:n("./node_modules/core-js/library/modules/_set-proto.js").set})},"./node_modules/core-js/library/modules/es6.object.to-string.js":function(e,t){},"./node_modules/core-js/library/modules/es6.promise.js":function(e,t,n){"use strict";var r,o,i,l,a=n("./node_modules/core-js/library/modules/_library.js"),u=n("./node_modules/core-js/library/modules/_global.js"),s=n("./node_modules/core-js/library/modules/_ctx.js"),c=n("./node_modules/core-js/library/modules/_classof.js"),d=n("./node_modules/core-js/library/modules/_export.js"),f=n("./node_modules/core-js/library/modules/_is-object.js"),p=n("./node_modules/core-js/library/modules/_a-function.js"),m=n("./node_modules/core-js/library/modules/_an-instance.js"),h=n("./node_modules/core-js/library/modules/_for-of.js"),y=n("./node_modules/core-js/library/modules/_species-constructor.js"),b=n("./node_modules/core-js/library/modules/_task.js").set,v=n("./node_modules/core-js/library/modules/_microtask.js")(),_=n("./node_modules/core-js/library/modules/_new-promise-capability.js"),g=n("./node_modules/core-js/library/modules/_perform.js"),j=n("./node_modules/core-js/library/modules/_user-agent.js"),w=n("./node_modules/core-js/library/modules/_promise-resolve.js"),x=u.TypeError,k=u.process,T=k&&k.versions,E=T&&T.v8||"",S=u.Promise,C="process"==c(k),P=function(){},O=o=_.f,R=!!function(){try{var e=S.resolve(1),t=(e.constructor={})[n("./node_modules/core-js/library/modules/_wks.js")("species")]=function(e){e(P,P)};return(C||"function"==typeof PromiseRejectionEvent)&&e.then(P)instanceof t&&0!==E.indexOf("6.6")&&-1===j.indexOf("Chrome/66")}catch(e){}}(),N=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;v(function(){for(var r=e._v,o=1==e._s,i=0,l=function(t){var n,i,l,a=o?t.ok:t.fail,u=t.resolve,s=t.reject,c=t.domain;try{a?(o||(2==e._h&&F(e),e._h=1),!0===a?n=r:(c&&c.enter(),n=a(r),c&&(c.exit(),l=!0)),n===t.promise?s(x("Promise-chain cycle")):(i=N(n))?i.call(n,u,s):u(n)):s(r)}catch(e){c&&!l&&c.exit(),s(e)}};n.length>i;)l(n[i++]);e._c=[],e._n=!1,t&&!e._h&&L(e)})}},L=function(e){b.call(u,function(){var t,n,r,o=e._v,i=A(e);if(i&&(t=g(function(){C?k.emit("unhandledRejection",o,e):(n=u.onunhandledrejection)?n({promise:e,reason:o}):(r=u.console)&&r.error&&r.error("Unhandled promise rejection",o)}),e._h=C||A(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},A=function(e){return 1!==e._h&&0===(e._a||e._c).length},F=function(e){b.call(u,function(){var t;C?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},I=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},U=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw x("Promise can't be resolved itself");(t=N(e))?v(function(){var r={_w:n,_d:!1};try{t.call(e,s(U,r,1),s(I,r,1))}catch(e){I.call(r,e)}}):(n._v=e,n._s=1,M(n,!1))}catch(e){I.call({_w:n,_d:!1},e)}}};R||(S=function(e){m(this,S,"Promise","_h"),p(e),r.call(this);try{e(s(U,this,1),s(I,this,1))}catch(e){I.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n("./node_modules/core-js/library/modules/_redefine-all.js")(S.prototype,{then:function(e,t){var n=O(y(this,S));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=C?k.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=s(U,e,1),this.reject=s(I,e,1)},_.f=O=function(e){return e===S||e===l?new i(e):o(e)}),d(d.G+d.W+d.F*!R,{Promise:S}),n("./node_modules/core-js/library/modules/_set-to-string-tag.js")(S,"Promise"),n("./node_modules/core-js/library/modules/_set-species.js")("Promise"),l=n("./node_modules/core-js/library/modules/_core.js").Promise,d(d.S+d.F*!R,"Promise",{reject:function(e){var t=O(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!R),"Promise",{resolve:function(e){return w(a&&this===l?S:this,e)}}),d(d.S+d.F*!(R&&n("./node_modules/core-js/library/modules/_iter-detect.js")(function(e){S.all(e).catch(P)})),"Promise",{all:function(e){var t=this,n=O(t),r=n.resolve,o=n.reject,i=g(function(){var n=[],i=0,l=1;h(e,!1,function(e){var a=i++,u=!1;n.push(void 0),l++,t.resolve(e).then(function(e){u||(u=!0,n[a]=e,--l||r(n))},o)}),--l||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=O(t),r=n.reject,o=g(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},"./node_modules/core-js/library/modules/es6.string.iterator.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_string-at.js")(!0);n("./node_modules/core-js/library/modules/_iter-define.js")(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},"./node_modules/core-js/library/modules/es6.symbol.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_has.js"),i=n("./node_modules/core-js/library/modules/_descriptors.js"),l=n("./node_modules/core-js/library/modules/_export.js"),a=n("./node_modules/core-js/library/modules/_redefine.js"),u=n("./node_modules/core-js/library/modules/_meta.js").KEY,s=n("./node_modules/core-js/library/modules/_fails.js"),c=n("./node_modules/core-js/library/modules/_shared.js"),d=n("./node_modules/core-js/library/modules/_set-to-string-tag.js"),f=n("./node_modules/core-js/library/modules/_uid.js"),p=n("./node_modules/core-js/library/modules/_wks.js"),m=n("./node_modules/core-js/library/modules/_wks-ext.js"),h=n("./node_modules/core-js/library/modules/_wks-define.js"),y=n("./node_modules/core-js/library/modules/_enum-keys.js"),b=n("./node_modules/core-js/library/modules/_is-array.js"),v=n("./node_modules/core-js/library/modules/_an-object.js"),_=n("./node_modules/core-js/library/modules/_is-object.js"),g=n("./node_modules/core-js/library/modules/_to-iobject.js"),j=n("./node_modules/core-js/library/modules/_to-primitive.js"),w=n("./node_modules/core-js/library/modules/_property-desc.js"),x=n("./node_modules/core-js/library/modules/_object-create.js"),k=n("./node_modules/core-js/library/modules/_object-gopn-ext.js"),T=n("./node_modules/core-js/library/modules/_object-gopd.js"),E=n("./node_modules/core-js/library/modules/_object-dp.js"),S=n("./node_modules/core-js/library/modules/_object-keys.js"),C=T.f,P=E.f,O=k.f,R=r.Symbol,N=r.JSON,M=N&&N.stringify,L=p("_hidden"),A=p("toPrimitive"),F={}.propertyIsEnumerable,I=c("symbol-registry"),U=c("symbols"),D=c("op-symbols"),z=Object.prototype,W="function"==typeof R,H=r.QObject,V=!H||!H.prototype||!H.prototype.findChild,B=i&&s(function(){return 7!=x(P({},"a",{get:function(){return P(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=C(z,t);r&&delete z[t],P(e,t,n),r&&e!==z&&P(z,t,r)}:P,$=function(e){var t=U[e]=x(R.prototype);return t._k=e,t},q=W&&"symbol"==typeof R.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof R},Y=function(e,t,n){return e===z&&Y(D,t,n),v(e),t=j(t,!0),v(n),o(U,t)?(n.enumerable?(o(e,L)&&e[L][t]&&(e[L][t]=!1),n=x(n,{enumerable:w(0,!1)})):(o(e,L)||P(e,L,w(1,{})),e[L][t]=!0),B(e,t,n)):P(e,t,n)},K=function(e,t){v(e);for(var n,r=y(t=g(t)),o=0,i=r.length;i>o;)Y(e,n=r[o++],t[n]);return e},Q=function(e){var t=F.call(this,e=j(e,!0));return!(this===z&&o(U,e)&&!o(D,e))&&(!(t||!o(this,e)||!o(U,e)||o(this,L)&&this[L][e])||t)},G=function(e,t){if(e=g(e),t=j(t,!0),e!==z||!o(U,t)||o(D,t)){var n=C(e,t);return!n||!o(U,t)||o(e,L)&&e[L][t]||(n.enumerable=!0),n}},X=function(e){for(var t,n=O(g(e)),r=[],i=0;n.length>i;)o(U,t=n[i++])||t==L||t==u||r.push(t);return r},J=function(e){for(var t,n=e===z,r=O(n?D:g(e)),i=[],l=0;r.length>l;)!o(U,t=r[l++])||n&&!o(z,t)||i.push(U[t]);return i};W||(a((R=function(){if(this instanceof R)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===z&&t.call(D,n),o(this,L)&&o(this[L],e)&&(this[L][e]=!1),B(this,e,w(1,n))};return i&&V&&B(z,e,{configurable:!0,set:t}),$(e)}).prototype,"toString",function(){return this._k}),T.f=G,E.f=Y,n("./node_modules/core-js/library/modules/_object-gopn.js").f=k.f=X,n("./node_modules/core-js/library/modules/_object-pie.js").f=Q,n("./node_modules/core-js/library/modules/_object-gops.js").f=J,i&&!n("./node_modules/core-js/library/modules/_library.js")&&a(z,"propertyIsEnumerable",Q,!0),m.f=function(e){return $(p(e))}),l(l.G+l.W+l.F*!W,{Symbol:R});for(var Z="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Z.length>ee;)p(Z[ee++]);for(var te=S(p.store),ne=0;te.length>ne;)h(te[ne++]);l(l.S+l.F*!W,"Symbol",{for:function(e){return o(I,e+="")?I[e]:I[e]=R(e)},keyFor:function(e){if(!q(e))throw TypeError(e+" is not a symbol!");for(var t in I)if(I[t]===e)return t},useSetter:function(){V=!0},useSimple:function(){V=!1}}),l(l.S+l.F*!W,"Object",{create:function(e,t){return void 0===t?x(e):K(x(e),t)},defineProperty:Y,defineProperties:K,getOwnPropertyDescriptor:G,getOwnPropertyNames:X,getOwnPropertySymbols:J}),N&&l(l.S+l.F*(!W||s(function(){var e=R();return"[null]"!=M([e])||"{}"!=M({a:e})||"{}"!=M(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(_(t)||void 0!==e)&&!q(e))return b(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!q(t))return t}),r[1]=t,M.apply(N,r)}}),R.prototype[A]||n("./node_modules/core-js/library/modules/_hide.js")(R.prototype,A,R.prototype.valueOf),d(R,"Symbol"),d(Math,"Math",!0),d(r.JSON,"JSON",!0)},"./node_modules/core-js/library/modules/es7.promise.finally.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_export.js"),o=n("./node_modules/core-js/library/modules/_core.js"),i=n("./node_modules/core-js/library/modules/_global.js"),l=n("./node_modules/core-js/library/modules/_species-constructor.js"),a=n("./node_modules/core-js/library/modules/_promise-resolve.js");r(r.P+r.R,"Promise",{finally:function(e){var t=l(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return a(t,e()).then(function(){return n})}:e,n?function(n){return a(t,e()).then(function(){throw n})}:e)}})},"./node_modules/core-js/library/modules/es7.promise.try.js":function(e,t,n){"use strict";var r=n("./node_modules/core-js/library/modules/_export.js"),o=n("./node_modules/core-js/library/modules/_new-promise-capability.js"),i=n("./node_modules/core-js/library/modules/_perform.js");r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},"./node_modules/core-js/library/modules/es7.symbol.async-iterator.js":function(e,t,n){n("./node_modules/core-js/library/modules/_wks-define.js")("asyncIterator")},"./node_modules/core-js/library/modules/es7.symbol.observable.js":function(e,t,n){n("./node_modules/core-js/library/modules/_wks-define.js")("observable")},"./node_modules/core-js/library/modules/web.dom.iterable.js":function(e,t,n){n("./node_modules/core-js/library/modules/es6.array.iterator.js");for(var r=n("./node_modules/core-js/library/modules/_global.js"),o=n("./node_modules/core-js/library/modules/_hide.js"),i=n("./node_modules/core-js/library/modules/_iterators.js"),l=n("./node_modules/core-js/library/modules/_wks.js")("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var s=a[u],c=r[s],d=c&&c.prototype;d&&!d[l]&&o(d,l,s),i[s]=i.Array}},"./node_modules/history/node_modules/warning/browser.js":function(e,t,n){"use strict";e.exports=function(){}},"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":function(e,t,n){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i=Object.defineProperty,l=Object.getOwnPropertyNames,a=Object.getOwnPropertySymbols,u=Object.getOwnPropertyDescriptor,s=Object.getPrototypeOf,c=s&&s(Object);e.exports=function e(t,n,d){if("string"!=typeof n){if(c){var f=s(n);f&&f!==c&&e(t,f,d)}var p=l(n);a&&(p=p.concat(a(n)));for(var m=0;m<p.length;++m){var h=p[m];if(!(r[h]||o[h]||d&&d[h])){var y=u(n,h);try{i(t,h,y)}catch(e){}}}return t}return t}},"./node_modules/invariant/browser.js":function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,l,a){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,i,l,a],c=0;(u=new Error(t.replace(/%s/g,function(){return s[c++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},"./node_modules/isarray/index.js":function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},"./node_modules/object-assign/index.js":function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(a[s]=n[s]);if(r){l=r(n);for(var c=0;c<l.length;c++)i.call(n,l[c])&&(a[l[c]]=n[l[c]])}}return a}},"./node_modules/path-to-regexp/index.js":function(e,t,n){var r=n("./node_modules/isarray/index.js");e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return a(i(e,t))},e.exports.tokensToFunction=a,e.exports.tokensToRegExp=f;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,l=0,a="",c=t&&t.delimiter||"/";null!=(n=o.exec(e));){var d=n[0],f=n[1],p=n.index;if(a+=e.slice(l,p),l=p+d.length,f)a+=f[1];else{var m=e[l],h=n[2],y=n[3],b=n[4],v=n[5],_=n[6],g=n[7];a&&(r.push(a),a="");var j=null!=h&&null!=m&&m!==h,w="+"===_||"*"===_,x="?"===_||"*"===_,k=n[2]||c,T=b||v;r.push({name:y||i++,prefix:h||"",delimiter:k,optional:x,repeat:w,partial:j,asterisk:!!g,pattern:T?s(T):g?".*":"[^"+u(k)+"]+?"})}}return l<e.length&&(a+=e.substr(l)),a&&r.push(a),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function a(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",a=n||{},u=(o||{}).pretty?l:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var d,f=a[c.name];if(null==f){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(f)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<f.length;p++){if(d=u(f[p]),!t[s].test(d))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===p?c.prefix:c.delimiter)+d}}else{if(d=c.asterisk?encodeURI(f).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(f),!t[s].test(d))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+d+'"');i+=c.prefix+d}}else i+=c}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function d(e){return e.sensitive?"":"i"}function f(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,l="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)l+=u(s);else{var f=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+f+p+")*"),l+=p=s.optional?s.partial?f+"("+p+")?":"(?:"+f+"("+p+"))?":f+"("+p+")"}}var m=u(n.delimiter||"/"),h=l.slice(-m.length)===m;return o||(l=(h?l.slice(0,-m.length):l)+"(?:"+m+"(?=$))?"),l+=i?"$":o&&h?"":"(?="+m+"|$)",c(new RegExp("^"+l,d(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return f(i(e,n),t,n)}(e,t,n)}},"./node_modules/prop-types/factoryWithThrowingShims.js":function(e,t,n){"use strict";var r=n("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function o(){}e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},"./node_modules/prop-types/index.js":function(e,t,n){e.exports=n("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./node_modules/react-dom/cjs/react-dom.production.min.js":function(e,t,n){"use strict";
/** @license React v16.7.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n("./node_modules/react/index.js"),o=n("./node_modules/object-assign/index.js"),i=n("./node_modules/scheduler/index.js");function l(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,l,a){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,l,a],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||l("227");var a=!1,u=null,s=!1,c=null,d={onError:function(e){a=!0,u=e}};function f(e,t,n,r,o,i,l,s,c){a=!1,u=null,function(e,t,n,r,o,i,l,a,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(d,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||l("96",e),!b[n])for(var r in t.extractEvents||l("97",e),b[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;v.hasOwnProperty(u)&&l("99",u),v[u]=i;var s=i.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&y(s[o],a,u);o=!0}else i.registrationName?(y(i.registrationName,a,u),o=!0):o=!1;o||l("98",r,e)}}}function y(e,t,n){_[e]&&l("100",e),_[e]=t,g[e]=t.eventTypes[n].dependencies}var b=[],v={},_={},g={},j=null,w=null,x=null;function k(e,t,n){var r=e.type||"unknown-event";e.currentTarget=x(n),function(e,t,n,r,o,i,d,p,m){if(f.apply(this,arguments),a){if(a){var h=u;a=!1,u=null}else l("198"),h=void 0;s||(s=!0,c=h)}}(r,t,void 0,e),e.currentTarget=null}function T(e,t){return null==t&&l("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function E(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var S=null;function C(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)k(e,t[r],n[r]);else t&&k(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){p&&l("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&l("102",t),m[t]=r,n=!0)}n&&h()}};function O(e,t){var n=e.stateNode;if(!n)return null;var r=j(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&l("231",t,typeof n),n)}function R(e){if(null!==e&&(S=T(S,e)),e=S,S=null,e&&(E(e,C),S&&l("95"),s))throw e=c,s=!1,c=null,e}var N=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+N,L="__reactEventHandlers$"+N;function A(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function F(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function I(e){if(5===e.tag||6===e.tag)return e.stateNode;l("33")}function U(e){return e[L]||null}function D(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=O(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=D(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function H(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=O(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&H(e._targetInst,null,e)}function B(e){E(e,W)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Y={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},K={},Q={};function G(e){if(K[e])return K[e];if(!Y[e])return e;var t,n=Y[e];for(t in n)if(n.hasOwnProperty(t)&&t in Q)return K[e]=n[t];return e}$&&(Q=document.createElement("div").style,"AnimationEvent"in window||(delete Y.animationend.animation,delete Y.animationiteration.animation,delete Y.animationstart.animation),"TransitionEvent"in window||delete Y.transitionend.transition);var X=G("animationend"),J=G("animationiteration"),Z=G("animationstart"),ee=G("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function le(){return!0}function ae(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?le:ae,this.isPropagationStopped=ae,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||l("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function de(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=le)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=le)},persist:function(){this.isPersistent=le},isPersistent:ae,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ae,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,de(n),n},de(ue);var fe=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=$&&"CompositionEvent"in window,ye=null;$&&"documentMode"in document&&(ye=document.documentMode);var be=$&&"TextEvent"in window&&!ye,ve=$&&(!he||ye&&8<ye&&11>=ye),_e=String.fromCharCode(32),ge={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},je=!1;function we(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function xe(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ke=!1;var Te={eventTypes:ge,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(he)e:{switch(e){case"compositionstart":o=ge.compositionStart;break e;case"compositionend":o=ge.compositionEnd;break e;case"compositionupdate":o=ge.compositionUpdate;break e}o=void 0}else ke?we(e,n)&&(o=ge.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=ge.compositionStart);return o?(ve&&"ko"!==n.locale&&(ke||o!==ge.compositionStart?o===ge.compositionEnd&&ke&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,ke=!0)),o=fe.getPooled(o,t,n,r),i?o.data=i:null!==(i=xe(n))&&(o.data=i),B(o),i=o):i=null,(e=be?function(e,t){switch(e){case"compositionend":return xe(t);case"keypress":return 32!==t.which?null:(je=!0,_e);case"textInput":return(e=t.data)===_e&&je?null:e;default:return null}}(e,n):function(e,t){if(ke)return"compositionend"===e||!he&&we(e,t)?(e=ie(),oe=re=ne=null,ke=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ve&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(ge.beforeInput,t,n,r)).data=e,B(t)):t=null,null===i?t:null===t?i:[i,t]}},Ee=null,Se=null,Ce=null;function Pe(e){if(e=w(e)){"function"!=typeof Ee&&l("280");var t=j(e.stateNode);Ee(e.stateNode,e.type,t)}}function Oe(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function Re(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Ne(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function Le(){}var Ae=!1;function Fe(e,t){if(Ae)return e(t);Ae=!0;try{return Ne(e,t)}finally{Ae=!1,(null!==Se||null!==Ce)&&(Le(),Re())}}var Ie={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ue(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ie[e.type]:"textarea"===t}function De(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function He(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Be=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,$e=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Ye=qe?Symbol.for("react.element"):60103,Ke=qe?Symbol.for("react.portal"):60106,Qe=qe?Symbol.for("react.fragment"):60107,Ge=qe?Symbol.for("react.strict_mode"):60108,Xe=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function lt(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function at(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Qe:return"Fragment";case Ke:return"Portal";case Xe:return"Profiler";case Ge:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return at(e.type);case ot:if(e=1===e._status?e._result:null)return at(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=at(e.type);n=null,r&&(n=at(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace($e,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,dt={},ft={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function bt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(ft,e)||!ct.call(dt,e)&&(st.test(e)?ft[e]=!0:(dt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function vt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function _t(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function gt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=vt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function jt(e,t){null!=(t=t.checked)&&bt(e,"checked",t,!1)}function wt(e,t){jt(e,t);var n=vt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?kt(e,t.type,n):t.hasOwnProperty("defaultValue")&&kt(e,t.type,vt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function xt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function kt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,yt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,yt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,yt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),mt.tabIndex=new pt("tabIndex",1,!1,"tabindex",null);var Tt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Et(e,t,n){return(e=ue.getPooled(Tt.change,e,t,n)).type="change",Oe(n),B(e),e}var St=null,Ct=null;function Pt(e){R(e)}function Ot(e){if(Ve(I(e)))return e}function Rt(e,t){if("change"===e)return t}var Nt=!1;function Mt(){St&&(St.detachEvent("onpropertychange",Lt),Ct=St=null)}function Lt(e){"value"===e.propertyName&&Ot(Ct)&&Fe(Pt,e=Et(Ct,e,De(e)))}function At(e,t,n){"focus"===e?(Mt(),Ct=n,(St=t).attachEvent("onpropertychange",Lt)):"blur"===e&&Mt()}function Ft(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Ot(Ct)}function It(e,t){if("click"===e)return Ot(t)}function Ut(e,t){if("input"===e||"change"===e)return Ot(t)}$&&(Nt=ze("input")&&(!document.documentMode||9<document.documentMode));var Dt={eventTypes:Tt,_isInputEventSupported:Nt,extractEvents:function(e,t,n,r){var o=t?I(t):window,i=void 0,l=void 0,a=o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type?i=Rt:Ue(o)?Nt?i=Ut:(i=Ft,l=At):(a=o.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=It),i&&(i=i(e,t)))return Et(i,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&kt(o,"number",o.value)}},zt=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ht(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Vt(){return Ht}var Bt=0,$t=0,qt=!1,Yt=!1,Kt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Bt;return Bt=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Qt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Gt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Gt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?A(t):null):i=null,i===t)return null;var l=void 0,a=void 0,u=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(l=Kt,a=Gt.mouseLeave,u=Gt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(l=Qt,a=Gt.pointerLeave,u=Gt.pointerEnter,s="pointer");var c=null==i?o:I(i);if(o=null==t?o:I(t),(e=l.getPooled(a,i,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=l.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,i&&r)e:{for(o=r,s=0,l=t=i;l;l=D(l))s++;for(l=0,u=o;u;u=D(u))l++;for(;0<s-l;)t=D(t),s--;for(;0<l-s;)o=D(o),l--;for(;s--;){if(t===o||t===o.alternate)break e;t=D(t),o=D(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(s=i.alternate)||s!==o);)t.push(i),i=D(i);for(i=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)i.push(r),r=D(r);for(r=0;r<t.length;r++)H(t[r],"bubbled",e);for(r=i.length;0<r--;)H(i[r],"captured",n);return[e,n]}},Jt=Object.prototype.hasOwnProperty;function Zt(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function en(e,t){if(Zt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Jt.call(t,n[r])||!Zt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&l("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&l("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return nn(o),e;if(a===r)return nn(o),t;a=a.sibling}l("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}a||l("189")}}n.alternate!==r&&l("190")}return 3!==n.tag&&l("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),ln=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),an=zt.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dn=zt.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),fn=Kt.extend({dataTransfer:null}),pn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),yn=[["abort","abort"],[X,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],bn={},vn={};function _n(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},bn[e]=t,vn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){_n(e,!0)}),yn.forEach(function(e){_n(e,!1)});var gn={eventTypes:bn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=vn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=vn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=dn;break;case"blur":case"focus":e=an;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case J:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=zt;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=ln;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Qt;break;default:e=ue}return B(t=e.getPooled(o,t,n,r)),t}},jn=gn.isInteractiveTopLevelEventType,wn=[];function xn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=A(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=De(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,l=null,a=0;a<b.length;a++){var u=b[a];u&&(u=u.extractEvents(r,t,i,o))&&(l=T(l,u))}R(l)}}var kn=!0;function Tn(e,t){if(!t)return null;var n=(jn(e)?Sn:Cn).bind(null,e);t.addEventListener(e,n,!1)}function En(e,t){if(!t)return null;var n=(jn(e)?Sn:Cn).bind(null,e);t.addEventListener(e,n,!0)}function Sn(e,t){Me(Cn,e,t)}function Cn(e,t){if(kn){var n=De(t);if(null===(n=A(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),wn.length){var r=wn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Fe(xn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>wn.length&&wn.push(e)}}}var Pn={},On=0,Rn="_reactListenersID"+(""+Math.random()).slice(2);function Nn(e){return Object.prototype.hasOwnProperty.call(e,Rn)||(e[Rn]=On++,Pn[e[Rn]]={}),Pn[e[Rn]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Ln(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function An(e,t){var n,r=Ln(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Ln(r)}}function Fn(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Mn(e.document)}return t}function In(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Un=$&&"documentMode"in document&&11>=document.documentMode,Dn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},zn=null,Wn=null,Hn=null,Vn=!1;function Bn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==zn||zn!==Mn(n)?null:("selectionStart"in(n=zn)&&In(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Hn&&en(Hn,n)?null:(Hn=n,(e=ue.getPooled(Dn.select,Wn,e,t)).type="select",e.target=zn,B(e),e))}var $n={eventTypes:Dn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Nn(i),o=g.onSelect;for(var l=0;l<o.length;l++){var a=o[l];if(!i.hasOwnProperty(a)||!i[a]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?I(t):window,e){case"focus":(Ue(i)||"true"===i.contentEditable)&&(zn=i,Wn=t,Hn=null);break;case"blur":Hn=Wn=zn=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Bn(n,r);case"selectionchange":if(Un)break;case"keydown":case"keyup":return Bn(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+vt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&l("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Qn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&l("92"),Array.isArray(t)&&(1>=t.length||l("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:vt(n)}}function Gn(e,t){var n=vt(t.value),r=vt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Xn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),j=U,w=F,x=I,P.injectEventPluginsByName({SimpleEventPlugin:gn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Dt,SelectEventPlugin:$n,BeforeInputEventPlugin:Te});var Jn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Zn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Zn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==Jn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ar(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ar(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&l("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&l("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||l("61")),null!=t.style&&"object"!=typeof t.style&&l("62",""))}function dr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function fr(e,t){var n=Nn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=g[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":En("scroll",e);break;case"focus":case"blur":En("focus",e),En("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&En(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Tn(o,e)}n[o]=!0}}}function pr(){}var mr=null,hr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function br(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var vr="function"==typeof setTimeout?setTimeout:void 0,_r="function"==typeof clearTimeout?clearTimeout:void 0;function gr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function jr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var wr=[],xr=-1;function kr(e){0>xr||(e.current=wr[xr],wr[xr]=null,xr--)}function Tr(e,t){wr[++xr]=e.current,e.current=t}var Er={},Sr={current:Er},Cr={current:!1},Pr=Er;function Or(e,t){var n=e.type.contextTypes;if(!n)return Er;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Rr(e){return null!=(e=e.childContextTypes)}function Nr(e){kr(Cr),kr(Sr)}function Mr(e){kr(Cr),kr(Sr)}function Lr(e,t,n){Sr.current!==Er&&l("168"),Tr(Sr,t),Tr(Cr,n)}function Ar(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||l("108",at(t)||"Unknown",i);return o({},n,r)}function Fr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Er,Pr=Sr.current,Tr(Sr,t),Tr(Cr,Cr.current),!0}function Ir(e,t,n){var r=e.stateNode;r||l("169"),n?(t=Ar(e,t,Pr),r.__reactInternalMemoizedMergedChildContext=t,kr(Cr),kr(Sr),Tr(Sr,t)):kr(Cr),Tr(Cr,n)}var Ur=null,Dr=null;function zr(e){return function(t){try{return e(t)}catch(e){}}}function Wr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Wr(e,t,n,r)}function Vr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Br(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $r(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Vr(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case Qe:return qr(n.children,o,i,t);case et:return Yr(n,3|o,i,t);case Ge:return Yr(n,2|o,i,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:a=10;break e;case Ze:a=9;break e;case tt:a=11;break e;case rt:a=14;break e;case ot:a=16,r=null;break e}l("130",null==e?e:typeof e,"")}return(t=Hr(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function qr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Yr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ge:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Kr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Qr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Zr(t,e)}function Xr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Zr(t,e)}function Jr(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Zr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var eo=!1;function to(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function io(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=to(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=to(e.memoizedState),o=n.updateQueue=to(n.memoizedState)):r=e.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,t):null===r.lastUpdate||null===o.lastUpdate?(oo(r,t),oo(o,t)):(oo(r,t),o.lastUpdate=t)}function lo(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=to(e.memoizedState):ao(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ao(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=no(t)),t}function uo(e,t,n,r,i,l){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(l,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(l,r,i):e))break;return o({},r,i);case 2:eo=!0}return r}function so(e,t,n,r,o){eo=!1;for(var i=(t=ao(e,t)).baseState,l=null,a=0,u=t.firstUpdate,s=i;null!==u;){var c=u.expirationTime;c<o?(null===l&&(l=u,i=s),a<c&&(a=c)):(s=uo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var d=u.expirationTime;d<o?(null===c&&(c=u,null===l&&(i=s)),a<d&&(a=d)):(s=uo(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===l&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===l&&null===c&&(i=s),t.baseState=i,t.firstUpdate=l,t.firstCapturedUpdate=c,e.expirationTime=a,e.memoizedState=s}function co(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),fo(t.firstEffect,n),t.firstEffect=t.lastEffect=null,fo(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function fo(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&l("191",n),n.call(r)}e=e.nextEffect}}function po(e,t){return{value:e,source:t,stack:ut(t)}}var mo={current:null},ho=null,yo=null,bo=null;function vo(e,t){var n=e.type._context;Tr(mo,n._currentValue),n._currentValue=t}function _o(e){var t=mo.current;kr(mo),e.type._context._currentValue=t}function go(e){ho=e,bo=yo=null,e.firstContextDependency=null}function jo(e,t){return bo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(bo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===yo?(null===ho&&l("293"),ho.firstContextDependency=yo=t):yo=yo.next=t),e._currentValue}var wo={},xo={current:wo},ko={current:wo},To={current:wo};function Eo(e){return e===wo&&l("174"),e}function So(e,t){Tr(To,t),Tr(ko,e),Tr(xo,wo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}kr(xo),Tr(xo,t)}function Co(e){kr(xo),kr(ko),kr(To)}function Po(e){Eo(To.current);var t=Eo(xo.current),n=er(t,e.type);t!==n&&(Tr(ko,e),Tr(xo,n))}function Oo(e){ko.current===e&&(kr(xo),kr(ko))}function Ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var No=Be.ReactCurrentOwner,Mo=(new r.Component).refs;function Lo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=El(),o=ro(r=Ji(r,e));o.payload=t,null!=n&&(o.callback=n),Yi(),io(e,o),tl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=El(),o=ro(r=Ji(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),Yi(),io(e,o),tl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=El(),r=ro(n=Ji(n,e));r.tag=2,null!=t&&(r.callback=t),Yi(),io(e,r),tl(e,n)}};function Fo(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function Io(e,t,n){var r=!1,o=Er,i=t.contextType;return"object"==typeof i&&null!==i?i=No.currentDispatcher.readContext(i):(o=Rr(t)?Pr:Sr.current,i=(r=null!=(r=t.contextTypes))?Or(e,o):Er),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Uo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ao.enqueueReplaceState(t,t.state,null)}function Do(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Mo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=No.currentDispatcher.readContext(i):(i=Rr(t)?Pr:Sr.current,o.context=Or(e,i)),null!==(i=e.updateQueue)&&(so(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Lo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(so(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var zo=Array.isArray;function Wo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&l("289"),r=n.stateNode),r||l("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===Mo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&l("284"),n._owner||l("290",e)}return e}function Ho(e,t){"textarea"!==e.type&&l("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Vo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Br(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Wo(e,t,n),r.return=e,r):((r=$r(n.type,n.key,n.props,null,e.mode,r)).ref=Wo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,i){return null===t||7!==t.tag?((t=qr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Kr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=$r(t.type,t.key,t.props,null,e.mode,n)).ref=Wo(e,null,t),n.return=e,n;case Ke:return(t=Qr(t,e.mode,n)).return=e,t}if(zo(t)||lt(t))return(t=qr(t,e.mode,n,null)).return=e,t;Ho(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===Qe?d(e,t,n.props.children,r,o):s(e,t,n,r):null;case Ke:return n.key===o?c(e,t,n,r):null}if(zo(n)||lt(n))return null!==o?null:d(e,t,n,r,null);Ho(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===Qe?d(t,e,r.props.children,o,r.key):s(t,e,r,o);case Ke:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(zo(r)||lt(r))return d(t,e=e.get(n)||null,r,o,null);Ho(t,r)}return null}function h(o,l,a,u){for(var s=null,c=null,d=l,h=l=0,y=null;null!==d&&h<a.length;h++){d.index>h?(y=d,d=null):y=d.sibling;var b=p(o,d,a[h],u);if(null===b){null===d&&(d=y);break}e&&d&&null===b.alternate&&t(o,d),l=i(b,l,h),null===c?s=b:c.sibling=b,c=b,d=y}if(h===a.length)return n(o,d),s;if(null===d){for(;h<a.length;h++)(d=f(o,a[h],u))&&(l=i(d,l,h),null===c?s=d:c.sibling=d,c=d);return s}for(d=r(o,d);h<a.length;h++)(y=m(d,o,h,a[h],u))&&(e&&null!==y.alternate&&d.delete(null===y.key?h:y.key),l=i(y,l,h),null===c?s=y:c.sibling=y,c=y);return e&&d.forEach(function(e){return t(o,e)}),s}function y(o,a,u,s){var c=lt(u);"function"!=typeof c&&l("150"),null==(u=c.call(u))&&l("151");for(var d=c=null,h=a,y=a=0,b=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(b=h,h=null):b=h.sibling;var _=p(o,h,v.value,s);if(null===_){h||(h=b);break}e&&h&&null===_.alternate&&t(o,h),a=i(_,a,y),null===d?c=_:d.sibling=_,d=_,h=b}if(v.done)return n(o,h),c;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=f(o,v.value,s))&&(a=i(v,a,y),null===d?c=v:d.sibling=v,d=v);return c}for(h=r(o,h);!v.done;y++,v=u.next())null!==(v=m(h,o,y,v.value,s))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),a=i(v,a,y),null===d?c=v:d.sibling=v,d=v);return e&&h.forEach(function(e){return t(o,e)}),c}return function(e,r,i,u){var s="object"==typeof i&&null!==i&&i.type===Qe&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case Ye:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?i.type===Qe:s.elementType===i.type){n(e,s.sibling),(r=o(s,i.type===Qe?i.props.children:i.props)).ref=Wo(e,s,i),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}i.type===Qe?((r=qr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=$r(i.type,i.key,i.props,null,e.mode,u)).ref=Wo(e,r,i),u.return=e,e=u)}return a(e);case Ke:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Qr(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Kr(i,e.mode,u)).return=e,e=r),a(e);if(zo(i))return h(e,r,i,u);if(lt(i))return y(e,r,i,u);if(c&&Ho(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:l("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var Bo=Vo(!0),$o=Vo(!1),qo=null,Yo=null,Ko=!1;function Qo(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Go(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Xo(e){if(Ko){var t=Yo;if(t){var n=t;if(!Go(e,t)){if(!(t=gr(n))||!Go(e,t))return e.effectTag|=2,Ko=!1,void(qo=e);Qo(qo,n)}qo=e,Yo=jr(t)}else e.effectTag|=2,Ko=!1,qo=e}}function Jo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;qo=e}function Zo(e){if(e!==qo)return!1;if(!Ko)return Jo(e),Ko=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!br(t,e.memoizedProps))for(t=Yo;t;)Qo(e,t),t=gr(t);return Jo(e),Yo=qo?gr(e.stateNode):null,!0}function ei(){Yo=qo=null,Ko=!1}var ti=Be.ReactCurrentOwner;function ni(e,t,n,r){t.child=null===e?$o(t,null,n,r):Bo(t,e.child,n,r)}function ri(e,t,n,r,o){n=n.render;var i=t.ref;return go(t),r=n(r,i),t.effectTag|=1,ni(e,t,r,o),t.child}function oi(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Vr(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$r(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,ii(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?fi(e,t,i):(t.effectTag|=1,(e=Br(l,r)).ref=t.ref,e.return=t,t.child=e)}function ii(e,t,n,r,o,i){return null!==e&&o<i&&en(e.memoizedProps,r)&&e.ref===t.ref?fi(e,t,i):ai(e,t,n,r,i)}function li(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ai(e,t,n,r,o){var i=Rr(n)?Pr:Sr.current;return i=Or(t,i),go(t),n=n(r,i),t.effectTag|=1,ni(e,t,n,o),t.child}function ui(e,t,n,r,o){if(Rr(n)){var i=!0;Fr(t)}else i=!1;if(go(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Io(t,n,r),Do(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,s=n.contextType;"object"==typeof s&&null!==s?s=No.currentDispatcher.readContext(s):s=Or(t,s=Rr(n)?Pr:Sr.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;d||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==s)&&Uo(t,l,r,s),eo=!1;var f=t.memoizedState;u=l.state=f;var p=t.updateQueue;null!==p&&(so(t,p,r,l,o),u=t.memoizedState),a!==r||f!==u||Cr.current||eo?("function"==typeof c&&(Lo(t,n,c,r),u=t.memoizedState),(a=eo||Fo(t,n,a,r,f,u,s))?(d||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=s,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,a=t.memoizedProps,l.props=t.type===t.elementType?a:Ro(t.type,a),u=l.context,"object"==typeof(s=n.contextType)&&null!==s?s=No.currentDispatcher.readContext(s):s=Or(t,s=Rr(n)?Pr:Sr.current),(d="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==s)&&Uo(t,l,r,s),eo=!1,u=t.memoizedState,f=l.state=u,null!==(p=t.updateQueue)&&(so(t,p,r,l,o),f=t.memoizedState),a!==r||u!==f||Cr.current||eo?("function"==typeof c&&(Lo(t,n,c,r),f=t.memoizedState),(c=eo||Fo(t,n,a,r,u,f,s))?(d||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,f,s),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,f,s)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),l.props=r,l.state=f,l.context=s,r=c):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return si(e,t,n,r,i,o)}function si(e,t,n,r,o,i){li(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&Ir(t,n,!1),fi(e,t,i);r=t.stateNode,ti.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Bo(t,e.child,null,i),t.child=Bo(t,null,a,i)):ni(e,t,a,i),t.memoizedState=r.state,o&&Ir(t,n,!0),t.child}function ci(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),So(e,t.containerInfo)}function di(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var l=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},l=!0,t.effectTag&=-65;if(null===e)if(l){var a=o.fallback;e=qr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=qr(a,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=$o(t,null,o.children,n);else null!==e.memoizedState?(a=(r=e.child).sibling,l?(n=o.fallback,o=Br(r,r.pendingProps),0==(1&t.mode)&&((l=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=l)),r=o.sibling=Br(a,n,a.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=Bo(t,r.child,o.children,n)):(a=e.child,l?(l=o.fallback,(o=qr(null,r,0,null)).child=a,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=qr(l,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=Bo(t,a,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function fi(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&l("153"),null!==t.child){for(n=Br(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Br(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function pi(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Cr.current&&r<n){switch(t.tag){case 3:ci(t),ei();break;case 5:Po(t);break;case 1:Rr(t.type)&&Fr(t);break;case 4:So(t,t.stateNode.containerInfo);break;case 10:vo(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?di(e,t,n):null!==(t=fi(e,t,n))?t.sibling:null}return fi(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Or(t,Sr.current);if(go(t),o=r(e,o),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Rr(r)){var i=!0;Fr(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var a=r.getDerivedStateFromProps;"function"==typeof a&&Lo(t,r,a,e),o.updater=Ao,t.stateNode=o,o._reactInternalFiber=t,Do(t,r,e,n),t=si(null,t,r,!0,i,n)}else t.tag=0,ni(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Vr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=Ro(e,i),a=void 0,o){case 0:a=ai(null,t,e,i,n);break;case 1:a=ui(null,t,e,i,n);break;case 11:a=ri(null,t,e,i,n);break;case 14:a=oi(null,t,e,Ro(e.type,i),r,n);break;default:l("306",e,"")}return a;case 0:return r=t.type,o=t.pendingProps,ai(e,t,r,o=t.elementType===r?o:Ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,ui(e,t,r,o=t.elementType===r?o:Ro(r,o),n);case 3:return ci(t),null===(r=t.updateQueue)&&l("282"),o=null!==(o=t.memoizedState)?o.element:null,so(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ei(),t=fi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(Yo=jr(t.stateNode.containerInfo),qo=t,o=Ko=!0),o?(t.effectTag|=2,t.child=$o(t,null,r,n)):(ni(e,t,r,n),ei()),t=t.child),t;case 5:return Po(t),null===e&&Xo(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,br(r,o)?a=null:null!==i&&br(r,i)&&(t.effectTag|=16),li(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=1,t=null):(ni(e,t,a,n),t=t.child),t;case 6:return null===e&&Xo(t),null;case 13:return di(e,t,n);case 4:return So(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Bo(t,null,r,n):ni(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ri(e,t,r,o=t.elementType===r?o:Ro(r,o),n);case 7:return ni(e,t,t.pendingProps,n),t.child;case 8:case 12:return ni(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,a=t.memoizedProps,vo(t,i=o.value),null!==a){var u=a.value;if(0===(i=u===i&&(0!==u||1/u==1/i)||u!=u&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!Cr.current){t=fi(e,t,n);break e}}else for(null!==(a=t.child)&&(a.return=t);null!==a;){if(null!==(u=a.firstContextDependency))do{if(u.context===r&&0!=(u.observedBits&i)){if(1===a.tag){var s=ro(n);s.tag=2,io(a,s)}a.expirationTime<n&&(a.expirationTime=n),null!==(s=a.alternate)&&s.expirationTime<n&&(s.expirationTime=n);for(var c=a.return;null!==c;){if(s=c.alternate,c.childExpirationTime<n)c.childExpirationTime=n,null!==s&&s.childExpirationTime<n&&(s.childExpirationTime=n);else{if(!(null!==s&&s.childExpirationTime<n))break;s.childExpirationTime=n}c=c.return}}s=a.child,u=u.next}while(null!==u);else s=10===a.tag&&a.type===t.type?null:a.child;if(null!==s)s.return=a;else for(s=a;null!==s;){if(s===t){s=null;break}if(null!==(a=s.sibling)){a.return=s.return,s=a;break}s=s.return}a=s}}ni(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,go(t),r=r(o=jo(o,i.unstable_observedBits)),t.effectTag|=1,ni(e,t,r,n),t.child;case 14:return i=Ro(o=t.type,t.pendingProps),oi(e,t,o,i=Ro(o.type,i),r,n);case 15:return ii(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Rr(r)?(e=!0,Fr(t)):e=!1,go(t),Io(t,r,o),Do(t,r,o,n),si(null,t,r,!0,e,n);default:l("156")}}function mi(e){e.effectTag|=4}var hi=void 0,yi=void 0,bi=void 0,vi=void 0;hi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},yi=function(){},bi=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a=t.stateNode;switch(Eo(xo.current),e=null,n){case"input":l=_t(a,l),r=_t(a,r),e=[];break;case"option":l=qn(a,l),r=qn(a,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Kn(a,l),r=Kn(a,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(a.onclick=pr)}cr(n,r),a=n=void 0;var u=null;for(n in l)if(!r.hasOwnProperty(n)&&l.hasOwnProperty(n)&&null!=l[n])if("style"===n){var s=l[n];for(a in s)s.hasOwnProperty(a)&&(u||(u={}),u[a]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(_.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=l?l[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(a in s)!s.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(u||(u={}),u[a]="");for(a in c)c.hasOwnProperty(a)&&s[a]!==c[a]&&(u||(u={}),u[a]=c[a])}else u||(e||(e=[]),e.push(n,u)),u=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(_.hasOwnProperty(n)?(null!=c&&fr(i,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&mi(t)}},vi=function(e,t,n,r){n!==r&&mi(t)};var _i="function"==typeof WeakSet?WeakSet:Set;function gi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&at(n.type),t=t.value,null!==e&&1===e.tag&&at(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function ji(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Xi(e,t)}else t.current=null}function wi(e){switch("function"==typeof Dr&&Dr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Xi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(ji(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Xi(e,t)}break;case 5:ji(e);break;case 4:Ti(e)}}function xi(e){return 5===e.tag||3===e.tag||4===e.tag}function ki(e){e:{for(var t=e.return;null!==t;){if(xi(t)){var n=t;break e}t=t.return}l("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:l("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||xi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,a=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(a,u):i.insertBefore(a,u)}else t.insertBefore(o.stateNode,n);else r?(a=t,u=o.stateNode,8===a.nodeType?(i=a.parentNode).insertBefore(u,a):(i=a).appendChild(u),null!=(a=a._reactRootContainer)||null!==i.onclick||(i.onclick=pr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ti(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&l("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,a=i;;)if(wi(a),null!==a.child&&4!==a.tag)a.child.return=a,a=a.child;else{if(a===i)break;for(;null===a.sibling;){if(null===a.return||a.return===i)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):wi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ei(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[L]=o,"input"===n&&"radio"===o.type&&null!=o.name&&jt(e,o),dr(n,r),r=dr(n,o);for(var i=0;i<t.length;i+=2){var l=t[i],a=t[i+1];"style"===l?ur(e,a):"dangerouslySetInnerHTML"===l?rr(e,a):"children"===l?or(e,a):bt(e,l,a,r)}switch(n){case"input":wt(e,o);break;case"textarea":Gn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Yn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Yn(e,!!o.multiple,o.defaultValue,!0):Yn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&l("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=El())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ar("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var a=t.stateNode;null===a&&(a=t.stateNode=new _i),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ji(t=El(),e),null!==(e=el(e,t))&&(Gr(e,t),0!==(t=e.expirationTime)&&Sl(e,t))}.bind(null,t,e);a.has(e)||(a.add(e),e.then(n,n))})}break;case 17:break;default:l("163")}}var Si="function"==typeof WeakMap?WeakMap:Map;function Ci(e,t,n){(n=ro(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Fl(r),gi(e,t)},n}function Pi(e,t,n){(n=ro(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===$i?$i=new Set([this]):$i.add(this));var n=t.value,o=t.stack;gi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Oi(e){switch(e.tag){case 1:Rr(e.type)&&Nr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Co(),Mr(),0!=(64&(t=e.effectTag))&&l("285"),e.effectTag=-2049&t|64,e;case 5:return Oo(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Co(),null;case 10:return _o(e),null;default:return null}}var Ri={readContext:jo},Ni=Be.ReactCurrentOwner,Mi=1073741822,Li=0,Ai=!1,Fi=null,Ii=null,Ui=0,Di=-1,zi=!1,Wi=null,Hi=!1,Vi=null,Bi=null,$i=null;function qi(){if(null!==Fi)for(var e=Fi.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Nr();break;case 3:Co(),Mr();break;case 5:Oo(t);break;case 4:Co();break;case 10:_o(t)}e=e.return}Ii=null,Ui=0,Di=-1,zi=!1,Fi=null}function Yi(){null!==Bi&&(i.unstable_cancelCallback(Vi),Bi())}function Ki(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Fi=e;e:{var i=t,a=Ui,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Rr(t.type)&&Nr();break;case 3:Co(),Mr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Zo(t),t.effectTag&=-3),yi(t);break;case 5:Oo(t);var s=Eo(To.current);if(a=t.type,null!==i&&null!=t.stateNode)bi(i,t,a,u,s),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var c=Eo(xo.current);if(Zo(t)){i=(u=t).stateNode;var d=u.type,f=u.memoizedProps,p=s;switch(i[M]=u,i[L]=f,a=void 0,s=d){case"iframe":case"object":Tn("load",i);break;case"video":case"audio":for(d=0;d<te.length;d++)Tn(te[d],i);break;case"source":Tn("error",i);break;case"img":case"image":case"link":Tn("error",i),Tn("load",i);break;case"form":Tn("reset",i),Tn("submit",i);break;case"details":Tn("toggle",i);break;case"input":gt(i,f),Tn("invalid",i),fr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!f.multiple},Tn("invalid",i),fr(p,"onChange");break;case"textarea":Qn(i,f),Tn("invalid",i),fr(p,"onChange")}for(a in cr(s,f),d=null,f)f.hasOwnProperty(a)&&(c=f[a],"children"===a?"string"==typeof c?i.textContent!==c&&(d=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(d=["children",""+c]):_.hasOwnProperty(a)&&null!=c&&fr(p,a));switch(s){case"input":He(i),xt(i,f,!0);break;case"textarea":He(i),Xn(i);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(i.onclick=pr)}a=d,u.updateQueue=a,(u=null!==a)&&mi(t)}else{f=t,i=a,p=u,d=9===s.nodeType?s:s.ownerDocument,c===Jn.html&&(c=Zn(i)),c===Jn.html?"script"===i?((i=d.createElement("div")).innerHTML="<script><\/script>",d=i.removeChild(i.firstChild)):"string"==typeof p.is?d=d.createElement(i,{is:p.is}):(d=d.createElement(i),"select"===i&&p.multiple&&(d.multiple=!0)):d=d.createElementNS(c,i),(i=d)[M]=f,i[L]=u,hi(i,t,!1,!1),p=i;var m=s,h=dr(d=a,f=u);switch(d){case"iframe":case"object":Tn("load",p),s=f;break;case"video":case"audio":for(s=0;s<te.length;s++)Tn(te[s],p);s=f;break;case"source":Tn("error",p),s=f;break;case"img":case"image":case"link":Tn("error",p),Tn("load",p),s=f;break;case"form":Tn("reset",p),Tn("submit",p),s=f;break;case"details":Tn("toggle",p),s=f;break;case"input":gt(p,f),s=_t(p,f),Tn("invalid",p),fr(m,"onChange");break;case"option":s=qn(p,f);break;case"select":p._wrapperState={wasMultiple:!!f.multiple},s=o({},f,{value:void 0}),Tn("invalid",p),fr(m,"onChange");break;case"textarea":Qn(p,f),s=Kn(p,f),Tn("invalid",p),fr(m,"onChange");break;default:s=f}cr(d,s),c=void 0;var y=d,b=p,v=s;for(c in v)if(v.hasOwnProperty(c)){var g=v[c];"style"===c?ur(b,g):"dangerouslySetInnerHTML"===c?null!=(g=g?g.__html:void 0)&&rr(b,g):"children"===c?"string"==typeof g?("textarea"!==y||""!==g)&&or(b,g):"number"==typeof g&&or(b,""+g):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(_.hasOwnProperty(c)?null!=g&&fr(m,c):null!=g&&bt(b,c,g,h))}switch(d){case"input":He(p),xt(p,f,!1);break;case"textarea":He(p),Xn(p);break;case"option":null!=f.value&&p.setAttribute("value",""+vt(f.value));break;case"select":(s=p).multiple=!!f.multiple,null!=(p=f.value)?Yn(s,!!f.multiple,p,!1):null!=f.defaultValue&&Yn(s,!!f.multiple,f.defaultValue,!0);break;default:"function"==typeof s.onClick&&(p.onclick=pr)}(u=yr(a,u))&&mi(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&l("166");break;case 6:i&&null!=t.stateNode?vi(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&l("166")),i=Eo(To.current),Eo(xo.current),Zo(t)?(a=(u=t).stateNode,i=u.memoizedProps,a[M]=u,(u=a.nodeValue!==i)&&mi(t)):(a=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[M]=t,a.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=a,Fi=t;break e}u=null!==u,a=null!==i&&null!==i.memoizedState,null!==i&&!u&&a&&(null!==(i=i.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=i,i.nextEffect=s):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u!==a||0==(1&t.effectTag)&&u)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Co(),yi(t);break;case 10:_o(t);break;case 9:case 14:break;case 17:Rr(t.type)&&Nr();break;default:l("156")}Fi=null}if(t=e,1===Ui||1!==t.childExpirationTime){for(u=0,a=t.child;null!==a;)(i=a.expirationTime)>u&&(u=i),(s=a.childExpirationTime)>u&&(u=s),a=a.sibling;t.childExpirationTime=u}if(null!==Fi)return Fi;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Oi(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Qi(e){var t=pi(e.alternate,e,Ui);return e.memoizedProps=e.pendingProps,null===t&&(t=Ki(e)),Ni.current=null,t}function Gi(e,t){Ai&&l("243"),Yi(),Ai=!0,Ni.currentDispatcher=Ri;var n=e.nextExpirationTimeToWorkOn;n===Ui&&e===Ii&&null!==Fi||(qi(),Ui=n,Fi=Br((Ii=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==Fi&&!Ol();)Fi=Qi(Fi);else for(;null!==Fi;)Fi=Qi(Fi)}catch(t){if(bo=yo=ho=null,null===Fi)r=!0,Fl(t);else{null===Fi&&l("271");var o=Fi,i=o.return;if(null!==i){e:{var a=e,u=i,s=o,c=t;if(i=Ui,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==c&&"object"==typeof c&&"function"==typeof c.then){var d=c;c=u;var f=-1,p=-1;do{if(13===c.tag){var m=c.alternate;if(null!==m&&null!==(m=m.memoizedState)){p=10*(1073741822-m.timedOutAt);break}"number"==typeof(m=c.pendingProps.maxDuration)&&(0>=m?f=0:(-1===f||m<f)&&(f=m))}c=c.return}while(null!==c);c=u;do{if((m=13===c.tag)&&(m=void 0!==c.memoizedProps.fallback&&null===c.memoizedState),m){if(null===(u=c.updateQueue)?c.updateQueue=new Set([d]):u.add(d),0==(1&c.mode)){c.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((i=ro(1073741823)).tag=2,io(s,i))),s.expirationTime=1073741823;break e}null===(s=a.pingCache)?(s=a.pingCache=new Si,u=new Set,s.set(d,u)):void 0===(u=s.get(d))&&(u=new Set,s.set(d,u)),u.has(i)||(u.add(i),s=Zi.bind(null,a,d,i),d.then(s,s)),-1===f?a=1073741823:(-1===p&&(p=10*(1073741822-Jr(a,i))-5e3),a=p+f),0<=a&&Di<a&&(Di=a),c.effectTag|=2048,c.expirationTime=i;break e}c=c.return}while(null!==c);c=Error((at(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}zi=!0,c=po(c,s),a=u;do{switch(a.tag){case 3:a.effectTag|=2048,a.expirationTime=i,lo(a,i=Ci(a,c,i));break e;case 1:if(d=c,f=a.type,p=a.stateNode,0==(64&a.effectTag)&&("function"==typeof f.getDerivedStateFromError||null!==p&&"function"==typeof p.componentDidCatch&&(null===$i||!$i.has(p)))){a.effectTag|=2048,a.expirationTime=i,lo(a,i=Pi(a,d,i));break e}}a=a.return}while(null!==a)}Fi=Ki(o);continue}r=!0,Fl(t)}}break}if(Ai=!1,bo=yo=ho=Ni.currentDispatcher=null,r)Ii=null,e.finishedWork=null;else if(null!==Fi)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&l("281"),Ii=null,zi){if(o=e.latestPendingTime,i=e.latestSuspendedTime,a=e.latestPingedTime,0!==o&&o<n||0!==i&&i<n||0!==a&&a<n)return Xr(e,n),void Tl(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void Tl(e,r,n,t,-1)}t&&-1!==Di?(Xr(e,n),(t=10*(1073741822-Jr(e,n)))<Di&&(Di=t),t=10*(1073741822-El()),t=Di-t,Tl(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Xi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$i||!$i.has(r)))return io(n,e=Pi(n,e=po(t,e),1073741823)),void tl(n,1073741823);break;case 3:return io(n,e=Ci(n,e=po(t,e),1073741823)),void tl(n,1073741823)}n=n.return}3===e.tag&&(io(e,n=Ci(e,n=po(t,e),1073741823)),tl(e,1073741823))}function Ji(e,t){return 0!==Li?e=Li:Ai?e=Hi?1073741823:Ui:1&t.mode?(e=hl?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==Ii&&e===Ui&&--e):e=1073741823,hl&&(0===cl||e<cl)&&(cl=e),e}function Zi(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Ii&&Ui===n?Ii=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),Zr(n,e),0!==(n=e.expirationTime)&&Sl(e,n)))}function el(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function tl(e,t){null!==(e=el(e,t))&&(!Ai&&0!==Ui&&t>Ui&&qi(),Gr(e,t),Ai&&!Hi&&Ii===e||Sl(e,e.expirationTime),jl>gl&&(jl=0,l("185")))}function nl(e,t,n,r,o){var i=Li;Li=1073741823;try{return e(t,n,r,o)}finally{Li=i}}var rl=null,ol=null,il=0,ll=void 0,al=!1,ul=null,sl=0,cl=0,dl=!1,fl=null,pl=!1,ml=!1,hl=!1,yl=null,bl=i.unstable_now(),vl=1073741822-(bl/10|0),_l=vl,gl=50,jl=0,wl=null;function xl(){vl=1073741822-((i.unstable_now()-bl)/10|0)}function kl(e,t){if(0!==il){if(t<il)return;null!==ll&&i.unstable_cancelCallback(ll)}il=t,e=i.unstable_now()-bl,ll=i.unstable_scheduleCallback(Rl,{timeout:10*(1073741822-t)-e})}function Tl(e,t,n,r,o){e.expirationTime=r,0!==o||Ol()?0<o&&(e.timeoutHandle=vr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,xl(),_l=vl,Ml(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function El(){return al?_l:(Cl(),0!==sl&&1!==sl||(xl(),_l=vl),_l)}function Sl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===ol?(rl=ol=e,e.nextScheduledRoot=e):(ol=ol.nextScheduledRoot=e).nextScheduledRoot=rl):t>e.expirationTime&&(e.expirationTime=t),al||(pl?ml&&(ul=e,sl=1073741823,Ll(e,1073741823,!1)):1073741823===t?Nl(1073741823,!1):kl(e,t))}function Cl(){var e=0,t=null;if(null!==ol)for(var n=ol,r=rl;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===ol)&&l("244"),r===r.nextScheduledRoot){rl=ol=r.nextScheduledRoot=null;break}if(r===rl)rl=o=r.nextScheduledRoot,ol.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ol){(ol=n).nextScheduledRoot=rl,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===ol)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ul=t,sl=e}var Pl=!1;function Ol(){return!!Pl||!!i.unstable_shouldYield()&&(Pl=!0)}function Rl(){try{if(!Ol()&&null!==rl){xl();var e=rl;do{var t=e.expirationTime;0!==t&&vl<=t&&(e.nextExpirationTimeToWorkOn=vl),e=e.nextScheduledRoot}while(e!==rl)}Nl(0,!0)}finally{Pl=!1}}function Nl(e,t){if(Cl(),t)for(xl(),_l=vl;null!==ul&&0!==sl&&e<=sl&&!(Pl&&vl>sl);)Ll(ul,sl,vl>sl),Cl(),xl(),_l=vl;else for(;null!==ul&&0!==sl&&e<=sl;)Ll(ul,sl,!1),Cl();if(t&&(il=0,ll=null),0!==sl&&kl(ul,sl),jl=0,wl=null,null!==yl)for(e=yl,yl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){dl||(dl=!0,fl=e)}}if(dl)throw e=fl,fl=null,dl=!1,e}function Ml(e,t){al&&l("253"),ul=e,sl=t,Ll(e,t,!1),Nl(1073741823,!1)}function Ll(e,t,n){if(al&&l("245"),al=!0,n){var r=e.finishedWork;null!==r?Al(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,_r(r)),Gi(e,n),null!==(r=e.finishedWork)&&(Ol()?e.finishedWork=r:Al(e,r,t)))}else null!==(r=e.finishedWork)?Al(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,_r(r)),Gi(e,n),null!==(r=e.finishedWork)&&Al(e,r,t));al=!1}function Al(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===yl?yl=[r]:yl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===wl?jl++:(wl=e,jl=0),Hi=Ai=!0,e.current===t&&l("177"),0===(n=e.pendingCommitExpirationTime)&&l("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(r<e.latestPingedTime&&(e.latestPingedTime=0),0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Gr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,r)):r>o&&Gr(e,r)),Zr(0,e),Ni.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=kn,In(o=Fn())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var a=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(a&&0!==a.rangeCount){i=a.anchorNode;var u=a.anchorOffset,s=a.focusNode;a=a.focusOffset;try{i.nodeType,s.nodeType}catch(e){i=null;break e}var c=0,d=-1,f=-1,p=0,m=0,h=o,y=null;t:for(;;){for(var b;h!==i||0!==u&&3!==h.nodeType||(d=c+u),h!==s||0!==a&&3!==h.nodeType||(f=c+a),3===h.nodeType&&(c+=h.nodeValue.length),null!==(b=h.firstChild);)y=h,h=b;for(;;){if(h===o)break t;if(y===i&&++p===u&&(d=c),y===s&&++m===a&&(f=c),null!==(b=h.nextSibling))break;y=(h=y).parentNode}h=b}i=-1===d||-1===f?null:{start:d,end:f}}else i=null}i=i||{start:0,end:0}}else i=null;for(hr={focusedElem:o,selectionRange:i},kn=!1,Wi=r;null!==Wi;){o=!1,i=void 0;try{for(;null!==Wi;){if(256&Wi.effectTag)e:{var v=Wi.alternate;switch((u=Wi).tag){case 0:case 11:case 15:break e;case 1:if(256&u.effectTag&&null!==v){var _=v.memoizedProps,g=v.memoizedState,j=u.stateNode,w=j.getSnapshotBeforeUpdate(u.elementType===u.type?_:Ro(u.type,_),g);j.__reactInternalSnapshotBeforeUpdate=w}break e;case 3:case 5:case 6:case 4:case 17:break e;default:l("163")}}Wi=Wi.nextEffect}}catch(e){o=!0,i=e}o&&(null===Wi&&l("178"),Xi(Wi,i),null!==Wi&&(Wi=Wi.nextEffect))}for(Wi=r;null!==Wi;){v=!1,_=void 0;try{for(;null!==Wi;){var x=Wi.effectTag;if(16&x&&or(Wi.stateNode,""),128&x){var k=Wi.alternate;if(null!==k){var T=k.ref;null!==T&&("function"==typeof T?T(null):T.current=null)}}switch(14&x){case 2:ki(Wi),Wi.effectTag&=-3;break;case 6:ki(Wi),Wi.effectTag&=-3,Ei(Wi.alternate,Wi);break;case 4:Ei(Wi.alternate,Wi);break;case 8:Ti(g=Wi),g.return=null,g.child=null,g.memoizedState=null,g.updateQueue=null;var E=g.alternate;null!==E&&(E.return=null,E.child=null,E.memoizedState=null,E.updateQueue=null)}Wi=Wi.nextEffect}}catch(e){v=!0,_=e}v&&(null===Wi&&l("178"),Xi(Wi,_),null!==Wi&&(Wi=Wi.nextEffect))}if(T=hr,k=Fn(),x=T.focusedElem,v=T.selectionRange,k!==x&&x&&x.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==v&&In(x)&&(k=v.start,void 0===(T=v.end)&&(T=k),"selectionStart"in x?(x.selectionStart=k,x.selectionEnd=Math.min(T,x.value.length)):(T=(k=x.ownerDocument||document)&&k.defaultView||window).getSelection&&(T=T.getSelection(),_=x.textContent.length,E=Math.min(v.start,_),v=void 0===v.end?E:Math.min(v.end,_),!T.extend&&E>v&&(_=v,v=E,E=_),_=An(x,E),g=An(x,v),_&&g&&(1!==T.rangeCount||T.anchorNode!==_.node||T.anchorOffset!==_.offset||T.focusNode!==g.node||T.focusOffset!==g.offset)&&((k=k.createRange()).setStart(_.node,_.offset),T.removeAllRanges(),E>v?(T.addRange(k),T.extend(g.node,g.offset)):(k.setEnd(g.node,g.offset),T.addRange(k))))),k=[];for(T=x;T=T.parentNode;)1===T.nodeType&&k.push({element:T,left:T.scrollLeft,top:T.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<k.length;x++)(T=k[x]).element.scrollLeft=T.left,T.element.scrollTop=T.top}for(hr=null,kn=!!mr,mr=null,e.current=t,Wi=r;null!==Wi;){r=!1,x=void 0;try{for(k=n;null!==Wi;){var S=Wi.effectTag;if(36&S){var C=Wi.alternate;switch(E=k,(T=Wi).tag){case 0:case 11:case 15:break;case 1:var P=T.stateNode;if(4&T.effectTag)if(null===C)P.componentDidMount();else{var O=T.elementType===T.type?C.memoizedProps:Ro(T.type,C.memoizedProps);P.componentDidUpdate(O,C.memoizedState,P.__reactInternalSnapshotBeforeUpdate)}var R=T.updateQueue;null!==R&&co(0,R,P);break;case 3:var N=T.updateQueue;if(null!==N){if(v=null,null!==T.child)switch(T.child.tag){case 5:v=T.child.stateNode;break;case 1:v=T.child.stateNode}co(0,N,v)}break;case 5:var M=T.stateNode;null===C&&4&T.effectTag&&yr(T.type,T.memoizedProps)&&M.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:l("163")}}if(128&S){var L=Wi.ref;if(null!==L){var A=Wi.stateNode;switch(Wi.tag){case 5:var F=A;break;default:F=A}"function"==typeof L?L(F):L.current=F}}Wi=Wi.nextEffect}}catch(e){r=!0,x=e}r&&(null===Wi&&l("178"),Xi(Wi,x),null!==Wi&&(Wi=Wi.nextEffect))}Ai=Hi=!1,"function"==typeof Ur&&Ur(t.stateNode),S=t.expirationTime,0===(t=(t=t.childExpirationTime)>S?t:S)&&($i=null),e.expirationTime=t,e.finishedWork=null}function Fl(e){null===ul&&l("246"),ul.expirationTime=0,dl||(dl=!0,fl=e)}function Il(e,t){var n=pl;pl=!0;try{return e(t)}finally{(pl=n)||al||Nl(1073741823,!1)}}function Ul(e,t){if(pl&&!ml){ml=!0;try{return e(t)}finally{ml=!1}}return e(t)}function Dl(e,t,n){if(hl)return e(t,n);pl||al||0===cl||(Nl(cl,!1),cl=0);var r=hl,o=pl;pl=hl=!0;try{return e(t,n)}finally{hl=r,(pl=o)||al||Nl(1073741823,!1)}}function zl(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||l("170");var a=n;do{switch(a.tag){case 3:a=a.stateNode.context;break t;case 1:if(Rr(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break t}}a=a.return}while(null!==a);l("171"),a=void 0}if(1===n.tag){var u=n.type;if(Rr(u)){n=Ar(n,u,a);break e}}n=a}else n=Er;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=ro(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Yi(),io(i,o),tl(i,r),r}function Wl(e,t,n,r){var o=t.current;return zl(e,t,n,o=Ji(El(),o),r)}function Hl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Vl(e){var t=1073741822-25*(1+((1073741822-El()+500)/25|0));t>=Mi&&(t=Mi-1),this._expirationTime=Mi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Bl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function $l(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Yl(e,t,n,r,o){ql(n)||l("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Hl(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new $l(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=Hl(i._internalRoot);u.call(e)}}Ul(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Hl(i._internalRoot)}function Kl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return ql(t)||l("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ee=function(e,t,n){switch(t){case"input":if(wt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=U(r);o||l("90"),Ve(r),wt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},Vl.prototype.render=function(e){this._defer||l("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Bl;return zl(e,t,null,n,r._onCommit),r},Vl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Vl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||l("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&l("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ml(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Vl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Bl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Bl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&l("191",n),n()}}},$l.prototype.render=function(e,t){var n=this._internalRoot,r=new Bl;return null!==(t=void 0===t?null:t)&&r.then(t),Wl(e,n,null,r._onCommit),r},$l.prototype.unmount=function(e){var t=this._internalRoot,n=new Bl;return null!==(e=void 0===e?null:e)&&n.then(e),Wl(null,t,null,n._onCommit),n},$l.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Bl;return null!==(n=void 0===n?null:n)&&o.then(n),Wl(t,r,e,o._onCommit),o},$l.prototype.createBatch=function(){var e=new Vl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ne=Il,Me=Dl,Le=function(){al||0===cl||(Nl(cl,!1),cl=0)};var Ql={createPortal:Kl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?l("188"):l("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Yl(null,e,t,!0,n)},render:function(e,t,n){return Yl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&l("38"),Yl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return ql(e)||l("40"),!!e._reactRootContainer&&(Ul(function(){Yl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Kl.apply(void 0,arguments)},unstable_batchedUpdates:Il,unstable_interactiveUpdates:Dl,flushSync:function(e,t){al&&l("187");var n=pl;pl=!0;try{return nl(e,t)}finally{pl=n,Nl(1073741823,!1)}},unstable_createRoot:function(e,t){return ql(e)||l("299","unstable_createRoot"),new $l(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=pl;pl=!0;try{nl(e)}finally{(pl=t)||al||Nl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[F,I,U,P.injectEventPluginsByName,v,B,function(e){E(e,V)},Oe,Re,Cn,R]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ur=zr(function(e){return t.onCommitFiberRoot(n,e)}),Dr=zr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:A,bundleType:0,version:"16.7.0",rendererPackageName:"react-dom"});var Gl={default:Ql},Xl=Gl&&Ql||Gl;e.exports=Xl.default||Xl},"./node_modules/react-dom/index.js":function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n("./node_modules/react-dom/cjs/react-dom.production.min.js")},"./node_modules/react-router-dom/es/index.js":function(e,t,n){"use strict";n.r(t);var r=n("./node_modules/warning/warning.js"),o=n.n(r),i=n("./node_modules/react/index.js"),l=n.n(i),a=n("./node_modules/prop-types/index.js"),u=n.n(a),s=n("./node_modules/history/node_modules/warning/browser.js"),c=n.n(s),d=n("./node_modules/invariant/browser.js"),f=n.n(d);function p(e){return"/"===e.charAt(0)}function m(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var h=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&p(e),i=t&&p(t),l=o||i;if(e&&p(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var a=void 0;if(r.length){var u=r[r.length-1];a="."===u||".."===u||""===u}else a=!1;for(var s=0,c=r.length;c>=0;c--){var d=r[c];"."===d?m(r,c):".."===d?(m(r,c),s++):s&&(m(r,c),s--)}if(!l)for(;s--;s)r.unshift("..");!l||""===r[0]||r[0]&&p(r[0])||r.unshift("");var f=r.join("/");return a&&"/"!==f.substr(-1)&&(f+="/"),f},y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var b=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":y(t);if(r!==(void 0===n?"undefined":y(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var l=Object.keys(t),a=Object.keys(n);return l.length===a.length&&l.every(function(r){return e(t[r],n[r])})}return!1},v=function(e){return"/"===e.charAt(0)?e:"/"+e},_=function(e){return"/"===e.charAt(0)?e.substr(1):e},g=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},j=function(e,t){return g(e,t)?e.substr(t.length):e},w=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},x=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},k=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},T=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=k({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=h(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},E=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&b(e.state,t.state)},S=function(){var e=null,t=[];return{setPrompt:function(t){return c()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):(c()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},C=!("undefined"==typeof window||!window.document||!window.document.createElement),P=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},O=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},R=function(e,t){return t(window.confirm(e))},N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},L=function(){try{return window.history.state||{}}catch(e){return{}}},A=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};f()(C,"Browser history needs a DOM");var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e.forceRefresh,l=void 0!==i&&i,a=e.getUserConfirmation,u=void 0===a?R:a,s=e.keyLength,d=void 0===s?6:s,p=e.basename?w(v(e.basename)):"",m=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return c()(!p||g(i,p),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+p+'".'),p&&(i=j(i,p)),T(i,r,n)},h=function(){return Math.random().toString(36).substr(2,d)},y=S(),b=function(e){M(B,e),B.length=n.length,y.notifyListeners(B.location,B.action)},_=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||A(m(e.state))},k=function(){A(m(L()))},E=!1,A=function(e){E?(E=!1,b()):y.confirmTransitionTo(e,"POP",u,function(t){t?b({action:"POP",location:e}):F(e)})},F=function(e){var t=B.location,n=U.indexOf(t.key);-1===n&&(n=0);var r=U.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(E=!0,z(o))},I=m(L()),U=[I.key],D=function(e){return p+x(e)},z=function(e){n.go(e)},W=0,H=function(e){1===(W+=e)?(P(window,"popstate",_),o&&P(window,"hashchange",k)):0===W&&(O(window,"popstate",_),o&&O(window,"hashchange",k))},V=!1,B={length:n.length,action:"POP",location:I,createHref:D,push:function(e,t){c()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=T(e,t,h(),B.location);y.confirmTransitionTo(o,"PUSH",u,function(e){if(e){var t=D(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=U.indexOf(B.location.key),s=U.slice(0,-1===u?0:u+1);s.push(o.key),U=s,b({action:"PUSH",location:o})}else c()(void 0===a,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=t}})},replace:function(e,t){c()(!("object"===(void 0===e?"undefined":N(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=T(e,t,h(),B.location);y.confirmTransitionTo(o,"REPLACE",u,function(e){if(e){var t=D(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=U.indexOf(B.location.key);-1!==u&&(U[u]=o.key),b({action:"REPLACE",location:o})}else c()(void 0===a,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(t)}})},go:z,goBack:function(){return z(-1)},goForward:function(){return z(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=y.setPrompt(e);return V||(H(1),V=!0),function(){return V&&(V=!1,H(-1)),t()}},listen:function(e){var t=y.appendListener(e);return H(1),function(){H(-1),t()}}};return B},F=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},I={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+_(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:_,decodePath:v},slash:{encodePath:v,decodePath:v}},U=function(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)},D=function(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)},z=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};f()(C,"Hash history needs a DOM");var t=window.history,n=-1===window.navigator.userAgent.indexOf("Firefox"),r=e.getUserConfirmation,o=void 0===r?R:r,i=e.hashType,l=void 0===i?"slash":i,a=e.basename?w(v(e.basename)):"",u=I[l],s=u.encodePath,d=u.decodePath,p=function(){var e=d(U());return c()(!a||g(e,a),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+e+'" to begin with "'+a+'".'),a&&(e=j(e,a)),T(e)},m=S(),h=function(e){F($,e),$.length=t.length,m.notifyListeners($.location,$.action)},y=!1,b=null,_=function(){var e=U(),t=s(e);if(e!==t)D(t);else{var n=p(),r=$.location;if(!y&&E(r,n))return;if(b===x(n))return;b=null,k(n)}},k=function(e){y?(y=!1,h()):m.confirmTransitionTo(e,"POP",o,function(t){t?h({action:"POP",location:e}):N(e)})},N=function(e){var t=$.location,n=z.lastIndexOf(x(t));-1===n&&(n=0);var r=z.lastIndexOf(x(e));-1===r&&(r=0);var o=n-r;o&&(y=!0,W(o))},M=U(),L=s(M);M!==L&&D(L);var A=p(),z=[x(A)],W=function(e){c()(n,"Hash history go(n) causes a full page reload in this browser"),t.go(e)},H=0,V=function(e){1===(H+=e)?P(window,"hashchange",_):0===H&&O(window,"hashchange",_)},B=!1,$={length:t.length,action:"POP",location:A,createHref:function(e){return"#"+s(a+x(e))},push:function(e,t){c()(void 0===t,"Hash history cannot push state; it is ignored");var n=T(e,void 0,void 0,$.location);m.confirmTransitionTo(n,"PUSH",o,function(e){if(e){var t=x(n),r=s(a+t);if(U()!==r){b=t,function(e){window.location.hash=e}(r);var o=z.lastIndexOf(x($.location)),i=z.slice(0,-1===o?0:o+1);i.push(t),z=i,h({action:"PUSH",location:n})}else c()(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),h()}})},replace:function(e,t){c()(void 0===t,"Hash history cannot replace state; it is ignored");var n=T(e,void 0,void 0,$.location);m.confirmTransitionTo(n,"REPLACE",o,function(e){if(e){var t=x(n),r=s(a+t);U()!==r&&(b=t,D(r));var o=z.indexOf(x($.location));-1!==o&&(z[o]=t),h({action:"REPLACE",location:n})}})},go:W,goBack:function(){return W(-1)},goForward:function(){return W(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=m.setPrompt(e);return B||(V(1),B=!0),function(){return B&&(B=!1,V(-1)),t()}},listen:function(e){var t=m.appendListener(e);return V(1),function(){V(-1),t()}}};return $},W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},V=function(e,t,n){return Math.min(Math.max(e,t),n)},B=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.getUserConfirmation,n=e.initialEntries,r=void 0===n?["/"]:n,o=e.initialIndex,i=void 0===o?0:o,l=e.keyLength,a=void 0===l?6:l,u=S(),s=function(e){H(y,e),y.length=y.entries.length,u.notifyListeners(y.location,y.action)},d=function(){return Math.random().toString(36).substr(2,a)},f=V(i,0,r.length-1),p=r.map(function(e){return T(e,void 0,"string"==typeof e?d():e.key||d())}),m=x,h=function(e){var n=V(y.index+e,0,y.entries.length-1),r=y.entries[n];u.confirmTransitionTo(r,"POP",t,function(e){e?s({action:"POP",location:r,index:n}):s()})},y={length:p.length,action:"POP",location:p[f],index:f,entries:p,createHref:m,push:function(e,n){c()(!("object"===(void 0===e?"undefined":W(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var r=T(e,n,d(),y.location);u.confirmTransitionTo(r,"PUSH",t,function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),s({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,n){c()(!("object"===(void 0===e?"undefined":W(e))&&void 0!==e.state&&void 0!==n),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var r=T(e,n,d(),y.location);u.confirmTransitionTo(r,"REPLACE",t,function(e){e&&(y.entries[y.index]=r,s({action:"REPLACE",location:r}))})},go:h,goBack:function(){return h(-1)},goForward:function(){return h(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return u.setPrompt(e)},listen:function(e){return u.appendListener(e)}};return y},$=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function q(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Y=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=q(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},q(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:$({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;f()(null==n||1===l.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){o()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?l.a.Children.only(e):null},t}(l.a.Component);Y.propTypes={history:u.a.object.isRequired,children:u.a.node},Y.contextTypes={router:u.a.object},Y.childContextTypes={router:u.a.object.isRequired};var K=Y,Q=K;function G(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var X=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=G(this,e.call.apply(e,[this].concat(i))),r.history=A(r.props),G(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return l.a.createElement(Q,{history:this.history,children:this.props.children})},t}(l.a.Component);X.propTypes={basename:u.a.string,forceRefresh:u.a.bool,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var J=X;function Z(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ee=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=Z(this,e.call.apply(e,[this].concat(i))),r.history=z(r.props),Z(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<HashRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { HashRouter as Router }`.")},t.prototype.render=function(){return l.a.createElement(Q,{history:this.history,children:this.props.children})},t}(l.a.Component);ee.propTypes={basename:u.a.string,getUserConfirmation:u.a.func,hashType:u.a.oneOf(["hashbang","noslash","slash"]),children:u.a.node};var te=ee,ne=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function re(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var oe=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},ie=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=re(this,e.call.apply(e,[this].concat(i))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!oe(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,i=n.to;o?t.replace(i):t.push(i)}},re(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);f()(this.context.router,"You should not use <Link> outside a <Router>"),f()(void 0!==t,'You must specify the "to" property');var o=this.context.router.history,i="string"==typeof t?T(t,null,null,o.location):t,a=o.createHref(i);return l.a.createElement("a",ne({},r,{onClick:this.handleClick,href:a,ref:n}))},t}(l.a.Component);ie.propTypes={onClick:u.a.func,target:u.a.string,replace:u.a.bool,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired,innerRef:u.a.oneOfType([u.a.string,u.a.func])},ie.defaultProps={replace:!1},ie.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired,createHref:u.a.func.isRequired}).isRequired}).isRequired};var le=ie;function ae(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var ue=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=ae(this,e.call.apply(e,[this].concat(i))),r.history=B(r.props),ae(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){o()(!this.props.history,"<MemoryRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { MemoryRouter as Router }`.")},t.prototype.render=function(){return l.a.createElement(K,{history:this.history,children:this.props.children})},t}(l.a.Component);ue.propTypes={initialEntries:u.a.array,initialIndex:u.a.number,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var se=ue,ce=n("./node_modules/path-to-regexp/index.js"),de=n.n(ce),fe={},pe=0,me=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,l=void 0!==i&&i,a=r.strict,u=void 0!==a&&a,s=r.sensitive;if(null==o)return n;var c=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=fe[n]||(fe[n]={});if(r[e])return r[e];var o=[],i={re:de()(e,o,t),keys:o};return pe<1e4&&(r[e]=i,pe++),i}(o,{end:l,strict:u,sensitive:void 0!==s&&s}),d=c.re,f=c.keys,p=d.exec(e);if(!p)return null;var m=p[0],h=p.slice(1),y=e===m;return l&&!y?null:{path:o,url:"/"===o&&""===m?"/":m,isExact:y,params:f.reduce(function(e,t,n){return e[t.name]=h[n],e},{})}},he=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function ye(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var be=function(e){return 0===l.a.Children.count(e)},ve=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=ye(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},ye(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:he({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,l=e.exact,a=e.sensitive;if(n)return n;f()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,s=(r||u.location).pathname;return me(s,{path:o,strict:i,exact:l,sensitive:a},u.match)},t.prototype.componentWillMount=function(){o()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),o()(!(this.props.component&&this.props.children&&!be(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),o()(!(this.props.render&&this.props.children&&!be(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){o()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,o=t.render,i=this.context.router,a=i.history,u=i.route,s=i.staticContext,c={match:e,location:this.props.location||u.location,history:a,staticContext:s};return r?e?l.a.createElement(r,c):null:o?e?o(c):null:"function"==typeof n?n(c):n&&!be(n)?l.a.Children.only(n):null},t}(l.a.Component);ve.propTypes={computedMatch:u.a.object,path:u.a.string,exact:u.a.bool,strict:u.a.bool,sensitive:u.a.bool,component:u.a.func,render:u.a.func,children:u.a.oneOfType([u.a.func,u.a.node]),location:u.a.object},ve.contextTypes={router:u.a.shape({history:u.a.object.isRequired,route:u.a.object.isRequired,staticContext:u.a.object})},ve.childContextTypes={router:u.a.object.isRequired};var _e=ve,ge=_e,je=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},we="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var xe=function(e){var t=e.to,n=e.exact,r=e.strict,o=e.location,i=e.activeClassName,a=e.className,u=e.activeStyle,s=e.style,c=e.isActive,d=e["aria-current"],f=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["to","exact","strict","location","activeClassName","className","activeStyle","style","isActive","aria-current"]),p="object"===(void 0===t?"undefined":we(t))?t.pathname:t,m=p&&p.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1");return l.a.createElement(ge,{path:m,exact:n,strict:r,location:o,children:function(e){var n=e.location,r=e.match,o=!!(c?c(r,n):r);return l.a.createElement(le,je({to:t,className:o?[a,i].filter(function(e){return e}).join(" "):a,style:o?je({},s,u):s,"aria-current":o&&d||null},f))}})};xe.propTypes={to:le.propTypes.to,exact:u.a.bool,strict:u.a.bool,location:u.a.object,activeClassName:u.a.string,className:u.a.string,activeStyle:u.a.object,style:u.a.object,isActive:u.a.func,"aria-current":u.a.oneOf(["page","step","location","date","time","true"])},xe.defaultProps={activeClassName:"active","aria-current":"page"};var ke=xe;var Te=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.enable=function(e){this.unblock&&this.unblock(),this.unblock=this.context.router.history.block(e)},t.prototype.disable=function(){this.unblock&&(this.unblock(),this.unblock=null)},t.prototype.componentWillMount=function(){f()(this.context.router,"You should not use <Prompt> outside a <Router>"),this.props.when&&this.enable(this.props.message)},t.prototype.componentWillReceiveProps=function(e){e.when?this.props.when&&this.props.message===e.message||this.enable(e.message):this.disable()},t.prototype.componentWillUnmount=function(){this.disable()},t.prototype.render=function(){return null},t}(l.a.Component);Te.propTypes={when:u.a.bool,message:u.a.oneOfType([u.a.func,u.a.string]).isRequired},Te.defaultProps={when:!0},Te.contextTypes={router:u.a.shape({history:u.a.shape({block:u.a.func.isRequired}).isRequired}).isRequired};var Ee=Te,Se={},Ce=0,Pe=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"/"===e?e:function(e){var t=e,n=Se[t]||(Se[t]={});if(n[e])return n[e];var r=de.a.compile(e);return Ce<1e4&&(n[e]=r,Ce++),r}(e)(t,{pretty:!0})},Oe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Re=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){f()(this.context.router,"You should not use <Redirect> outside a <Router>"),this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.componentDidUpdate=function(e){var t=T(e.to),n=T(this.props.to);E(t,n)?o()(!1,"You tried to redirect to the same route you're currently on: \""+n.pathname+n.search+'"'):this.perform()},t.prototype.computeTo=function(e){var t=e.computedMatch,n=e.to;return t?"string"==typeof n?Pe(n,t.params):Oe({},n,{pathname:Pe(n.pathname,t.params)}):n},t.prototype.perform=function(){var e=this.context.router.history,t=this.props.push,n=this.computeTo(this.props);t?e.push(n):e.replace(n)},t.prototype.render=function(){return null},t}(l.a.Component);Re.propTypes={computedMatch:u.a.object,push:u.a.bool,from:u.a.string,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired},Re.defaultProps={push:!1},Re.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired}).isRequired,staticContext:u.a.object}).isRequired};var Ne=Re,Me=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function Le(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Ae=function(e){return"/"===e.charAt(0)?e:"/"+e},Fe=function(e,t){return e?Me({},t,{pathname:Ae(e)+t.pathname}):t},Ie=function(e,t){if(!e)return t;var n=Ae(e);return 0!==t.pathname.indexOf(n)?t:Me({},t,{pathname:t.pathname.substr(n.length)})},Ue=function(e){return"string"==typeof e?e:x(e)},De=function(e){return function(){f()(!1,"You cannot %s with <StaticRouter>",e)}},ze=function(){},We=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=r=Le(this,e.call.apply(e,[this].concat(i))),r.createHref=function(e){return Ae(r.props.basename+Ue(e))},r.handlePush=function(e){var t=r.props,n=t.basename,o=t.context;o.action="PUSH",o.location=Fe(n,T(e)),o.url=Ue(o.location)},r.handleReplace=function(e){var t=r.props,n=t.basename,o=t.context;o.action="REPLACE",o.location=Fe(n,T(e)),o.url=Ue(o.location)},r.handleListen=function(){return ze},r.handleBlock=function(){return ze},Le(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:{staticContext:this.props.context}}},t.prototype.componentWillMount=function(){o()(!this.props.history,"<StaticRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { StaticRouter as Router }`.")},t.prototype.render=function(){var e=this.props,t=e.basename,n=(e.context,e.location),r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["basename","context","location"]),o={createHref:this.createHref,action:"POP",location:Ie(t,T(n)),push:this.handlePush,replace:this.handleReplace,go:De("go"),goBack:De("goBack"),goForward:De("goForward"),listen:this.handleListen,block:this.handleBlock};return l.a.createElement(K,Me({},r,{history:o}))},t}(l.a.Component);We.propTypes={basename:u.a.string,context:u.a.object.isRequired,location:u.a.oneOfType([u.a.string,u.a.object])},We.defaultProps={basename:"",location:"/"},We.childContextTypes={router:u.a.object.isRequired};var He=We;var Ve=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){f()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){o()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),o()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,o=void 0;return l.a.Children.forEach(t,function(t){if(null==r&&l.a.isValidElement(t)){var i=t.props,a=i.path,u=i.exact,s=i.strict,c=i.sensitive,d=i.from,f=a||d;o=t,r=me(n.pathname,{path:f,exact:u,strict:s,sensitive:c},e.match)}}),r?l.a.cloneElement(o,{location:n,computedMatch:r}):null},t}(l.a.Component);Ve.contextTypes={router:u.a.shape({route:u.a.object.isRequired}).isRequired},Ve.propTypes={children:u.a.node,location:u.a.object};var Be=Ve,$e=Pe,qe=me,Ye=n("./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"),Ke=n.n(Ye),Qe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var Ge=function(e){var t=function(t){var n=t.wrappedComponentRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["wrappedComponentRef"]);return l.a.createElement(_e,{children:function(t){return l.a.createElement(e,Qe({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,t.propTypes={wrappedComponentRef:u.a.func},Ke()(t,e)};n.d(t,"BrowserRouter",function(){return J}),n.d(t,"HashRouter",function(){return te}),n.d(t,"Link",function(){return le}),n.d(t,"MemoryRouter",function(){return se}),n.d(t,"NavLink",function(){return ke}),n.d(t,"Prompt",function(){return Ee}),n.d(t,"Redirect",function(){return Ne}),n.d(t,"Route",function(){return ge}),n.d(t,"Router",function(){return Q}),n.d(t,"StaticRouter",function(){return He}),n.d(t,"Switch",function(){return Be}),n.d(t,"generatePath",function(){return $e}),n.d(t,"matchPath",function(){return qe}),n.d(t,"withRouter",function(){return Ge})},"./node_modules/react/cjs/react.production.min.js":function(e,t,n){"use strict";
/** @license React v16.7.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n("./node_modules/object-assign/index.js"),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,d=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,b="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,l,a){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,l,a],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var _={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function j(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||_}function w(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||_}j.prototype.isReactComponent={},j.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&v("85"),this.updater.enqueueSetState(this,e,t,"setState")},j.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=j.prototype;var k=x.prototype=new w;k.constructor=x,r(k,j.prototype),k.isPureReactComponent=!0;var T={current:null,currentDispatcher:null},E=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r=void 0,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)E.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:T.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,R=[];function N(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function L(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+A(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+A(a=t[s],s);u+=e(a,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=b&&t[b]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(a=t.next()).done;)u+=e(a=a.value,c=n+A(a,s++),r,o);else"object"===a&&v("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function F(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,function(e){return e}):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function U(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),L(e,I,t=N(t,i,r,o)),M(t)}var D={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return U(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;L(e,F,t=N(null,null,t,n)),M(t)},count:function(e){return L(e,function(){return null},null)},toArray:function(e){var t=[];return U(e,t,null,function(e){return e}),t},only:function(e){return P(e)||v("143"),e}},createRef:function(){return{current:null}},Component:j,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},Fragment:a,StrictMode:u,Suspense:m,createElement:C,cloneElement:function(e,t,n){null==e&&v("267",e);var o=void 0,l=r({},e.props),a=e.key,u=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,s=T.current),void 0!==t.key&&(a=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)E.call(t,o)&&!S.hasOwnProperty(o)&&(l[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))l.children=n;else if(1<o){c=Array(o);for(var d=0;d<o;d++)c[d]=arguments[d+2];l.children=c}return{$$typeof:i,type:e.type,key:a,ref:u,props:l,_owner:s}},createFactory:function(e){var t=C.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.7.0",unstable_ConcurrentMode:f,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:T,assign:r}},z={default:D},W=z&&D||z;e.exports=W.default||W},"./node_modules/react/index.js":function(e,t,n){"use strict";e.exports=n("./node_modules/react/cjs/react.production.min.js")},"./node_modules/regenerator-runtime/runtime-module.js":function(e,t,n){var r=function(){return this}()||Function("return this")(),o=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,i=o&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,e.exports=n("./node_modules/regenerator-runtime/runtime.js"),o)r.regeneratorRuntime=i;else try{delete r.regeneratorRuntime}catch(e){r.regeneratorRuntime=void 0}},"./node_modules/regenerator-runtime/runtime.js":function(e,t){!function(t){"use strict";var n,r=Object.prototype,o=r.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},l=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag",s="object"==typeof e,c=t.regeneratorRuntime;if(c)s&&(e.exports=c);else{(c=t.regeneratorRuntime=s?e.exports:{}).wrap=g;var d="suspendedStart",f="suspendedYield",p="executing",m="completed",h={},y={};y[l]=function(){return this};var b=Object.getPrototypeOf,v=b&&b(b(R([])));v&&v!==r&&o.call(v,l)&&(y=v);var _=k.prototype=w.prototype=Object.create(y);x.prototype=_.constructor=k,k.constructor=x,k[u]=x.displayName="GeneratorFunction",c.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===x||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,k):(e.__proto__=k,u in e||(e[u]="GeneratorFunction")),e.prototype=Object.create(_),e},c.awrap=function(e){return{__await:e}},T(E.prototype),E.prototype[a]=function(){return this},c.AsyncIterator=E,c.async=function(e,t,n,r){var o=new E(g(e,t,n,r));return c.isGeneratorFunction(t)?o:o.next().then(function(e){return e.done?e.value:o.next()})},T(_),_[u]="Generator",_[l]=function(){return this},_.toString=function(){return"[object Generator]"},c.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},c.values=R,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&o.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,o){return a.type="throw",a.arg=e,t.next=r,o&&(t.method="next",t.arg=n),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var l=this.tryEntries[i],a=l.completion;if("root"===l.tryLoc)return r("end");if(l.tryLoc<=this.prev){var u=o.call(l,"catchLoc"),s=o.call(l,"finallyLoc");if(u&&s){if(this.prev<l.catchLoc)return r(l.catchLoc,!0);if(this.prev<l.finallyLoc)return r(l.finallyLoc)}else if(u){if(this.prev<l.catchLoc)return r(l.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<l.finallyLoc)return r(l.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var l=i?i.completion:{};return l.type=e,l.arg=t,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(l)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;P(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:R(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=n),h}}}function g(e,t,n,r){var o=t&&t.prototype instanceof w?t:w,i=Object.create(o.prototype),l=new O(r||[]);return i._invoke=function(e,t,n){var r=d;return function(o,i){if(r===p)throw new Error("Generator is already running");if(r===m){if("throw"===o)throw i;return N()}for(n.method=o,n.arg=i;;){var l=n.delegate;if(l){var a=S(l,n);if(a){if(a===h)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=p;var u=j(e,t,n);if("normal"===u.type){if(r=n.done?m:f,u.arg===h)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=m,n.method="throw",n.arg=u.arg)}}}(e,n,l),i}function j(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function w(){}function x(){}function k(){}function T(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function E(e){var t;this._invoke=function(n,r){function i(){return new Promise(function(t,i){!function t(n,r,i,l){var a=j(e[n],e,r);if("throw"!==a.type){var u=a.arg,s=u.value;return s&&"object"==typeof s&&o.call(s,"__await")?Promise.resolve(s.__await).then(function(e){t("next",e,i,l)},function(e){t("throw",e,i,l)}):Promise.resolve(s).then(function(e){u.value=e,i(u)},l)}l(a.arg)}(n,r,t,i)})}return t=t?t.then(i,i):i()}}function S(e,t){var r=e.iterator[t.method];if(r===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,S(e,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var o=j(r,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,h;var i=o.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,h):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function R(e){if(e){var t=e[l];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function t(){for(;++r<e.length;)if(o.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=n,t.done=!0,t};return i.next=i}}return{next:N}}function N(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},"./node_modules/scheduler/cjs/scheduler.production.min.js":function(e,t,n){"use strict";(function(e){
/** @license React v0.12.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,l=-1,a=!1,u=!1;function s(){if(!a){var e=n.expirationTime;u?x():u=!0,w(f,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,a=l;o=e,l=t;try{var u=r()}finally{o=i,l=a}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,s()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function d(){if(-1===i&&null!==n&&1===n.priorityLevel){a=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{a=!1,null!==n?s():u=!1}}}function f(e){a=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{c()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{c()}while(null!==n&&!k())}finally{a=!1,r=o,null!==n?s():u=!1,d()}}var p,m,h=Date,y="function"==typeof setTimeout?setTimeout:void 0,b="function"==typeof clearTimeout?clearTimeout:void 0,v="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,_="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function g(e){p=v(function(t){b(m),e(t)}),m=y(function(){_(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var j=performance;t.unstable_now=function(){return j.now()}}else t.unstable_now=function(){return h.now()};var w,x,k,T=null;if("undefined"!=typeof window?T=window:void 0!==e&&(T=e),T&&T._schedMock){var E=T._schedMock;w=E[0],x=E[1],k=E[2],t.unstable_now=E[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var S=null,C=function(e){if(null!==S)try{S(e)}finally{S=null}};w=function(e){null!==S?setTimeout(w,0,e):(S=e,setTimeout(C,0,!1))},x=function(){S=null},k=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof v&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof _&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,O=!1,R=-1,N=!1,M=!1,L=0,A=33,F=33;k=function(){return L<=t.unstable_now()};var I=new MessageChannel,U=I.port2;I.port1.onmessage=function(){O=!1;var e=P,n=R;P=null,R=-1;var r=t.unstable_now(),o=!1;if(0>=L-r){if(!(-1!==n&&n<=r))return N||(N=!0,g(D)),P=e,void(R=n);o=!0}if(null!==e){M=!0;try{e(o)}finally{M=!1}}};var D=function(e){if(null!==P){g(D);var t=e-L+F;t<F&&A<F?(8>t&&(t=8),F=t<A?A:t):A=t,L=e+F,O||(O=!0,U.postMessage(void 0))}else N=!1};w=function(e,t){P=e,R=t,M||0>t?U.postMessage(void 0):N||(N=!0,g(D))},x=function(){P=null,O=!1,R=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,l=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=l,d()}},t.unstable_scheduleCallback=function(e,r){var l=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=l+r.timeout;else switch(o){case 1:r=l+-1;break;case 2:r=l+250;break;case 5:r=l+1073741823;break;case 4:r=l+1e4;break;default:r=l+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{l=null;var a=n;do{if(a.expirationTime>r){l=a;break}a=a.next}while(a!==n);null===l?l=n:l===n&&(n=e,s()),(r=l.previous).next=l.previous=e,e.next=l,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,l=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=l,d()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<l||k())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n("./node_modules/webpack/buildin/global.js"))},"./node_modules/scheduler/index.js":function(e,t,n){"use strict";e.exports=n("./node_modules/scheduler/cjs/scheduler.production.min.js")},"./node_modules/warning/warning.js":function(e,t,n){"use strict";var r=function(){};e.exports=r},"./node_modules/webpack/buildin/global.js":function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},"./src/App.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=f(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=f(n("./node_modules/babel-runtime/helpers/createClass.js")),l=f(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),a=f(n("./node_modules/babel-runtime/helpers/inherits.js")),u=n("./node_modules/react/index.js"),s=f(u),c=n("./node_modules/react-router-dom/es/index.js"),d=n("./src/views/Home/index.js");function f(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(){return(0,o.default)(this,t),(0,l.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,a.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return s.default.createElement(c.BrowserRouter,null,s.default.createElement("div",null,s.default.createElement(c.Switch,null,s.default.createElement(c.Route,{path:"/",Component:d.HomeView}))))}}]),t}(u.Component);t.default=p},"./src/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.initializeClient=void 0;var r,o,i=f(n("./node_modules/babel-runtime/regenerator/index.js")),l=f(n("./node_modules/babel-runtime/helpers/asyncToGenerator.js")),a=f(n("./node_modules/babel-runtime/core-js/promise.js")),u=t.initializeClient=(r=(0,l.default)(i.default.mark(function e(t){return i.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:p(t),(0,d.render)(s.default.createElement(c.default,null),t);case 2:case"end":return e.stop()}},e,this)})),function(e){return r.apply(this,arguments)}),s=f(n("./node_modules/react/index.js")),c=f(n("./src/App.js")),d=n("./node_modules/react-dom/index.js");function f(e){return e&&e.__esModule?e:{default:e}}function p(e){(0,d.unmountComponentAtNode)(e)}o=document.getElementById("root"),a.default.resolve(u(o)).catch(function(e){console.error("An error occurred when starting the client"),console.error(e)})},"./src/views/Home/index.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HomeView=void 0;var r=c(n("./node_modules/babel-runtime/core-js/object/get-prototype-of.js")),o=c(n("./node_modules/babel-runtime/helpers/classCallCheck.js")),i=c(n("./node_modules/babel-runtime/helpers/createClass.js")),l=c(n("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js")),a=c(n("./node_modules/babel-runtime/helpers/inherits.js")),u=n("./node_modules/react/index.js"),s=c(u);function c(e){return e&&e.__esModule?e:{default:e}}t.HomeView=function(e){function t(){return(0,o.default)(this,t),(0,l.default)(this,(t.__proto__||(0,r.default)(t)).apply(this,arguments))}return(0,a.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){return s.default.createElement("div",null,s.default.createElement("h1",null,"Hello Roofing World!"))}}]),t}(u.Component)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy90eXBlb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FuLWluc3RhbmNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4tb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jbGFzc29mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29yZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RlZmluZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZXNjcmlwdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZW51bS1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZmFpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mb3Itb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oaWRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faHRtbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faW52b2tlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLWFycmF5LWl0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY2FsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRldGVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItc3RlcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19tZXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbWljcm90YXNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbmV3LXByb21pc2UtY2FwYWJpbGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHBzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXNhcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3BlcmZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9taXNlLXJlc29sdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcmVkZWZpbmUtYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcmVkZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zdHJpbmctYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190YXNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWxlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VzZXItYWdlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLWV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5wcm9taXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcucHJvbWlzZS50cnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9ub2RlX21vZHVsZXMvd2FybmluZy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL1BhdGhVdGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lcy9Mb2NhdGlvblV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0RPTVV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUJyb3dzZXJIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZUhhc2hIaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL2NyZWF0ZU1lbW9yeUhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL0Jyb3dzZXJSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvSGFzaFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9MaW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvTWVtb3J5Um91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL01lbW9yeVJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JvdXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL05hdkxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Qcm9tcHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUHJvbXB0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvZ2VuZXJhdGVQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvUmVkaXJlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9TdGF0aWNSb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvU3RhdGljUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvU3dpdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9nZW5lcmF0ZVBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvbWF0Y2hQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy93aXRoUm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUtbW9kdWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3cy9Ib21lL2luZGV4LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiZGVmYXVsdCIsIm9iaiIsIl9wcm9taXNlIiwiX3Byb21pc2UyIiwiZm4iLCJnZW4iLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJyZXNvbHZlIiwicmVqZWN0Iiwic3RlcCIsImFyZyIsImluZm8iLCJlcnJvciIsImRvbmUiLCJ0aGVuIiwiZXJyIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfc2V0UHJvdG90eXBlT2YyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jcmVhdGUyIiwiX3R5cGVvZjMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsIl90eXBlb2YyIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX2l0ZXJhdG9yMiIsIl9zeW1ib2wyIiwiX3R5cGVvZiIsIiRPYmplY3QiLCJQIiwiRCIsIml0IiwiZGVzYyIsImdldFByb3RvdHlwZU9mIiwic2V0UHJvdG90eXBlT2YiLCJQcm9taXNlIiwiZiIsImZvcmJpZGRlbkZpZWxkIiwidW5kZWZpbmVkIiwiaXNPYmplY3QiLCJ0b0lPYmplY3QiLCJ0b0xlbmd0aCIsInRvQWJzb2x1dGVJbmRleCIsIklTX0lOQ0xVREVTIiwiJHRoaXMiLCJlbCIsImZyb21JbmRleCIsIk8iLCJpbmRleCIsImNvZiIsIlRBRyIsIkFSRyIsIlQiLCJCIiwiZSIsInRyeUdldCIsImNhbGxlZSIsInRvU3RyaW5nIiwic2xpY2UiLCJjb3JlIiwidmVyc2lvbiIsIl9fZSIsImFGdW5jdGlvbiIsInRoYXQiLCJhIiwiYiIsImRvY3VtZW50IiwiaXMiLCJjcmVhdGVFbGVtZW50Iiwic3BsaXQiLCJnZXRLZXlzIiwiZ09QUyIsInBJRSIsInJlc3VsdCIsImdldFN5bWJvbHMiLCJzeW1ib2xzIiwiaXNFbnVtIiwicHVzaCIsImdsb2JhbCIsImN0eCIsImhpZGUiLCJoYXMiLCIkZXhwb3J0IiwidHlwZSIsInNvdXJjZSIsIm93biIsIm91dCIsIklTX0ZPUkNFRCIsIkYiLCJJU19HTE9CQUwiLCJHIiwiSVNfU1RBVElDIiwiUyIsIklTX1BST1RPIiwiSVNfQklORCIsIklTX1dSQVAiLCJXIiwiZXhwUHJvdG8iLCJDIiwiRnVuY3Rpb24iLCJ2aXJ0dWFsIiwiUiIsIlUiLCJleGVjIiwiaXNBcnJheUl0ZXIiLCJhbk9iamVjdCIsImdldEl0ZXJGbiIsIkJSRUFLIiwiUkVUVVJOIiwiaXRlcmFibGUiLCJlbnRyaWVzIiwiSVRFUkFUT1IiLCJpdGVyYXRvciIsIml0ZXJGbiIsIm5leHQiLCJ3aW5kb3ciLCJNYXRoIiwiX19nIiwiZFAiLCJjcmVhdGVEZXNjIiwiZG9jdW1lbnRFbGVtZW50IiwiYXJncyIsInVuIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJJdGVyYXRvcnMiLCJBcnJheVByb3RvIiwiQXJyYXkiLCJpc0FycmF5IiwicmV0Iiwic2V0VG9TdHJpbmdUYWciLCJJdGVyYXRvclByb3RvdHlwZSIsIk5BTUUiLCJMSUJSQVJZIiwicmVkZWZpbmUiLCIkaXRlckNyZWF0ZSIsIkJVR0dZIiwia2V5cyIsInJldHVyblRoaXMiLCJCYXNlIiwiREVGQVVMVCIsIklTX1NFVCIsIkZPUkNFRCIsIm1ldGhvZHMiLCJnZXRNZXRob2QiLCJraW5kIiwicHJvdG8iLCJERUZfVkFMVUVTIiwiVkFMVUVTX0JVRyIsIiRuYXRpdmUiLCIkZGVmYXVsdCIsIiRlbnRyaWVzIiwiJGFueU5hdGl2ZSIsInZhbHVlcyIsIlNBRkVfQ0xPU0lORyIsInJpdGVyIiwiZnJvbSIsInNraXBDbG9zaW5nIiwic2FmZSIsImFyciIsIml0ZXIiLCJNRVRBIiwic2V0RGVzYyIsImlkIiwiaXNFeHRlbnNpYmxlIiwiRlJFRVpFIiwicHJldmVudEV4dGVuc2lvbnMiLCJzZXRNZXRhIiwidyIsIm1ldGEiLCJLRVkiLCJORUVEIiwiZmFzdEtleSIsImdldFdlYWsiLCJvbkZyZWV6ZSIsIm1hY3JvdGFzayIsInNldCIsIk9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYktpdE11dGF0aW9uT2JzZXJ2ZXIiLCJwcm9jZXNzIiwiaXNOb2RlIiwiaGVhZCIsImxhc3QiLCJub3RpZnkiLCJmbHVzaCIsInBhcmVudCIsImRvbWFpbiIsImV4aXQiLCJlbnRlciIsIm5leHRUaWNrIiwibmF2aWdhdG9yIiwic3RhbmRhbG9uZSIsInByb21pc2UiLCJ0b2dnbGUiLCJub2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJvYnNlcnZlIiwiY2hhcmFjdGVyRGF0YSIsImRhdGEiLCJ0YXNrIiwiUHJvbWlzZUNhcGFiaWxpdHkiLCIkJHJlc29sdmUiLCIkJHJlamVjdCIsImRQcyIsImVudW1CdWdLZXlzIiwiSUVfUFJPVE8iLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsInN0eWxlIiwiZGlzcGxheSIsImFwcGVuZENoaWxkIiwic3JjIiwiY29udGVudFdpbmRvdyIsIm9wZW4iLCJ3cml0ZSIsImx0IiwiY2xvc2UiLCJQcm9wZXJ0aWVzIiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1ByaW1pdGl2ZSIsIkF0dHJpYnV0ZXMiLCJnT1BEIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ09QTiIsIndpbmRvd05hbWVzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldFdpbmRvd05hbWVzIiwiJGtleXMiLCJoaWRkZW5LZXlzIiwiY29uY2F0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwidG9PYmplY3QiLCJPYmplY3RQcm90byIsImFycmF5SW5kZXhPZiIsIm5hbWVzIiwiZmFpbHMiLCJleHAiLCJ2IiwibmV3UHJvbWlzZUNhcGFiaWxpdHkiLCJ4IiwicHJvbWlzZUNhcGFiaWxpdHkiLCJiaXRtYXAiLCJjaGVjayIsInRlc3QiLCJidWdneSIsIkRFU0NSSVBUT1JTIiwiU1BFQ0lFUyIsImRlZiIsInRhZyIsInN0YXQiLCJzaGFyZWQiLCJ1aWQiLCJzdG9yZSIsImNvcHlyaWdodCIsInRvSW50ZWdlciIsImRlZmluZWQiLCJUT19TVFJJTkciLCJwb3MiLCJTdHJpbmciLCJjaGFyQ29kZUF0IiwiY2hhckF0IiwiZGVmZXIiLCJjaGFubmVsIiwicG9ydCIsImludm9rZSIsImh0bWwiLCJjZWwiLCJzZXRUYXNrIiwic2V0SW1tZWRpYXRlIiwiY2xlYXJUYXNrIiwiY2xlYXJJbW1lZGlhdGUiLCJNZXNzYWdlQ2hhbm5lbCIsIkRpc3BhdGNoIiwiY291bnRlciIsInF1ZXVlIiwicnVuIiwibGlzdGVuZXIiLCJldmVudCIsIm5vdyIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbXBvcnRTY3JpcHRzIiwicmVtb3ZlQ2hpbGQiLCJzZXRUaW1lb3V0IiwiY2xlYXIiLCJtYXgiLCJtaW4iLCJjZWlsIiwiZmxvb3IiLCJpc05hTiIsIklPYmplY3QiLCJ2YWwiLCJ2YWx1ZU9mIiwicHgiLCJyYW5kb20iLCJ1c2VyQWdlbnQiLCJ3a3NFeHQiLCIkU3ltYm9sIiwiVVNFX1NZTUJPTCIsImNsYXNzb2YiLCJnZXRJdGVyYXRvck1ldGhvZCIsImFkZFRvVW5zY29wYWJsZXMiLCJpdGVyYXRlZCIsIl90IiwiX2kiLCJfayIsIkFyZ3VtZW50cyIsIiRnZXRQcm90b3R5cGVPZiIsIkludGVybmFsIiwibmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5IiwiT3duUHJvbWlzZUNhcGFiaWxpdHkiLCJXcmFwcGVyIiwiYW5JbnN0YW5jZSIsImZvck9mIiwic3BlY2llc0NvbnN0cnVjdG9yIiwibWljcm90YXNrIiwibmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUiLCJwZXJmb3JtIiwicHJvbWlzZVJlc29sdmUiLCJ2ZXJzaW9ucyIsInY4IiwiJFByb21pc2UiLCJlbXB0eSIsIlVTRV9OQVRJVkUiLCJGYWtlUHJvbWlzZSIsIlByb21pc2VSZWplY3Rpb25FdmVudCIsImluZGV4T2YiLCJpc1RoZW5hYmxlIiwiaXNSZWplY3QiLCJfbiIsImNoYWluIiwiX2MiLCJfdiIsIm9rIiwiX3MiLCJyZWFjdGlvbiIsImV4aXRlZCIsImhhbmRsZXIiLCJmYWlsIiwiX2giLCJvbkhhbmRsZVVuaGFuZGxlZCIsIm9uVW5oYW5kbGVkIiwiY29uc29sZSIsInVuaGFuZGxlZCIsImlzVW5oYW5kbGVkIiwiZW1pdCIsIm9udW5oYW5kbGVkcmVqZWN0aW9uIiwicmVhc29uIiwiX2EiLCJvbnJlamVjdGlvbmhhbmRsZWQiLCIkcmVqZWN0IiwiX2QiLCJfdyIsIiRyZXNvbHZlIiwid3JhcHBlciIsImV4ZWN1dG9yIiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwiY2F0Y2giLCJjYXBhYmlsaXR5IiwiYWxsIiwicmVtYWluaW5nIiwiJGluZGV4IiwiYWxyZWFkeUNhbGxlZCIsInJhY2UiLCIkYXQiLCJwb2ludCIsIiRmYWlscyIsIndrcyIsIndrc0RlZmluZSIsImVudW1LZXlzIiwiX2NyZWF0ZSIsImdPUE5FeHQiLCIkR09QRCIsIiREUCIsIiRKU09OIiwiSlNPTiIsIl9zdHJpbmdpZnkiLCJzdHJpbmdpZnkiLCJISURERU4iLCJUT19QUklNSVRJVkUiLCJTeW1ib2xSZWdpc3RyeSIsIkFsbFN5bWJvbHMiLCJPUFN5bWJvbHMiLCJRT2JqZWN0Iiwic2V0dGVyIiwiZmluZENoaWxkIiwic2V0U3ltYm9sRGVzYyIsInByb3RvRGVzYyIsIndyYXAiLCJzeW0iLCJpc1N5bWJvbCIsIiRkZWZpbmVQcm9wZXJ0eSIsIiRkZWZpbmVQcm9wZXJ0aWVzIiwiJHByb3BlcnR5SXNFbnVtZXJhYmxlIiwiRSIsIiRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCIkZ2V0T3duUHJvcGVydHlOYW1lcyIsIiRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJJU19PUCIsIiRzZXQiLCJlczZTeW1ib2xzIiwiaiIsIndlbGxLbm93blN5bWJvbHMiLCJrIiwiZm9yIiwia2V5Rm9yIiwidXNlU2V0dGVyIiwidXNlU2ltcGxlIiwicmVwbGFjZXIiLCIkcmVwbGFjZXIiLCJmaW5hbGx5Iiwib25GaW5hbGx5IiwiaXNGdW5jdGlvbiIsInRyeSIsImNhbGxiYWNrZm4iLCJUT19TVFJJTkdfVEFHIiwiRE9NSXRlcmFibGVzIiwiQ29sbGVjdGlvbiIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImFyaXR5Iiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJFcnJvciIsImFyZ0luZGV4IiwicmVwbGFjZSIsImZyYW1lc1RvUG9wIiwicHJvcElzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJqb2luIiwidGVzdDMiLCJmb3JFYWNoIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwidG8iLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwib3B0aW9ucyIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJlc2NhcGVkIiwib2Zmc2V0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b2tlbiIsInNlZ21lbnQiLCJhdHRhY2hLZXlzIiwicmUiLCJmbGFncyIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsImJhIiwiZyIsImgiLCJjYSIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJvbkVycm9yIiwia2EiLCJtYSIsIm5hIiwib2EiLCJwYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicWEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInJhIiwicmVnaXN0cmF0aW9uTmFtZSIsInNhIiwidGEiLCJkZXBlbmRlbmNpZXMiLCJ1YSIsInZhIiwid2EiLCJ4YSIsImN1cnJlbnRUYXJnZXQiLCJsYSIsInlhIiwiemEiLCJBYSIsIkJhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQ2EiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiRGEiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJwYXJlbnROb2RlIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJyZXR1cm4iLCJOYSIsImRpc3BhdGNoQ29uZmlnIiwiT2EiLCJfdGFyZ2V0SW5zdCIsIlBhIiwiUWEiLCJSYSIsIlNhIiwiVGEiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVmEiLCJXYSIsIlhhIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImViIiwiZmIiLCJnYiIsInRleHRDb250ZW50IiwiaGIiLCJpYiIsInoiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImtiIiwiZXZlbnRQb29sIiwicG9wIiwibGIiLCJkZXN0cnVjdG9yIiwiamIiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwibWIiLCJuYiIsIm9iIiwicGIiLCJxYiIsImRvY3VtZW50TW9kZSIsInJiIiwic2IiLCJ0YiIsInViIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInZiIiwid2IiLCJrZXlDb2RlIiwieGIiLCJkZXRhaWwiLCJ5YiIsIkJiIiwibG9jYWxlIiwid2hpY2giLCJ6YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsIkFiIiwiQ2IiLCJEYiIsIkViIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiUWIiLCJub2RlTmFtZSIsIlJiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJTYiIsInNldEF0dHJpYnV0ZSIsIlRiIiwiVmIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlViIiwiV2IiLCJjaGVja2VkIiwiWGIiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwiJCR0eXBlb2YiLCJyZW5kZXIiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm5jIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJvYyIsInBjIiwicWMiLCJyYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ2YyIsIndjIiwieGMiLCJ0YyIsInVjIiwic2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInljIiwiemMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0YWJJbmRleCIsIkZjIiwiY2hhbmdlIiwiR2MiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsImRldGFjaEV2ZW50IiwiUWMiLCJSYyIsImF0dGFjaEV2ZW50IiwiU2MiLCJUYyIsIlVjIiwiVmMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiV2MiLCJ2aWV3IiwiWGMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiWWMiLCJnZXRNb2RpZmllclN0YXRlIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsImRkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJlZCIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsImZkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJnZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiaGQiLCJqZCIsImtkIiwiZWZmZWN0VGFnIiwibGQiLCJuZCIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJtZCIsIm9kIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsInBkIiwiY2xpcGJvYXJkRGF0YSIsInFkIiwicmQiLCJjaGFyQ29kZSIsInNkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInRkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInVkIiwidmQiLCJkYXRhVHJhbnNmZXIiLCJ3ZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ4ZCIsInlkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsImlzSW50ZXJhY3RpdmUiLCJEZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsIkVkIiwiRmQiLCJHZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiSGQiLCJIIiwiSWQiLCJKZCIsIktkIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsImJvZHkiLCJRZCIsImZpcnN0Q2hpbGQiLCJSZCIsIm5leHRTaWJsaW5nIiwiVGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsIlVkIiwiY29udGVudEVkaXRhYmxlIiwiVmQiLCJXZCIsInNlbGVjdCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiYmUiLCJvblNlbGVjdCIsImVlIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsImRlIiwiZmUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImdlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoZSIsImllIiwiamUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwia2UiLCJtYXRobWwiLCJzdmciLCJsZSIsIm1lIiwibmUiLCJvZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInFlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJzZSIsInRyaW0iLCJ0ZSIsInNldFByb3BlcnR5Iiwic3Vic3RyaW5nIiwidWUiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInZlIiwid2UiLCJ4ZSIsImJsdXIiLCJmb2N1cyIsInllIiwiemUiLCJBZSIsIkJlIiwiYXV0b0ZvY3VzIiwiQ2UiLCJfX2h0bWwiLCJEZSIsIkVlIiwiY2xlYXJUaW1lb3V0IiwiR2UiLCJIZSIsIlNldCIsIkllIiwiSmUiLCJJIiwiSiIsIktlIiwiSyIsIkwiLCJMZSIsIk1lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiTSIsIk5lIiwiT2UiLCJQZSIsIlFlIiwiZ2V0Q2hpbGRDb250ZXh0IiwiUmUiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIlNlIiwiVGUiLCJVZSIsIlZlIiwiWGUiLCJlbGVtZW50VHlwZSIsInJlZiIsInBlbmRpbmdQcm9wcyIsImZpcnN0Q29udGV4dERlcGVuZGVuY3kiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIk4iLCJZZSIsImlzUmVhY3RDb21wb25lbnQiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImZmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJnZiIsImhmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJqZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwia2YiLCJsZiIsImJhc2VTdGF0ZSIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwibWYiLCJuZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ0ZiIsInVmIiwidmYiLCJ3ZiIsInN0YWNrIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIl9jb250ZXh0IiwiX2N1cnJlbnRWYWx1ZSIsIkNmIiwiRGYiLCJFZiIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk9mIiwiUmVhY3RDdXJyZW50T3duZXIiLCJQZiIsIkNvbXBvbmVudCIsInJlZnMiLCJRZiIsIlZmIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImVucXVldWVTZXRTdGF0ZSIsIlJmIiwiU2YiLCJUZiIsIlVmIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIldmIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJYZiIsImNvbnRleHRUeXBlIiwiY3VycmVudERpc3BhdGNoZXIiLCJyZWFkQ29udGV4dCIsInN0YXRlIiwidXBkYXRlciIsIlpmIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiJGYiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsImFnIiwiYmciLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiY2ciLCJkZyIsIk1hcCIsInkiLCJxIiwidSIsImRlbGV0ZSIsIkEiLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJRIiwicWciLCJyZyIsImNvbXBhcmUiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwieGciLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJ5ZyIsInBlbmRpbmdDb250ZXh0IiwiemciLCJ0aW1lZE91dEF0IiwiZmFsbGJhY2siLCJBZyIsIl9jdG9yIiwiTmYiLCJaZSIsImh5ZHJhdGUiLCJoaWRkZW4iLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJCZyIsIkNnIiwiR2ciLCJIZyIsIklnIiwib25DbGljayIsIm9uY2xpY2siLCJKZyIsIldlYWtTZXQiLCJLZyIsIkxnIiwiTWciLCJPZyIsImRlc3Ryb3kiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIlBnIiwiUWciLCJSZyIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTZyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJGZSIsIk5nIiwidGgiLCJzaCIsImFkZCIsIlVnIiwiV2Vha01hcCIsIlZnIiwiV2ciLCJYZyIsImNvbXBvbmVudERpZENhdGNoIiwiWWciLCJjb21wb25lbnRTdGFjayIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZmgiLCJWIiwiZ2giLCJoaCIsImloIiwiamgiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsImtoIiwiY3JlYXRlRWxlbWVudE5TIiwibGgiLCJtaCIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsIm5oIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJvaCIsImZpbmlzaGVkV29yayIsInBoIiwicWgiLCJyaCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIlgiLCJBaCIsIlkiLCJCaCIsIkNoIiwiWiIsIkRoIiwiRWgiLCJGaCIsInVuc3RhYmxlX25vdyIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiTGgiLCJ0aW1lb3V0IiwidGltZW91dEhhbmRsZSIsIk5oIiwiT2giLCJuZXh0U2NoZWR1bGVkUm9vdCIsIlBoIiwiUWgiLCJSaCIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJTaCIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJyYW5nZUNvdW50IiwiZGIiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiWWYiLCJWaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiU2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJGYiIsIkdiIiwiSGMiLCJpaSIsIkRnIiwiRWciLCJqaSIsIkljIiwiRmciLCJjZSIsIlRoIiwiVWgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsImFpIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJiaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJjaSIsIl9pbnRlcm5hbFJvb3QiLCJkaSIsImZpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiZWkiLCJnaSIsIiRoIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJraSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJXZSIsIm92ZXJyaWRlUHJvcHMiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwibGkiLCJtaSIsImNoZWNrRENFIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwibGlzdCIsInJlc29sdmVfcGF0aG5hbWUiLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJoYXNUcmFpbGluZ1NsYXNoIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiaXRlbSIsImFUeXBlIiwiYVZhbHVlIiwiYlZhbHVlIiwiYUtleXMiLCJiS2V5cyIsImFkZExlYWRpbmdTbGFzaCIsInN0cmlwTGVhZGluZ1NsYXNoIiwiaGFzQmFzZW5hbWUiLCJzdHJpcEJhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImhhc2giLCJfZXh0ZW5kcyIsIkxvY2F0aW9uVXRpbHNfY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiTG9jYXRpb25VdGlsc19sb2NhdGlvbnNBcmVFcXVhbCIsImVzX2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0IiwibGlzdGVuZXJzIiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImJyb3dzZXJfZGVmYXVsdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImZpbHRlciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJfa2V5IiwiY2FuVXNlRE9NIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdldENvbmZpcm1hdGlvbiIsIm1lc3NhZ2UiLCJjb25maXJtIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfdHlwZW9mIiwiY3JlYXRlQnJvd3Nlckhpc3RvcnlfZXh0ZW5kcyIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJlc19jcmVhdGVCcm93c2VySGlzdG9yeSIsImludmFyaWFudF9icm93c2VyX2RlZmF1bHQiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJ0cmFuc2l0aW9uTWFuYWdlciIsInNldFN0YXRlIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsInJldmVydFBvcCIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImRlbHRhIiwiZ28iLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwiaHJlZiIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJjcmVhdGVIYXNoSGlzdG9yeV9leHRlbmRzIiwiSGFzaFBhdGhDb2RlcnMiLCJoYXNoYmFuZyIsImVuY29kZVBhdGgiLCJkZWNvZGVQYXRoIiwibm9zbGFzaCIsInNsYXNoIiwiZ2V0SGFzaFBhdGgiLCJyZXBsYWNlSGFzaFBhdGgiLCJlc19jcmVhdGVIYXNoSGlzdG9yeSIsImNhbkdvV2l0aG91dFJlbG9hZCIsIl9wcm9wcyRoYXNoVHlwZSIsImhhc2hUeXBlIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiaWdub3JlUGF0aCIsImVuY29kZWRQYXRoIiwicHJldkxvY2F0aW9uIiwiYWxsUGF0aHMiLCJsYXN0SW5kZXhPZiIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNyZWF0ZU1lbW9yeUhpc3RvcnlfdHlwZW9mIiwiY3JlYXRlTWVtb3J5SGlzdG9yeV9leHRlbmRzIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsImVzX2NyZWF0ZU1lbW9yeUhpc3RvcnkiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJpbml0aWFsRW50cmllcyIsIl9wcm9wcyRpbml0aWFsSW5kZXgiLCJpbml0aWFsSW5kZXgiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJSb3V0ZXJfZXh0ZW5kcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUm91dGVyX1JvdXRlciIsIl9SZWFjdCRDb21wb25lbnQiLCJSb3V0ZXIiLCJfdGVtcCIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwiY29tcHV0ZU1hdGNoIiwiX2luaGVyaXRzIiwicm91dGVyIiwicGFyYW1zIiwiaXNFeGFjdCIsIl90aGlzMiIsIl9wcm9wcyIsInJlYWN0X2RlZmF1bHQiLCJjb3VudCIsIm5leHRQcm9wcyIsIndhcm5pbmdfZGVmYXVsdCIsIm9ubHkiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJlc19Sb3V0ZXIiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlciIsIkJyb3dzZXJSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkJyb3dzZXJSb3V0ZXJfQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyX2NsYXNzQ2FsbENoZWNrIiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJIYXNoUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJIYXNoUm91dGVyX0hhc2hSb3V0ZXIiLCJIYXNoUm91dGVyIiwiSGFzaFJvdXRlcl9jbGFzc0NhbGxDaGVjayIsIkhhc2hSb3V0ZXJfaW5oZXJpdHMiLCJlc19IYXNoUm91dGVyIiwiTGlua19leHRlbmRzIiwiTGlua19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiaXNNb2RpZmllZEV2ZW50IiwiTGlua19MaW5rIiwiTGluayIsIkxpbmtfY2xhc3NDYWxsQ2hlY2siLCJoYW5kbGVDbGljayIsIl90aGlzJHByb3BzIiwiTGlua19pbmhlcml0cyIsImlubmVyUmVmIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXNfTGluayIsIk1lbW9yeVJvdXRlcl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiTWVtb3J5Um91dGVyX01lbW9yeVJvdXRlciIsIk1lbW9yeVJvdXRlciIsIk1lbW9yeVJvdXRlcl9jbGFzc0NhbGxDaGVjayIsIk1lbW9yeVJvdXRlcl9pbmhlcml0cyIsInJlYWN0X3JvdXRlcl9kb21fZXNfTWVtb3J5Um91dGVyIiwicGF0dGVybkNhY2hlIiwiY2FjaGVDb3VudCIsImVzX21hdGNoUGF0aCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJfY29tcGlsZVBhdGgiLCJjYWNoZUtleSIsImNhY2hlIiwiY29tcGlsZWRQYXR0ZXJuIiwicGF0aF90b19yZWdleHBfZGVmYXVsdCIsIm1hdGNoUGF0aF9jb21waWxlUGF0aCIsInJlZHVjZSIsIm1lbW8iLCJSb3V0ZV9leHRlbmRzIiwiUm91dGVfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlJvdXRlX2lzRW1wdHlDaGlsZHJlbiIsIlJvdXRlX1JvdXRlIiwiUm91dGUiLCJSb3V0ZV9jbGFzc0NhbGxDaGVjayIsIlJvdXRlX2luaGVyaXRzIiwiY29tcHV0ZWRNYXRjaCIsImNvbXBvbmVudCIsIm5leHRDb250ZXh0IiwiX2NvbnRleHQkcm91dGVyIiwic3RhdGljQ29udGV4dCIsImVzX1JvdXRlIiwicmVhY3Rfcm91dGVyX2RvbV9lc19Sb3V0ZSIsIk5hdkxpbmtfZXh0ZW5kcyIsIk5hdkxpbmtfdHlwZW9mIiwiTmF2TGlua19OYXZMaW5rIiwiYWN0aXZlQ2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJnZXRJc0FjdGl2ZSIsImFyaWFDdXJyZW50IiwicmVzdCIsIk5hdkxpbmtfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJlc2NhcGVkUGF0aCIsIl9yZWYyIiwiYXJpYS1jdXJyZW50IiwiZXNfTmF2TGluayIsIlByb21wdF9Qcm9tcHQiLCJQcm9tcHQiLCJQcm9tcHRfY2xhc3NDYWxsQ2hlY2siLCJQcm9tcHRfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlByb21wdF9pbmhlcml0cyIsImVuYWJsZSIsImRpc2FibGUiLCJ3aGVuIiwicmVhY3Rfcm91dGVyX2RvbV9lc19Qcm9tcHQiLCJnZW5lcmF0ZVBhdGhfcGF0dGVybkNhY2hlIiwiZ2VuZXJhdGVQYXRoX2NhY2hlQ291bnQiLCJlc19nZW5lcmF0ZVBhdGgiLCJjb21waWxlZEdlbmVyYXRvciIsImdlbmVyYXRlUGF0aF9jb21waWxlR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiUmVkaXJlY3RfZXh0ZW5kcyIsIlJlZGlyZWN0X1JlZGlyZWN0IiwiUmVkaXJlY3QiLCJSZWRpcmVjdF9jbGFzc0NhbGxDaGVjayIsIlJlZGlyZWN0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSZWRpcmVjdF9pbmhlcml0cyIsImlzU3RhdGljIiwicHJldlByb3BzIiwicHJldlRvIiwibmV4dFRvIiwiY29tcHV0ZVRvIiwicmVhY3Rfcm91dGVyX2RvbV9lc19SZWRpcmVjdCIsIlN0YXRpY1JvdXRlcl9leHRlbmRzIiwiU3RhdGljUm91dGVyX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJTdGF0aWNSb3V0ZXJfYWRkTGVhZGluZ1NsYXNoIiwiYWRkQmFzZW5hbWUiLCJTdGF0aWNSb3V0ZXJfc3RyaXBCYXNlbmFtZSIsIlN0YXRpY1JvdXRlcl9jcmVhdGVVUkwiLCJTdGF0aWNSb3V0ZXJfc3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwiU3RhdGljUm91dGVyX1N0YXRpY1JvdXRlciIsIlN0YXRpY1JvdXRlciIsIlN0YXRpY1JvdXRlcl9jbGFzc0NhbGxDaGVjayIsImhhbmRsZVB1c2giLCJoYW5kbGVSZXBsYWNlIiwiX3RoaXMkcHJvcHMyIiwiaGFuZGxlTGlzdGVuIiwiaGFuZGxlQmxvY2siLCJTdGF0aWNSb3V0ZXJfaW5oZXJpdHMiLCJTdGF0aWNSb3V0ZXJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N0YXRpY1JvdXRlciIsIlN3aXRjaF9Td2l0Y2giLCJTd2l0Y2giLCJTd2l0Y2hfY2xhc3NDYWxsQ2hlY2siLCJTd2l0Y2hfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlN3aXRjaF9pbmhlcml0cyIsImlzVmFsaWRFbGVtZW50IiwiX2VsZW1lbnQkcHJvcHMiLCJwYXRoUHJvcCIsImNsb25lRWxlbWVudCIsInJlYWN0X3JvdXRlcl9kb21fZXNfU3dpdGNoIiwicmVhY3Rfcm91dGVyX2RvbV9lc19nZW5lcmF0ZVBhdGgiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX21hdGNoUGF0aCIsIndpdGhSb3V0ZXJfZXh0ZW5kcyIsInJlYWN0X3JvdXRlcl9kb21fZXNfd2l0aFJvdXRlciIsIndyYXBwZWRDb21wb25lbnRSZWYiLCJyZW1haW5pbmdQcm9wcyIsIndpdGhSb3V0ZXJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwiV3JhcHBlZENvbXBvbmVudCIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX2Nqc19kZWZhdWx0IiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJrZXlQcmVmaXgiLCI9IiwiOiIsImVzY2FwZSIsImRhIiwidG9BcnJheSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiZm9yd2FyZFJlZiIsImxhenkiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNyZWF0ZUZhY3RvcnkiLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiaGFkUnVudGltZSIsInJlZ2VuZXJhdG9yUnVudGltZSIsIm9sZFJ1bnRpbWUiLCJPcCIsImhhc093biIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3IiLCJ0b1N0cmluZ1RhZ1N5bWJvbCIsImluTW9kdWxlIiwicnVudGltZSIsIkdlblN0YXRlU3VzcGVuZGVkU3RhcnQiLCJHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkIiwiR2VuU3RhdGVFeGVjdXRpbmciLCJHZW5TdGF0ZUNvbXBsZXRlZCIsIkNvbnRpbnVlU2VudGluZWwiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIkdlbmVyYXRvciIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJtYXJrIiwiYXdyYXAiLCJfX2F3YWl0IiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiQXN5bmNJdGVyYXRvciIsImFzeW5jIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJ0cnlMb2NzTGlzdCIsInJldmVyc2UiLCJDb250ZXh0IiwicmVzZXQiLCJza2lwVGVtcFJlc2V0IiwicHJldiIsInNlbnQiLCJfc2VudCIsImRlbGVnYXRlIiwibWV0aG9kIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJzdG9wIiwicm9vdFJlY29yZCIsImNvbXBsZXRpb24iLCJydmFsIiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJyZWNvcmQiLCJ0cnlMb2MiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhYnJ1cHQiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImFmdGVyTG9jIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJlc3VsdE5hbWUiLCJuZXh0TG9jIiwicHJvdG9HZW5lcmF0b3IiLCJfaW52b2tlIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInRyeUNhdGNoIiwibWFrZUludm9rZU1ldGhvZCIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwidW53cmFwcGVkIiwicHVzaFRyeUVudHJ5IiwibG9jcyIsIml0ZXJhdG9yTWV0aG9kIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwid2FybmluZyIsIl9yZWFjdCIsIl9yZWFjdFJvdXRlckRvbSIsIl9Ib21lIiwiQXBwIiwiX3JlYWN0MiIsIkhvbWVWaWV3IiwidGFyZ2V0Tm9kZSIsIl9jYWxsZWUiLCJfcmVnZW5lcmF0b3IyIiwiY2xlYXJUYXJnZXROb2RlIiwiX3JlYWN0RG9tIiwiX0FwcDIiLCJnZXRFbGVtZW50QnlJZCIsImluaXRpYWxpemVDbGllbnQiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEVBQUEsR0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxHQUFBLENBQ0FHLEVB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QXlwQixTQUFBOEQsRUFBQXo0RCwwREFmUDNDLEVBQUEsc0NBQ0FBLEVBQUEsaUJBQ0F1N0QsRUFBQXY3RCxFQUFBLHdGQXFCQSxTQUFTczdELEVBQWdCSCxJQUN2QixFQUFBSSxFQUFBbmQsd0JBQXVCK2MsR0FsQm5CQSxFQUFhM3pELFNBQVNpMEQsZUFBZSxRQUN6Q2w1RCxFQUFBSCxRQUFRUyxRQUFRNjRELEVBQWlCUCxJQUM5QmxoRCxNQUFNLFNBQUE1VyxHQUNMNFYsUUFBUS9WLE1BQU0sOENBQ2QrVixRQUFRL1YsTUFBTUcsc2RDVnBCdzNELEVBQUE3NkQsRUFBQSw2RkFFYWs3RCxpTkFFVCxPQUNFRCxFQUFBNzRELFFBQUFzRixjQUFBLFdBQ0V1ekQsRUFBQTc0RCxRQUFBc0YsY0FBQSwwQ0FKc0JzbkMiLCJmaWxlIjoiaW5kZXhfYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvcHVibGljXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGVcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZlwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZlwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbFwiKSwgX19lc01vZHVsZTogdHJ1ZSB9OyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9wcm9taXNlID0gcmVxdWlyZShcIi4uL2NvcmUtanMvcHJvbWlzZVwiKTtcblxudmFyIF9wcm9taXNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb21pc2UpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZ2VuID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIGZ1bmN0aW9uIHN0ZXAoa2V5LCBhcmcpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgICAgICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gX3Byb21pc2UyLmRlZmF1bHQucmVzb2x2ZSh2YWx1ZSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHN0ZXAoXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBzdGVwKFwidGhyb3dcIiwgZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3RlcChcIm5leHRcIik7XG4gICAgfSk7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9kZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIik7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVmaW5lUHJvcGVydHkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgKDAsIF9kZWZpbmVQcm9wZXJ0eTIuZGVmYXVsdCkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9zZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpO1xuXG52YXIgX3NldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NldFByb3RvdHlwZU9mKTtcblxudmFyIF9jcmVhdGUgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlXCIpO1xuXG52YXIgX2NyZWF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGUpO1xuXG52YXIgX3R5cGVvZjIgPSByZXF1aXJlKFwiLi4vaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBfdHlwZW9mMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cGVvZjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgKHR5cGVvZiBzdXBlckNsYXNzID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShzdXBlckNsYXNzKSkpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gKDAsIF9jcmVhdGUyLmRlZmF1bHQpKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQgPyAoMCwgX3NldFByb3RvdHlwZU9mMi5kZWZhdWx0KShzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF90eXBlb2YyID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgX3R5cGVvZjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90eXBlb2YyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHNlbGYsIGNhbGwpIHtcbiAgaWYgKCFzZWxmKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNhbGwgJiYgKCh0eXBlb2YgY2FsbCA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiAoMCwgX3R5cGVvZjMuZGVmYXVsdCkoY2FsbCkpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2l0ZXJhdG9yID0gcmVxdWlyZShcIi4uL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yXCIpO1xuXG52YXIgX2l0ZXJhdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2l0ZXJhdG9yKTtcblxudmFyIF9zeW1ib2wgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9zeW1ib2xcIik7XG5cbnZhciBfc3ltYm9sMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N5bWJvbCk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgX2l0ZXJhdG9yMi5kZWZhdWx0ID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gX3N5bWJvbDIuZGVmYXVsdCAmJiBvYmogIT09IF9zeW1ib2wyLmRlZmF1bHQucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgX3R5cGVvZihfaXRlcmF0b3IyLmRlZmF1bHQpID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKG9iaik7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iaiA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKG9iaik7XG59OyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIik7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlJyk7XG52YXIgJE9iamVjdCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZShQLCBEKSB7XG4gIHJldHVybiAkT2JqZWN0LmNyZWF0ZShQLCBEKTtcbn07XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgJE9iamVjdCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2MpIHtcbiAgcmV0dXJuICRPYmplY3QuZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYyk7XG59O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Quc2V0UHJvdG90eXBlT2Y7XG4iLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5wcm9taXNlLnRyeScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJykuUHJvbWlzZTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN5bWJvbCcpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wub2JzZXJ2YWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3ltYm9sO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCcpLmYoJ2l0ZXJhdG9yJyk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpIHtcbiAgaWYgKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYW4gb2JqZWN0IScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gZmFsc2UgLT4gQXJyYXkjaW5kZXhPZlxuLy8gdHJ1ZSAgLT4gQXJyYXkjaW5jbHVkZXNcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIGlmICh2YWx1ZSAhPSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pIHtcbiAgICAgIGlmIChPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG4iLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBBUkcgPSBjb2YoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIFQsIEI7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mIChUID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUQUcpKSA9PSAnc3RyaW5nJyA/IFRcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IEFSRyA/IGNvZihPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChCID0gY29mKE8pKSA9PSAnT2JqZWN0JyAmJiB0eXBlb2YgTy5jYWxsZWUgPT0gJ2Z1bmN0aW9uJyA/ICdBcmd1bWVudHMnIDogQjtcbn07XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi42LjMnIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbi8vIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnIGluIG9sZCBJRVxudmFyIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG4iLCIvLyBJRSA4LSBkb24ndCBlbnVtIGJ1ZyBrZXlzXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgJ2NvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZidcbikuc3BsaXQoJywnKTtcbiIsIi8vIGFsbCBlbnVtZXJhYmxlIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBzeW1ib2xzXG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHJlc3VsdCA9IGdldEtleXMoaXQpO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgaWYgKGdldFN5bWJvbHMpIHtcbiAgICB2YXIgc3ltYm9scyA9IGdldFN5bWJvbHMoaXQpO1xuICAgIHZhciBpc0VudW0gPSBwSUUuZjtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGtleTtcbiAgICB3aGlsZSAoc3ltYm9scy5sZW5ndGggPiBpKSBpZiAoaXNFbnVtLmNhbGwoaXQsIGtleSA9IHN5bWJvbHNbaSsrXSkpIHJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgSVNfV1JBUCA9IHR5cGUgJiAkZXhwb3J0Llc7XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXTtcbiAgdmFyIHRhcmdldCA9IElTX0dMT0JBTCA/IGdsb2JhbCA6IElTX1NUQVRJQyA/IGdsb2JhbFtuYW1lXSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBrZXksIG93biwgb3V0O1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIGlmIChvd24gJiYgaGFzKGV4cG9ydHMsIGtleSkpIGNvbnRpbnVlO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gb3duID8gdGFyZ2V0W2tleV0gOiBzb3VyY2Vba2V5XTtcbiAgICAvLyBwcmV2ZW50IGdsb2JhbCBwb2xsdXRpb24gZm9yIG5hbWVzcGFjZXNcbiAgICBleHBvcnRzW2tleV0gPSBJU19HTE9CQUwgJiYgdHlwZW9mIHRhcmdldFtrZXldICE9ICdmdW5jdGlvbicgPyBzb3VyY2Vba2V5XVxuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgOiBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbClcbiAgICAvLyB3cmFwIGdsb2JhbCBjb25zdHJ1Y3RvcnMgZm9yIHByZXZlbnQgY2hhbmdlIHRoZW0gaW4gbGlicmFyeVxuICAgIDogSVNfV1JBUCAmJiB0YXJnZXRba2V5XSA9PSBvdXQgPyAoZnVuY3Rpb24gKEMpIHtcbiAgICAgIHZhciBGID0gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBDKSB7XG4gICAgICAgICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgQygpO1xuICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IEMoYSk7XG4gICAgICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgQyhhLCBiKTtcbiAgICAgICAgICB9IHJldHVybiBuZXcgQyhhLCBiLCBjKTtcbiAgICAgICAgfSByZXR1cm4gQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfTtcbiAgICAgIEZbUFJPVE9UWVBFXSA9IENbUFJPVE9UWVBFXTtcbiAgICAgIHJldHVybiBGO1xuICAgIC8vIG1ha2Ugc3RhdGljIHZlcnNpb25zIGZvciBwcm90b3R5cGUgbWV0aG9kc1xuICAgIH0pKG91dCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUubWV0aG9kcy4lTkFNRSVcbiAgICBpZiAoSVNfUFJPVE8pIHtcbiAgICAgIChleHBvcnRzLnZpcnR1YWwgfHwgKGV4cG9ydHMudmlydHVhbCA9IHt9KSlba2V5XSA9IG91dDtcbiAgICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5wcm90b3R5cGUuJU5BTUUlXG4gICAgICBpZiAodHlwZSAmICRleHBvcnQuUiAmJiBleHBQcm90byAmJiAhZXhwUHJvdG9ba2V5XSkgaGlkZShleHBQcm90bywga2V5LCBvdXQpO1xuICAgIH1cbiAgfVxufTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG52YXIgQlJFQUsgPSB7fTtcbnZhciBSRVRVUk4gPSB7fTtcbnZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUikge1xuICB2YXIgaXRlckZuID0gSVRFUkFUT1IgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSk7XG4gIHZhciBmID0gY3R4KGZuLCB0aGF0LCBlbnRyaWVzID8gMiA6IDEpO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZiAodHlwZW9mIGl0ZXJGbiAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXRlcmFibGUgKyAnIGlzIG5vdCBpdGVyYWJsZSEnKTtcbiAgLy8gZmFzdCBjYXNlIGZvciBhcnJheXMgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yXG4gIGlmIChpc0FycmF5SXRlcihpdGVyRm4pKSBmb3IgKGxlbmd0aCA9IHRvTGVuZ3RoKGl0ZXJhYmxlLmxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9IGVsc2UgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOykge1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9XG59O1xuZXhwb3J0cy5CUkVBSyA9IEJSRUFLO1xuZXhwb3J0cy5SRVRVUk4gPSBSRVRVUk47XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIiwidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCIvLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCBhcmdzLCB0aGF0KSB7XG4gIHZhciB1biA9IHRoYXQgPT09IHVuZGVmaW5lZDtcbiAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuIiwiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iLCIvLyA3LjIuMiBJc0FycmF5KGFyZ3VtZW50KVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIiwiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBlbnRyaWVzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaCAoZSkge1xuICAgIHZhciByZXQgPSBpdGVyYXRvclsncmV0dXJuJ107XG4gICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSBhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciAkaXRlckNyZWF0ZSA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQlVHR1kgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSk7IC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbnZhciBGRl9JVEVSQVRPUiA9ICdAQGl0ZXJhdG9yJztcbnZhciBLRVlTID0gJ2tleXMnO1xudmFyIFZBTFVFUyA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgIGlmICghQlVHR1kgJiYga2luZCBpbiBwcm90bykgcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgPSBOQU1FICsgJyBJdGVyYXRvcic7XG4gIHZhciBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVM7XG4gIHZhciBWQUxVRVNfQlVHID0gZmFsc2U7XG4gIHZhciBwcm90byA9IEJhc2UucHJvdG90eXBlO1xuICB2YXIgJG5hdGl2ZSA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXTtcbiAgdmFyICRkZWZhdWx0ID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCk7XG4gIHZhciAkZW50cmllcyA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWQ7XG4gIHZhciAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZTtcbiAgdmFyIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYgKCRhbnlOYXRpdmUpIHtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSgpKSk7XG4gICAgaWYgKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEl0ZXJhdG9yUHJvdG90eXBlLm5leHQpIHtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZiAoIUxJQlJBUlkgJiYgdHlwZW9mIEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSAhPSAnZnVuY3Rpb24nKSBoaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUykge1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZiAoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpIHtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddID0gcmV0dXJuVGhpcztcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIGZvciAoa2V5IGluIG1ldGhvZHMpIHtcbiAgICAgIGlmICghKGtleSBpbiBwcm90bykpIHJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCJ2YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIHJpdGVyID0gWzddW0lURVJBVE9SXSgpO1xuICByaXRlclsncmV0dXJuJ10gPSBmdW5jdGlvbiAoKSB7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uICgpIHsgdGhyb3cgMjsgfSk7XG59IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYywgc2tpcENsb3NpbmcpIHtcbiAgaWYgKCFza2lwQ2xvc2luZyAmJiAhU0FGRV9DTE9TSU5HKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzYWZlID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IFs3XTtcbiAgICB2YXIgaXRlciA9IGFycltJVEVSQVRPUl0oKTtcbiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB7IGRvbmU6IHNhZmUgPSB0cnVlIH07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXI7IH07XG4gICAgZXhlYyhhcnIpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIHNhZmU7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZG9uZSwgdmFsdWUpIHtcbiAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmUgfTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB0cnVlO1xuIiwidmFyIE1FVEEgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgc2V0RGVzYyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaWQgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBzZXREZXNjKGl0LCBNRVRBLCB7IHZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSB9KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpIHNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiBNRVRBLFxuICBORUVEOiBmYWxzZSxcbiAgZmFzdEtleTogZmFzdEtleSxcbiAgZ2V0V2VhazogZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG1hY3JvdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgT2JzZXJ2ZXIgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciB8fCBnbG9iYWwuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBoZWFkLCBsYXN0LCBub3RpZnk7XG5cbiAgdmFyIGZsdXNoID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwYXJlbnQsIGZuO1xuICAgIGlmIChpc05vZGUgJiYgKHBhcmVudCA9IHByb2Nlc3MuZG9tYWluKSkgcGFyZW50LmV4aXQoKTtcbiAgICB3aGlsZSAoaGVhZCkge1xuICAgICAgZm4gPSBoZWFkLmZuO1xuICAgICAgaGVhZCA9IGhlYWQubmV4dDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZuKCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChoZWFkKSBub3RpZnkoKTtcbiAgICAgICAgZWxzZSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gbGFzdCA9IHVuZGVmaW5lZDtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQuZW50ZXIoKTtcbiAgfTtcblxuICAvLyBOb2RlLmpzXG4gIGlmIChpc05vZGUpIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgICB9O1xuICAvLyBicm93c2VycyB3aXRoIE11dGF0aW9uT2JzZXJ2ZXIsIGV4Y2VwdCBpT1MgU2FmYXJpIC0gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzMzOVxuICB9IGVsc2UgaWYgKE9ic2VydmVyICYmICEoZ2xvYmFsLm5hdmlnYXRvciAmJiBnbG9iYWwubmF2aWdhdG9yLnN0YW5kYWxvbmUpKSB7XG4gICAgdmFyIHRvZ2dsZSA9IHRydWU7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgbmV3IE9ic2VydmVyKGZsdXNoKS5vYnNlcnZlKG5vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAhdG9nZ2xlO1xuICAgIH07XG4gIC8vIGVudmlyb25tZW50cyB3aXRoIG1heWJlIG5vbi1jb21wbGV0ZWx5IGNvcnJlY3QsIGJ1dCBleGlzdGVudCBQcm9taXNlXG4gIH0gZWxzZSBpZiAoUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpIHtcbiAgICAvLyBQcm9taXNlLnJlc29sdmUgd2l0aG91dCBhbiBhcmd1bWVudCB0aHJvd3MgYW4gZXJyb3IgaW4gTEcgV2ViT1MgMlxuICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvbWlzZS50aGVuKGZsdXNoKTtcbiAgICB9O1xuICAvLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuICAvLyAtIHNldEltbWVkaWF0ZVxuICAvLyAtIE1lc3NhZ2VDaGFubmVsXG4gIC8vIC0gd2luZG93LnBvc3RNZXNzYWdcbiAgLy8gLSBvbnJlYWR5c3RhdGVjaGFuZ2VcbiAgLy8gLSBzZXRUaW1lb3V0XG4gIH0gZWxzZSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gc3RyYW5nZSBJRSArIHdlYnBhY2sgZGV2IHNlcnZlciBidWcgLSB1c2UgLmNhbGwoZ2xvYmFsKVxuICAgICAgbWFjcm90YXNrLmNhbGwoZ2xvYmFsLCBmbHVzaCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZm4pIHtcbiAgICB2YXIgdGFzayA9IHsgZm46IGZuLCBuZXh0OiB1bmRlZmluZWQgfTtcbiAgICBpZiAobGFzdCkgbGFzdC5uZXh0ID0gdGFzaztcbiAgICBpZiAoIWhlYWQpIHtcbiAgICAgIGhlYWQgPSB0YXNrO1xuICAgICAgbm90aWZ5KCk7XG4gICAgfSBsYXN0ID0gdGFzaztcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyNS40LjEuNSBOZXdQcm9taXNlQ2FwYWJpbGl0eShDKVxudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcblxuZnVuY3Rpb24gUHJvbWlzZUNhcGFiaWxpdHkoQykge1xuICB2YXIgcmVzb2x2ZSwgcmVqZWN0O1xuICB0aGlzLnByb21pc2UgPSBuZXcgQyhmdW5jdGlvbiAoJCRyZXNvbHZlLCAkJHJlamVjdCkge1xuICAgIGlmIChyZXNvbHZlICE9PSB1bmRlZmluZWQgfHwgcmVqZWN0ICE9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTtcbiAgICByZXNvbHZlID0gJCRyZXNvbHZlO1xuICAgIHJlamVjdCA9ICQkcmVqZWN0O1xuICB9KTtcbiAgdGhpcy5yZXNvbHZlID0gYUZ1bmN0aW9uKHJlc29sdmUpO1xuICB0aGlzLnJlamVjdCA9IGFGdW5jdGlvbihyZWplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gKEMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlQ2FwYWJpbGl0eShDKTtcbn07XG4iLCIvLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGRQcyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcHMnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBFbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxuLy8gQ3JlYXRlIG9iamVjdCB3aXRoIGZha2UgYG51bGxgIHByb3RvdHlwZTogdXNlIGlmcmFtZSBPYmplY3Qgd2l0aCBjbGVhcmVkIHByb3RvdHlwZVxudmFyIGNyZWF0ZURpY3QgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIFRocmFzaCwgd2FzdGUgYW5kIHNvZG9teTogSUUgR0MgYnVnXG4gIHZhciBpZnJhbWUgPSByZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2lmcmFtZScpO1xuICB2YXIgaSA9IGVudW1CdWdLZXlzLmxlbmd0aDtcbiAgdmFyIGx0ID0gJzwnO1xuICB2YXIgZ3QgPSAnPic7XG4gIHZhciBpZnJhbWVEb2N1bWVudDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIHJlcXVpcmUoJy4vX2h0bWwnKS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICBpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6JzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zY3JpcHQtdXJsXG4gIC8vIGNyZWF0ZURpY3QgPSBpZnJhbWUuY29udGVudFdpbmRvdy5PYmplY3Q7XG4gIC8vIGh0bWwucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgaWZyYW1lRG9jdW1lbnQub3BlbigpO1xuICBpZnJhbWVEb2N1bWVudC53cml0ZShsdCArICdzY3JpcHQnICsgZ3QgKyAnZG9jdW1lbnQuRj1PYmplY3QnICsgbHQgKyAnL3NjcmlwdCcgKyBndCk7XG4gIGlmcmFtZURvY3VtZW50LmNsb3NlKCk7XG4gIGNyZWF0ZURpY3QgPSBpZnJhbWVEb2N1bWVudC5GO1xuICB3aGlsZSAoaS0tKSBkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTtcbiAgcmV0dXJuIGNyZWF0ZURpY3QoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcykge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoTyAhPT0gbnVsbCkge1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHkoKTtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gbnVsbDtcbiAgICAvLyBhZGQgXCJfX3Byb3RvX19cIiBmb3IgT2JqZWN0LmdldFByb3RvdHlwZU9mIHBvbHlmaWxsXG4gICAgcmVzdWx0W0lFX1BST1RPXSA9IE87XG4gIH0gZWxzZSByZXN1bHQgPSBjcmVhdGVEaWN0KCk7XG4gIHJldHVybiBQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQgPyByZXN1bHQgOiBkUHMocmVzdWx0LCBQcm9wZXJ0aWVzKTtcbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciBnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUEQgOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCkge1xuICBPID0gdG9JT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZ09QRChPLCBQKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmIChoYXMoTywgUCkpIHJldHVybiBjcmVhdGVEZXNjKCFwSUUuZi5jYWxsKE8sIFApLCBPW1BdKTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxudmFyIHdpbmRvd05hbWVzID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNcbiAgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpIDogW107XG5cbnZhciBnZXRXaW5kb3dOYW1lcyA9IGZ1bmN0aW9uIChpdCkge1xuICB0cnkge1xuICAgIHJldHVybiBnT1BOKGl0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICByZXR1cm4gd2luZG93TmFtZXMgJiYgdG9TdHJpbmcuY2FsbChpdCkgPT0gJ1tvYmplY3QgV2luZG93XScgPyBnZXRXaW5kb3dOYW1lcyhpdCkgOiBnT1BOKHRvSU9iamVjdChpdCkpO1xufTtcbiIsIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKS5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgfHwgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iLCJleHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuIiwiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gKE8pIHtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZiAoaGFzKE8sIElFX1BST1RPKSkgcmV0dXJuIE9bSUVfUFJPVE9dO1xuICBpZiAodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBPLmNvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgfSByZXR1cm4gTyBpbnN0YW5jZW9mIE9iamVjdCA/IE9iamVjdFByb3RvIDogbnVsbDtcbn07XG4iLCJ2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSBpZiAoa2V5ICE9IElFX1BST1RPKSBoYXMoTywga2V5KSAmJiByZXN1bHQucHVzaChrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iLCJleHBvcnRzLmYgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiIsIi8vIG1vc3QgT2JqZWN0IG1ldGhvZHMgYnkgRVM2IHNob3VsZCBhY2NlcHQgcHJpbWl0aXZlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgZXhlYykge1xuICB2YXIgZm4gPSAoY29yZS5PYmplY3QgfHwge30pW0tFWV0gfHwgT2JqZWN0W0tFWV07XG4gIHZhciBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7IGZuKDEpOyB9KSwgJ09iamVjdCcsIGV4cCk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiB7IGU6IGZhbHNlLCB2OiBleGVjKCkgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7IGU6IHRydWUsIHY6IGUgfTtcbiAgfVxufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEMsIHgpIHtcbiAgYW5PYmplY3QoQyk7XG4gIGlmIChpc09iamVjdCh4KSAmJiB4LmNvbnN0cnVjdG9yID09PSBDKSByZXR1cm4geDtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZihDKTtcbiAgdmFyIHJlc29sdmUgPSBwcm9taXNlQ2FwYWJpbGl0eS5yZXNvbHZlO1xuICByZXNvbHZlKHgpO1xuICByZXR1cm4gcHJvbWlzZUNhcGFiaWxpdHkucHJvbWlzZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwidmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNyYywgc2FmZSkge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgaWYgKHNhZmUgJiYgdGFyZ2V0W2tleV0pIHRhcmdldFtrZXldID0gc3JjW2tleV07XG4gICAgZWxzZSBoaWRlKHRhcmdldCwga2V5LCBzcmNba2V5XSk7XG4gIH0gcmV0dXJuIHRhcmdldDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbiIsIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgY2hlY2sgPSBmdW5jdGlvbiAoTywgcHJvdG8pIHtcbiAgYW5PYmplY3QoTyk7XG4gIGlmICghaXNPYmplY3QocHJvdG8pICYmIHByb3RvICE9PSBudWxsKSB0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbiAodGVzdCwgYnVnZ3ksIHNldCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0ID0gcmVxdWlyZSgnLi9fY3R4JykoRnVuY3Rpb24uY2FsbCwgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mKE9iamVjdC5wcm90b3R5cGUsICdfX3Byb3RvX18nKS5zZXQsIDIpO1xuICAgICAgICBzZXQodGVzdCwgW10pO1xuICAgICAgICBidWdneSA9ICEodGVzdCBpbnN0YW5jZW9mIEFycmF5KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pIHtcbiAgICAgICAgY2hlY2soTywgcHJvdG8pO1xuICAgICAgICBpZiAoYnVnZ3kpIE8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSB0eXBlb2YgY29yZVtLRVldID09ICdmdW5jdGlvbicgPyBjb3JlW0tFWV0gOiBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxOSBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBpbnZva2UgPSByZXF1aXJlKCcuL19pbnZva2UnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNlbCA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgc2V0VGFzayA9IGdsb2JhbC5zZXRJbW1lZGlhdGU7XG52YXIgY2xlYXJUYXNrID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlO1xudmFyIE1lc3NhZ2VDaGFubmVsID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsO1xudmFyIERpc3BhdGNoID0gZ2xvYmFsLkRpc3BhdGNoO1xudmFyIGNvdW50ZXIgPSAwO1xudmFyIHF1ZXVlID0ge307XG52YXIgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG52YXIgZGVmZXIsIGNoYW5uZWwsIHBvcnQ7XG52YXIgcnVuID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaWQgPSArdGhpcztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICBpZiAocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgdmFyIGZuID0gcXVldWVbaWRdO1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gICAgZm4oKTtcbiAgfVxufTtcbnZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudCkge1xuICBydW4uY2FsbChldmVudC5kYXRhKTtcbn07XG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZiAoIXNldFRhc2sgfHwgIWNsZWFyVGFzaykge1xuICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICB2YXIgaSA9IDE7XG4gICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpKSBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICAgIGludm9rZSh0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhclRhc2sgPSBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShpZCkge1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gIH07XG4gIC8vIE5vZGUuanMgMC44LVxuICBpZiAocmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBTcGhlcmUgKEpTIGdhbWUgZW5naW5lKSBEaXNwYXRjaCBBUElcbiAgfSBlbHNlIGlmIChEaXNwYXRjaCAmJiBEaXNwYXRjaC5ub3cpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgRGlzcGF0Y2gubm93KGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYgKE1lc3NhZ2VDaGFubmVsKSB7XG4gICAgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgIHBvcnQgPSBjaGFubmVsLnBvcnQyO1xuICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gbGlzdGVuZXI7XG4gICAgZGVmZXIgPSBjdHgocG9ydC5wb3N0TWVzc2FnZSwgcG9ydCwgMSk7XG4gIC8vIEJyb3dzZXJzIHdpdGggcG9zdE1lc3NhZ2UsIHNraXAgV2ViV29ya2Vyc1xuICAvLyBJRTggaGFzIHBvc3RNZXNzYWdlLCBidXQgaXQncyBzeW5jICYgdHlwZW9mIGl0cyBwb3N0TWVzc2FnZSBpcyAnb2JqZWN0J1xuICB9IGVsc2UgaWYgKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTtcbiAgICB9O1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgLy8gSUU4LVxuICB9IGVsc2UgaWYgKE9OUkVBRFlTVEFURUNIQU5HRSBpbiBjZWwoJ3NjcmlwdCcpKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY2VsKCdzY3JpcHQnKSlbT05SRUFEWVNUQVRFQ0hBTkdFXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaHRtbC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgcnVuLmNhbGwoaWQpO1xuICAgICAgfTtcbiAgICB9O1xuICAvLyBSZXN0IG9sZCBicm93c2Vyc1xuICB9IGVsc2Uge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBzZXRUaW1lb3V0KGN0eChydW4sIGlkLCAxKSwgMCk7XG4gICAgfTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogc2V0VGFzayxcbiAgY2xlYXI6IGNsZWFyVGFza1xufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuIiwiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iLCIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4vLyBpbnN0ZWFkIG9mIHRoZSBFUzYgc3BlYyB2ZXJzaW9uLCB3ZSBkaWRuJ3QgaW1wbGVtZW50IEBAdG9QcmltaXRpdmUgY2FzZVxuLy8gYW5kIHRoZSBzZWNvbmQgYXJndW1lbnQgLSBmbGFnIC0gcHJlZmVycmVkIHR5cGUgaXMgYSBzdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBTKSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICghUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsInZhciBpZCA9IDA7XG52YXIgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG5hdmlnYXRvciA9IGdsb2JhbC5uYXZpZ2F0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF2aWdhdG9yICYmIG5hdmlnYXRvci51c2VyQWdlbnQgfHwgJyc7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG4iLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kXG4vLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIga2luZCA9IHRoaXMuX2s7XG4gIHZhciBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYgKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKSB7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIE9baW5kZXhdKTtcbiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pO1xufSwgJ3ZhbHVlcycpO1xuXG4vLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpXG5JdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBjcmVhdGU6IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKSB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuNCAvIDE1LjIuMy42IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydHk6IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYgfSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgbWljcm90YXNrID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnM7XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52OCB8fCAnJztcbnZhciAkUHJvbWlzZSA9IGdsb2JhbFtQUk9NSVNFXTtcbnZhciBpc05vZGUgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJztcbnZhciBlbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBJbnRlcm5hbCwgbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBPd25Qcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmY7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSAkUHJvbWlzZS5yZXNvbHZlKDEpO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgICAgIGV4ZWMoZW1wdHksIGVtcHR5KTtcbiAgICB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpXG4gICAgICAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2VcbiAgICAgIC8vIHY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTgzMDU2NVxuICAgICAgLy8gd2UgY2FuJ3QgZGV0ZWN0IGl0IHN5bmNocm9ub3VzbHksIHNvIGp1c3QgY2hlY2sgdmVyc2lvbnNcbiAgICAgICYmIHY4LmluZGV4T2YoJzYuNicpICE9PSAwXG4gICAgICAmJiB1c2VyQWdlbnQuaW5kZXhPZignQ2hyb21lLzY2JykgPT09IC0xO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKHByb21pc2UsIGlzUmVqZWN0KSB7XG4gIGlmIChwcm9taXNlLl9uKSByZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIG9rID0gcHJvbWlzZS5fcyA9PSAxO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24gKHJlYWN0aW9uKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsO1xuICAgICAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICAgICAgdmFyIHJlamVjdCA9IHJlYWN0aW9uLnJlamVjdDtcbiAgICAgIHZhciBkb21haW4gPSByZWFjdGlvbi5kb21haW47XG4gICAgICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIGlmICghb2spIHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLl9oID09IDIpIG9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYW5kbGVyID09PSB0cnVlKSByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkb21haW4pIGRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7IC8vIG1heSB0aHJvd1xuICAgICAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgICBkb21haW4uZXhpdCgpO1xuICAgICAgICAgICAgICBleGl0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKSB7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoID4gaSkgcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYgKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKSBvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIHVuaGFuZGxlZCA9IGlzVW5oYW5kbGVkKHByb21pc2UpO1xuICAgIHZhciByZXN1bHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYgKHVuaGFuZGxlZCkge1xuICAgICAgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKSB7XG4gICAgICAgICAgaGFuZGxlcih7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWUgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodW5oYW5kbGVkICYmIHJlc3VsdC5lKSB0aHJvdyByZXN1bHQudjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgcmV0dXJuIHByb21pc2UuX2ggIT09IDEgJiYgKHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYykubGVuZ3RoID09PSAwO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZiAoaXNOb2RlKSB7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKSB7XG4gICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92IH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmICghcHJvbWlzZS5fYSkgcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIHZhciB0aGVuO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYgKHByb21pc2UgPT09IHZhbHVlKSB0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZiAodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgICRyZWplY3QuY2FsbCh7IF93OiBwcm9taXNlLCBfZDogZmFsc2UgfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmICghVVNFX05BVElWRSkge1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgIHZhciByZWFjdGlvbiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZiAodGhpcy5fYSkgdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9zKSBub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgT3duUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgSW50ZXJuYWwoKTtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09ICRQcm9taXNlIHx8IEMgPT09IFdyYXBwZXJcbiAgICAgID8gbmV3IE93blByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICA6IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBQcm9taXNlOiAkUHJvbWlzZSB9KTtcbnJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJykoJFByb21pc2UsIFBST01JU0UpO1xucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShQUk9NSVNFKTtcbldyYXBwZXIgPSByZXF1aXJlKCcuL19jb3JlJylbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocikge1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcyk7XG4gICAgdmFyICQkcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KSB7XG4gICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKExJQlJBUlkgJiYgdGhpcyA9PT0gV3JhcHBlciA/ICRQcm9taXNlIDogdGhpcywgeCk7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikge1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciAkaW5kZXggPSBpbmRleCsrO1xuICAgICAgICB2YXIgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGFscmVhZHlDYWxsZWQpIHJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgICB2YXIgcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0LmUpIHJlamVjdChyZXN1bHQudik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEVDTUFTY3JpcHQgNiBzeW1ib2xzIHNoaW1cbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBNRVRBID0gcmVxdWlyZSgnLi9fbWV0YScpLktFWTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciB3a3NFeHQgPSByZXF1aXJlKCcuL193a3MtZXh0Jyk7XG52YXIgd2tzRGVmaW5lID0gcmVxdWlyZSgnLi9fd2tzLWRlZmluZScpO1xudmFyIGVudW1LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1rZXlzJyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBnT1BORXh0ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0Jyk7XG52YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BEID0gJEdPUEQuZjtcbnZhciBkUCA9ICREUC5mO1xudmFyIGdPUE4gPSBnT1BORXh0LmY7XG52YXIgJFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgJEpTT04gPSBnbG9iYWwuSlNPTjtcbnZhciBfc3RyaW5naWZ5ID0gJEpTT04gJiYgJEpTT04uc3RyaW5naWZ5O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xudmFyIEhJRERFTiA9IHdrcygnX2hpZGRlbicpO1xudmFyIFRPX1BSSU1JVElWRSA9IHdrcygndG9QcmltaXRpdmUnKTtcbnZhciBpc0VudW0gPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBTeW1ib2xSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXJlZ2lzdHJ5Jyk7XG52YXIgQWxsU3ltYm9scyA9IHNoYXJlZCgnc3ltYm9scycpO1xudmFyIE9QU3ltYm9scyA9IHNoYXJlZCgnb3Atc3ltYm9scycpO1xudmFyIE9iamVjdFByb3RvID0gT2JqZWN0W1BST1RPVFlQRV07XG52YXIgVVNFX05BVElWRSA9IHR5cGVvZiAkU3ltYm9sID09ICdmdW5jdGlvbic7XG52YXIgUU9iamVjdCA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRQKHRoaXMsICdhJywgeyB2YWx1ZTogNyB9KS5hOyB9XG4gIH0pKS5hICE9IDc7XG59KSA/IGZ1bmN0aW9uIChpdCwga2V5LCBEKSB7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZiAocHJvdG9EZXNjKSBkZWxldGUgT2JqZWN0UHJvdG9ba2V5XTtcbiAgZFAoaXQsIGtleSwgRCk7XG4gIGlmIChwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKSBkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpO1xufSA6IGRQO1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpIHtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90bykgJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTtcbiAgYW5PYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBhbk9iamVjdChEKTtcbiAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFELmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzKGl0LCBISURERU4pKSBkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7XG4gICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkgaXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7IGVudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpIH0pO1xuICAgIH0gcmV0dXJuIHNldFN5bWJvbERlc2MoaXQsIGtleSwgRCk7XG4gIH0gcmV0dXJuIGRQKGl0LCBrZXksIEQpO1xufTtcbnZhciAkZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoaXQsIFApIHtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpO1xuICB2YXIgaSA9IDA7XG4gIHZhciBsID0ga2V5cy5sZW5ndGg7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChsID4gaSkgJGRlZmluZVByb3BlcnR5KGl0LCBrZXkgPSBrZXlzW2krK10sIFBba2V5XSk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgJGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpdCwgUCkge1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkge1xuICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpO1xuICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgaXQgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBEID0gZ09QRChpdCwga2V5KTtcbiAgaWYgKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSkgRC5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgcmV0dXJuIEQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICB2YXIgbmFtZXMgPSBnT1BOKHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoIWhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiBrZXkgIT0gSElEREVOICYmIGtleSAhPSBNRVRBKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgdmFyIElTX09QID0gaXQgPT09IE9iamVjdFByb3RvO1xuICB2YXIgbmFtZXMgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmIChoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpIHJlc3VsdC5wdXNoKEFsbFN5bWJvbHNba2V5XSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIDE5LjQuMS4xIFN5bWJvbChbZGVzY3JpcHRpb25dKVxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgaWYgKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKSB0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTtcbiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvKSAkc2V0LmNhbGwoT1BTeW1ib2xzLCB2YWx1ZSk7XG4gICAgICBpZiAoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSkgdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTtcbiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG4gICAgfTtcbiAgICBpZiAoREVTQ1JJUFRPUlMgJiYgc2V0dGVyKSBzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXQgfSk7XG4gICAgcmV0dXJuIHdyYXAodGFnKTtcbiAgfTtcbiAgcmVkZWZpbmUoJFN5bWJvbFtQUk9UT1RZUEVdLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mID0gJGRlZmluZVByb3BlcnR5O1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJykuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5JykpIHtcbiAgICByZWRlZmluZShPYmplY3RQcm90bywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJHByb3BlcnR5SXNFbnVtZXJhYmxlLCB0cnVlKTtcbiAgfVxuXG4gIHdrc0V4dC5mID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFN5bWJvbDogJFN5bWJvbCB9KTtcblxuZm9yICh2YXIgZXM2U3ltYm9scyA9IChcbiAgLy8gMTkuNC4yLjIsIDE5LjQuMi4zLCAxOS40LjIuNCwgMTkuNC4yLjYsIDE5LjQuMi44LCAxOS40LjIuOSwgMTkuNC4yLjEwLCAxOS40LjIuMTEsIDE5LjQuMi4xMiwgMTkuNC4yLjEzLCAxOS40LjIuMTRcbiAgJ2hhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzJ1xuKS5zcGxpdCgnLCcpLCBqID0gMDsgZXM2U3ltYm9scy5sZW5ndGggPiBqOyl3a3MoZXM2U3ltYm9sc1tqKytdKTtcblxuZm9yICh2YXIgd2VsbEtub3duU3ltYm9scyA9ICRrZXlzKHdrcy5zdG9yZSksIGsgPSAwOyB3ZWxsS25vd25TeW1ib2xzLmxlbmd0aCA+IGs7KSB3a3NEZWZpbmUod2VsbEtub3duU3ltYm9sc1trKytdKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ1N5bWJvbCcsIHtcbiAgLy8gMTkuNC4yLjEgU3ltYm9sLmZvcihrZXkpXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgICBmb3IgKHZhciBrZXkgaW4gU3ltYm9sUmVnaXN0cnkpIGlmIChTeW1ib2xSZWdpc3RyeVtrZXldID09PSBzeW0pIHJldHVybiBrZXk7XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgUyA9ICRTeW1ib2woKTtcbiAgLy8gTVMgRWRnZSBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMge31cbiAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gIHJldHVybiBfc3RyaW5naWZ5KFtTXSkgIT0gJ1tudWxsXScgfHwgX3N0cmluZ2lmeSh7IGE6IFMgfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9Jztcbn0pKSwgJ0pTT04nLCB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7XG4gICAgdmFyIGFyZ3MgPSBbaXRdO1xuICAgIHZhciBpID0gMTtcbiAgICB2YXIgcmVwbGFjZXIsICRyZXBsYWNlcjtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgJHJlcGxhY2VyID0gcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmICghaXNPYmplY3QocmVwbGFjZXIpICYmIGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICBpZiAoIWlzQXJyYXkocmVwbGFjZXIpKSByZXBsYWNlciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mICRyZXBsYWNlciA9PSAnZnVuY3Rpb24nKSB2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYgKCFpc1N5bWJvbCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIGFyZ3NbMV0gPSByZXBsYWNlcjtcbiAgICByZXR1cm4gX3N0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJncyk7XG4gIH1cbn0pO1xuXG4vLyAxOS40LjMuNCBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdKGhpbnQpXG4kU3ltYm9sW1BST1RPVFlQRV1bVE9fUFJJTUlUSVZFXSB8fCByZXF1aXJlKCcuL19oaWRlJykoJFN5bWJvbFtQUk9UT1RZUEVdLCBUT19QUklNSVRJVkUsICRTeW1ib2xbUFJPVE9UWVBFXS52YWx1ZU9mKTtcbi8vIDE5LjQuMy41IFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKCRTeW1ib2wsICdTeW1ib2wnKTtcbi8vIDIwLjIuMS45IE1hdGhbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKE1hdGgsICdNYXRoJywgdHJ1ZSk7XG4vLyAyNC4zLjMgSlNPTltAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoZ2xvYmFsLkpTT04sICdKU09OJywgdHJ1ZSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1wcm9taXNlLWZpbmFsbHlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgcHJvbWlzZVJlc29sdmUgPSByZXF1aXJlKCcuL19wcm9taXNlLXJlc29sdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlIsICdQcm9taXNlJywgeyAnZmluYWxseSc6IGZ1bmN0aW9uIChvbkZpbmFsbHkpIHtcbiAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKTtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2Ygb25GaW5hbGx5ID09ICdmdW5jdGlvbic7XG4gIHJldHVybiB0aGlzLnRoZW4oXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4geDsgfSk7XG4gICAgfSA6IG9uRmluYWxseSxcbiAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDLCBvbkZpbmFsbHkoKSkudGhlbihmdW5jdGlvbiAoKSB7IHRocm93IGU7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHlcbiAgKTtcbn0gfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1wcm9taXNlLXRyeVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1Byb21pc2UnLCB7ICd0cnknOiBmdW5jdGlvbiAoY2FsbGJhY2tmbikge1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKHRoaXMpO1xuICB2YXIgcmVzdWx0ID0gcGVyZm9ybShjYWxsYmFja2ZuKTtcbiAgKHJlc3VsdC5lID8gcHJvbWlzZUNhcGFiaWxpdHkucmVqZWN0IDogcHJvbWlzZUNhcGFiaWxpdHkucmVzb2x2ZSkocmVzdWx0LnYpO1xuICByZXR1cm4gcHJvbWlzZUNhcGFiaWxpdHkucHJvbWlzZTtcbn0gfSk7XG4iLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ2FzeW5jSXRlcmF0b3InKTtcbiIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnb2JzZXJ2YWJsZScpO1xuIiwicmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIFRPX1NUUklOR19UQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcblxudmFyIERPTUl0ZXJhYmxlcyA9ICgnQ1NTUnVsZUxpc3QsQ1NTU3R5bGVEZWNsYXJhdGlvbixDU1NWYWx1ZUxpc3QsQ2xpZW50UmVjdExpc3QsRE9NUmVjdExpc3QsRE9NU3RyaW5nTGlzdCwnICtcbiAgJ0RPTVRva2VuTGlzdCxEYXRhVHJhbnNmZXJJdGVtTGlzdCxGaWxlTGlzdCxIVE1MQWxsQ29sbGVjdGlvbixIVE1MQ29sbGVjdGlvbixIVE1MRm9ybUVsZW1lbnQsSFRNTFNlbGVjdEVsZW1lbnQsJyArXG4gICdNZWRpYUxpc3QsTWltZVR5cGVBcnJheSxOYW1lZE5vZGVNYXAsTm9kZUxpc3QsUGFpbnRSZXF1ZXN0TGlzdCxQbHVnaW4sUGx1Z2luQXJyYXksU1ZHTGVuZ3RoTGlzdCxTVkdOdW1iZXJMaXN0LCcgK1xuICAnU1ZHUGF0aFNlZ0xpc3QsU1ZHUG9pbnRMaXN0LFNWR1N0cmluZ0xpc3QsU1ZHVHJhbnNmb3JtTGlzdCxTb3VyY2VCdWZmZXJMaXN0LFN0eWxlU2hlZXRMaXN0LFRleHRUcmFja0N1ZUxpc3QsJyArXG4gICdUZXh0VHJhY2tMaXN0LFRvdWNoTGlzdCcpLnNwbGl0KCcsJyk7XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgRE9NSXRlcmFibGVzLmxlbmd0aDsgaSsrKSB7XG4gIHZhciBOQU1FID0gRE9NSXRlcmFibGVzW2ldO1xuICB2YXIgQ29sbGVjdGlvbiA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIHByb3RvID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgaWYgKHByb3RvICYmICFwcm90b1tUT19TVFJJTkdfVEFHXSkgaGlkZShwcm90bywgVE9fU1RSSU5HX1RBRywgTkFNRSk7XG4gIEl0ZXJhdG9yc1tOQU1FXSA9IEl0ZXJhdG9ycy5BcnJheTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBjb250ZXh0VHlwZXM6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gICAgbWl4aW5zOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlXG59O1xuXG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgICBuYW1lOiB0cnVlLFxuICAgIGxlbmd0aDogdHJ1ZSxcbiAgICBwcm90b3R5cGU6IHRydWUsXG4gICAgY2FsbGVyOiB0cnVlLFxuICAgIGNhbGxlZTogdHJ1ZSxcbiAgICBhcmd1bWVudHM6IHRydWUsXG4gICAgYXJpdHk6IHRydWVcbn07XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mICYmIGdldFByb3RvdHlwZU9mKE9iamVjdCk7XG5cbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHsgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcblxuICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcbiAgICAgICAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgICAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgICAgaWYgKCFSRUFDVF9TVEFUSUNTW2tleV0gJiYgIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAoIWJsYWNrbGlzdCB8fCAhYmxhY2tsaXN0W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuICAgICAgICAgICAgICAgIHRyeSB7IC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNy4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksYmE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp0KFwiMjI3XCIpO2Z1bmN0aW9uIGRhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsayl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGw9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksbD12b2lkIDA7aGF8fChoYT0hMCxpYT1sKX19dmFyIG1hPW51bGwsbmE9e307XG5mdW5jdGlvbiBvYSgpe2lmKG1hKWZvcih2YXIgYSBpbiBuYSl7dmFyIGI9bmFbYV0sYz1tYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnQoXCI5NlwiLGEpO2lmKCFwYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp0KFwiOTdcIixhKTtwYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3FhLmhhc093blByb3BlcnR5KGgpP3QoXCI5OVwiLGgpOnZvaWQgMDtxYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZyYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocmEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp0KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcmEoYSxiLGMpe3NhW2FdP3QoXCIxMDBcIixhKTp2b2lkIDA7c2FbYV09Yjt0YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBwYT1bXSxxYT17fSxzYT17fSx0YT17fSx1YT1udWxsLHZhPW51bGwsd2E9bnVsbDtmdW5jdGlvbiB4YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9d2EoYyk7bGEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB5YShhLGIpe251bGw9PWI/dChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB6YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgQWE9bnVsbDtmdW5jdGlvbiBCYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspeGEoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmeGEoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe21hP3QoXCIxMDFcIik6dm9pZCAwO21hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO29hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtuYS5oYXNPd25Qcm9wZXJ0eShjKSYmbmFbY109PT1kfHwobmFbY10/dChcIjEwMlwiLGMpOnZvaWQgMCxuYVtjXT1kLGI9ITApfWImJm9hKCl9fTtcbmZ1bmN0aW9uIERhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dWEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIEVhKGEpe251bGwhPT1hJiYoQWE9eWEoQWEsYSkpO2E9QWE7QWE9bnVsbDtpZihhJiYoemEoYSxCYSksQWE/dChcIjk1XCIpOnZvaWQgMCxoYSkpdGhyb3cgYT1pYSxoYT0hMSxpYT1udWxsLGE7fXZhciBGYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxHYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0ZhLEhhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRmE7ZnVuY3Rpb24gSWEoYSl7aWYoYVtHYV0pcmV0dXJuIGFbR2FdO2Zvcig7IWFbR2FdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbR2FdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSmEoYSl7YT1hW0dhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gS2EoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3QoXCIzM1wiKX1mdW5jdGlvbiBMYShhKXtyZXR1cm4gYVtIYV18fG51bGx9ZnVuY3Rpb24gTWEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBOYShhLGIsYyl7aWYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXlhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXlhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gT2EoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1NYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTmEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylOYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBQYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFFhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmUGEoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUmEoYSl7emEoYSxPYSl9dmFyIFNhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gVGEoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVWE9e2FuaW1hdGlvbmVuZDpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlRhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVmE9e30sV2E9e307XG5TYSYmKFdhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFVhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFVhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWGEoYSl7aWYoVmFbYV0pcmV0dXJuIFZhW2FdO2lmKCFVYVthXSlyZXR1cm4gYTt2YXIgYj1VYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBXYSlyZXR1cm4gVmFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBZYT1YYShcImFuaW1hdGlvbmVuZFwiKSxaYT1YYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSwkYT1YYShcImFuaW1hdGlvbnN0YXJ0XCIpLGFiPVhhKFwidHJhbnNpdGlvbmVuZFwiKSxiYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksY2I9bnVsbCxlYj1udWxsLGZiPW51bGw7XG5mdW5jdGlvbiBnYigpe2lmKGZiKXJldHVybiBmYjt2YXIgYSxiPWViLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGZiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gaGIoKXtyZXR1cm4hMH1mdW5jdGlvbiBpYigpe3JldHVybiExfVxuZnVuY3Rpb24geihhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/aGI6aWI7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1pYjtyZXR1cm4gdGhpc31cbm4oei5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1oYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1oYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1oYn0saXNQZXJzaXN0ZW50OmliLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWliO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7ei5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG56LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2piKGMpO3JldHVybiBjfTtqYih6KTtmdW5jdGlvbiBrYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBsYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6dChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBqYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1rYjthLnJlbGVhc2U9bGJ9dmFyIG1iPXouZXh0ZW5kKHtkYXRhOm51bGx9KSxuYj16LmV4dGVuZCh7ZGF0YTpudWxsfSksb2I9WzksMTMsMjcsMzJdLHBiPVNhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxxYj1udWxsO1NhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihxYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHJiPVNhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhcWIsc2I9U2EmJighcGJ8fHFiJiY4PHFiJiYxMT49cWIpLHRiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHViPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHZiPSExO1xuZnVuY3Rpb24gd2IoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1vYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHhiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHliPSExO2Z1bmN0aW9uIHpiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB4YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dmI9ITA7cmV0dXJuIHRiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXRiJiZ2Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBBYihhLGIpe2lmKHliKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFwYiYmd2IoYSxiKT8oYT1nYigpLGZiPWViPWNiPW51bGwseWI9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHNiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBCYj17ZXZlbnRUeXBlczp1YixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYocGIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT11Yi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT11Yi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9dWIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHliP3diKGEsYykmJihlPXViLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9dWIuY29tcG9zaXRpb25TdGFydCk7ZT8oc2ImJlwia29cIiE9PWMubG9jYWxlJiYoeWJ8fGUhPT11Yi5jb21wb3NpdGlvblN0YXJ0P2U9PT11Yi5jb21wb3NpdGlvbkVuZCYmeWImJihmPWdiKCkpOihjYj1kLGViPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LHliPVxuITApKSxlPW1iLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXhiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxSYShlKSxmPWUpOmY9bnVsbDsoYT1yYj96YihhLGMpOkFiKGEsYykpPyhiPW5iLmdldFBvb2xlZCh1Yi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUmEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQ2I9bnVsbCxEYj1udWxsLEViPW51bGw7ZnVuY3Rpb24gSGIoYSl7aWYoYT12YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIENiP3QoXCIyODBcIik6dm9pZCAwO3ZhciBiPXVhKGEuc3RhdGVOb2RlKTtDYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEliKGEpe0RiP0ViP0ViLnB1c2goYSk6RWI9W2FdOkRiPWF9ZnVuY3Rpb24gSmIoKXtpZihEYil7dmFyIGE9RGIsYj1FYjtFYj1EYj1udWxsO0hiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylIYihiW2FdKX19XG5mdW5jdGlvbiBLYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIExiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIE1iKCl7fXZhciBOYj0hMTtmdW5jdGlvbiBPYihhLGIpe2lmKE5iKXJldHVybiBhKGIpO05iPSEwO3RyeXtyZXR1cm4gS2IoYSxiKX1maW5hbGx5e2lmKE5iPSExLG51bGwhPT1EYnx8bnVsbCE9PUViKU1iKCksSmIoKX19dmFyIFBiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFFiKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhUGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gUmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIFNiKGEpe2lmKCFTYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBUYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWIoYSl7dmFyIGI9VGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYihhKSl9ZnVuY3Rpb24gV2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgWGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsWWI9L14oLiopW1xcXFxcXC9dLyxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmI9RD9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2M9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGM9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2M9RD9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6XG42MDExMyxpYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGpjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsa2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGxjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1rYyYmYVtrY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIG1jKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgZmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgYWM6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGI6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNjOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGljOnJldHVybiBtYyhhLnR5cGUpO2Nhc2UgamM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBtYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBuYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9bWMoYS50eXBlKTtjPW51bGw7ZCYmKGM9bWMoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYixcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIG9jPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxwYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHFjPXt9LHJjPXt9O1xuZnVuY3Rpb24gc2MoYSl7aWYocGMuY2FsbChyYyxhKSlyZXR1cm4hMDtpZihwYy5jYWxsKHFjLGEpKXJldHVybiExO2lmKG9jLnRlc3QoYSkpcmV0dXJuIHJjW2FdPSEwO3FjW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHRjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gdWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8dGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBFKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRj17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtGW2JdPW5ldyBFKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgdmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB3YyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2YyxcbndjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RltiXT1uZXcgRShiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0YudGFiSW5kZXg9bmV3IEUoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xuZnVuY3Rpb24geGMoYSxiLGMsZCl7dmFyIGU9Ri5oYXNPd25Qcm9wZXJ0eShiKT9GW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwodWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP3NjKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB5YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gemMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9eWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnhjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYyhhLGIpe0JjKGEsYik7dmFyIGM9eWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGMoYSxiLnR5cGUseWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEZjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIEdjKGEsYixjKXthPXouZ2V0UG9vbGVkKEZjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7SWIoYyk7UmEoYSk7cmV0dXJuIGF9dmFyIEpjPW51bGwsS2M9bnVsbDtmdW5jdGlvbiBMYyhhKXtFYShhKX1cbmZ1bmN0aW9uIE1jKGEpe3ZhciBiPUthKGEpO2lmKFdiKGIpKXJldHVybiBhfWZ1bmN0aW9uIE5jKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIE9jPSExO1NhJiYoT2M9U2IoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gUGMoKXtKYyYmKEpjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFFjKSxLYz1KYz1udWxsKX1mdW5jdGlvbiBRYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmTWMoS2MpJiYoYT1HYyhLYyxhLFJiKGEpKSxPYihMYyxhKSl9ZnVuY3Rpb24gUmMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KFBjKCksSmM9YixLYz1jLEpjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFFjKSk6XCJibHVyXCI9PT1hJiZQYygpfWZ1bmN0aW9uIFNjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIE1jKEtjKX1cbmZ1bmN0aW9uIFRjKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gTWMoYil9ZnVuY3Rpb24gVWMoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gTWMoYil9XG52YXIgVmM9e2V2ZW50VHlwZXM6RmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpPYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/S2EoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPU5jOlFiKGUpP09jP2Y9VWM6KGY9U2MsZz1SYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9VGMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIEdjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sV2M9ei5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFhjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFljKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9WGNbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBaYygpe3JldHVybiBZY31cbnZhciAkYz0wLGFkPTAsYmQ9ITEsY2Q9ITEsZGQ9V2MuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPSRjOyRjPWEuc2NyZWVuWDtyZXR1cm4gYmQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihiZD0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPWFkO2FkPWEuc2NyZWVuWTtyZXR1cm4gY2Q/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihjZD0hMCwwKX19KSxlZD1kZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZmQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGdkPXtldmVudFR5cGVzOmZkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0lhKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbD12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1kZCxoPWZkLm1vdXNlTGVhdmUsaz1mZC5tb3VzZUVudGVyLGw9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1lZCxoPWZkLnBvaW50ZXJMZWF2ZSxrPWZkLnBvaW50ZXJFbnRlcixsPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpLYShmKTtlPW51bGw9PWI/ZTpLYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1sK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPWwrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtsPTA7Zm9yKGc9YjtnO2c9TWEoZykpbCsrO2c9MDtmb3Ioaz1lO2s7az1NYShrKSlnKys7Zm9yKDswPGwtZzspYj1NYShiKSxsLS07Zm9yKDswPGctbDspZT1NYShlKSxnLS07Zm9yKDtsLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1NYShiKTtlPU1hKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtsPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2IucHVzaChmKTtmPU1hKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7bD1kLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TWEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylQYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylQYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19LGhkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZnVuY3Rpb24gaWQoYSxiKXtyZXR1cm4gYT09PWI/MCE9PWF8fDAhPT1ifHwxL2E9PT0xL2I6YSE9PWEmJmIhPT1ifVxuZnVuY3Rpb24gamQoYSxiKXtpZihpZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWhkLmNhbGwoYixjW2RdKXx8IWlkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24ga2QoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7MiE9PWtkKGEpP3QoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbWQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9a2QoYSksMz09PWI/dChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gbGQoZSksYTtpZihnPT09ZClyZXR1cm4gbGQoZSksYjtnPWcuc2libGluZ310KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6dChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3QoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz90KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG5kKGEpe2E9bWQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgb2Q9ei5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHBkPXouZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSkscWQ9V2MuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiByZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBzZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sdGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHVkPVdjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1zZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1yZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/dGRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP3JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3JkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksdmQ9ZGQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHdkPVdjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlpjfSkseGQ9ei5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkseWQ9ZGQuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx6ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtZYSxcImFuaW1hdGlvbkVuZFwiXSxbWmEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sWyRhLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbYWIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSxBZD17fSxCZD17fTtmdW5jdGlvbiBDZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O0FkW2FdPWI7QmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCEwKX0pO3pkLmZvckVhY2goZnVuY3Rpb24oYSl7Q2QoYSwhMSl9KTtcbnZhciBEZD17ZXZlbnRUeXBlczpBZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1CZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1yZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dWQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXFkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9ZGQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnZkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9d2Q7YnJlYWs7Y2FzZSBZYTpjYXNlIFphOmNhc2UgJGE6YT1vZDticmVhaztjYXNlIGFiOmE9eGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9V2M7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT15ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPXBkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9ZWQ7YnJlYWs7ZGVmYXVsdDphPXp9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtSYShiKTtyZXR1cm4gYn19LEVkPURkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkZkPVtdO2Z1bmN0aW9uIEdkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUlhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPVJiKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPHBhLmxlbmd0aDtoKyspe3ZhciBrPXBhW2hdO2smJihrPWsuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXlhKGcsaykpfUVhKGcpfX12YXIgSGQ9ITA7XG5mdW5jdGlvbiBIKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KEVkKGEpP0lkOkpkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gS2QoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBJZChhLGIpe0xiKEpkLGEsYil9XG5mdW5jdGlvbiBKZChhLGIpe2lmKEhkKXt2YXIgYz1SYihiKTtjPUlhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09a2QoYyl8fChjPW51bGwpO2lmKEZkLmxlbmd0aCl7dmFyIGQ9RmQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7T2IoR2QsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5GZC5sZW5ndGgmJkZkLnB1c2goYSl9fX12YXIgTGQ9e30sTWQ9MCxOZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBPZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxOZCl8fChhW05kXT1NZCsrLExkW2FbTmRdXT17fSk7cmV0dXJuIExkW2FbTmRdXX1mdW5jdGlvbiBQZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gUWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gUmQoYSxiKXt2YXIgYz1RZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1RZChjKX19ZnVuY3Rpb24gU2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9TZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBUZCgpe2Zvcih2YXIgYT13aW5kb3csYj1QZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e2E9Yi5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXd9Y2F0Y2goYyl7YnJlYWt9Yj1QZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBVZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFZkPVNhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsV2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFhkPW51bGwsWWQ9bnVsbCxaZD1udWxsLCRkPSExO1xuZnVuY3Rpb24gYWUoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZigkZHx8bnVsbD09WGR8fFhkIT09UGQoYykpcmV0dXJuIG51bGw7Yz1YZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZVZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBaZCYmamQoWmQsYyk/bnVsbDooWmQ9YyxhPXouZ2V0UG9vbGVkKFdkLnNlbGVjdCxZZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVhkLFJhKGEpLGEpfVxudmFyIGJlPXtldmVudFR5cGVzOldkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPU9kKGUpO2Y9dGEub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9LYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFFiKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVhkPWUsWWQ9YixaZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6WmQ9WWQ9WGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6JGQ9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiAkZD0hMSxhZShjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihWZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGFlKGMsZCl9cmV0dXJuIG51bGx9fTtDYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3VhPUxhO3ZhPUphO3dhPUthO0NhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46RGQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmdkLENoYW5nZUV2ZW50UGx1Z2luOlZjLFNlbGVjdEV2ZW50UGx1Z2luOmJlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46QmJ9KTtmdW5jdGlvbiBkZShhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVlKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGUoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGZlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit5YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZ2UoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz90KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6dChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6eWMoYyl9fVxuZnVuY3Rpb24gaWUoYSxiKXt2YXIgYz15YyhiLnZhbHVlKSxkPXljKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGtlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGxlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbWUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2xlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG5lPXZvaWQgMCxvZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuZT1uZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1uZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJlPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxZSkuZm9yRWFjaChmdW5jdGlvbihhKXtyZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FlW2JdPXFlW2FdfSl9KTtmdW5jdGlvbiBzZShhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWUuaGFzT3duUHJvcGVydHkoYSkmJnFlW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRlKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNlKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHVlPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2ZShhLGIpe2ImJih1ZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj90KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOnQoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3QoXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiB3ZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG5mdW5jdGlvbiB4ZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1PZChhKTtiPXRhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpLZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6S2QoXCJmb2N1c1wiLGEpO0tkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpTYihlKSYmS2QoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YmIuaW5kZXhPZihlKSYmSChlLGEpfWNbZV09ITB9fX1mdW5jdGlvbiB5ZSgpe312YXIgemU9bnVsbCxBZT1udWxsO1xuZnVuY3Rpb24gQmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIENlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgRGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsRWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO1xuZnVuY3Rpb24gRmUoYSxiLGMsZCxlKXthW0hhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZCYyhhLGUpO3dlKGMsZCk7ZD13ZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP3RlKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/cGUoYSxoKTp4YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Q2MoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2ZlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9mZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTpmZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gR2UoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBIZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgSWU9W10sSmU9LTE7ZnVuY3Rpb24gSShhKXswPkplfHwoYS5jdXJyZW50PUllW0plXSxJZVtKZV09bnVsbCxKZS0tKX1mdW5jdGlvbiBKKGEsYil7SmUrKztJZVtKZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBLZT17fSxLPXtjdXJyZW50OktlfSxMPXtjdXJyZW50OiExfSxMZT1LZTtcbmZ1bmN0aW9uIE1lKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gS2U7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTShhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIE5lKGEpe0koTCxhKTtJKEssYSl9ZnVuY3Rpb24gT2UoYSl7SShMLGEpO0koSyxhKX1cbmZ1bmN0aW9uIFBlKGEsYixjKXtLLmN1cnJlbnQhPT1LZT90KFwiMTY4XCIpOnZvaWQgMDtKKEssYixhKTtKKEwsYyxhKX1mdW5jdGlvbiBRZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp0KFwiMTA4XCIsbWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gUmUoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxLZTtMZT1LLmN1cnJlbnQ7SihLLGIsYSk7SihMLEwuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFNlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp0KFwiMTY5XCIpO2M/KGI9UWUoYSxiLExlKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsSShMLGEpLEkoSyxhKSxKKEssYixhKSk6SShMLGEpO0ooTCxjLGEpfXZhciBUZT1udWxsLFVlPW51bGw7ZnVuY3Rpb24gVmUoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFdlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1RlPVZlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtVZT1WZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWGUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gTihhLGIsYyxkKXtyZXR1cm4gbmV3IFhlKGEsYixjLGQpfVxuZnVuY3Rpb24gWWUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBaZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gWWUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdjKXJldHVybiAxMTtpZihhPT09aWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gJGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1OKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5O2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBhZihhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpWWUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWM6cmV0dXJuIGJmKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmM6cmV0dXJuIGNmKGMsZXwzLGYsYik7Y2FzZSBiYzpyZXR1cm4gY2YoYyxlfDIsZixiKTtjYXNlIGNjOnJldHVybiBhPU4oMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1jYyxhLnR5cGU9Y2MsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYzpyZXR1cm4gYT1OKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWhjLGEudHlwZT1oYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGM6Zz0xMDticmVhayBhO2Nhc2UgZWM6Zz05O2JyZWFrIGE7Y2FzZSBnYzpnPTExO2JyZWFrIGE7Y2FzZSBpYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGpjOmc9MTY7ZD1udWxsO2JyZWFrIGF9dChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPU4oZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBiZihhLGIsYyxkKXthPU4oNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGNmKGEsYixjLGQpe2E9Tig4LGEsZCxiKTtiPTA9PT0oYiYxKT9iYzpmYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGRmKGEsYixjKXthPU4oNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gZWYoYSxiLGMpe2I9Tig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBmZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7Z2YoYixhKX1cbmZ1bmN0aW9uIGhmKGEsYil7YS5kaWRFcnJvcj0hMTthLmxhdGVzdFBpbmdlZFRpbWU+PWImJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lLGQ9YS5sYXRlc3RQZW5kaW5nVGltZTtjPT09Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9ZD09PWI/YS5sYXRlc3RQZW5kaW5nVGltZT0wOmQ6ZD09PWImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWMpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7ZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7MD09PWM/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YS5sYXRlc3RTdXNwZW5kZWRUaW1lPWI6YzxiP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWI6ZD5iJiYoYS5sYXRlc3RTdXNwZW5kZWRUaW1lPWIpO2dmKGIsYSl9ZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBnZihhLGIpe3ZhciBjPWIuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9Yi5sYXRlc3RTdXNwZW5kZWRUaW1lLGU9Yi5lYXJsaWVzdFBlbmRpbmdUaW1lLGY9Yi5sYXRlc3RQaW5nZWRUaW1lO2U9MCE9PWU/ZTpmOzA9PT1lJiYoMD09PWF8fGQ8YSkmJihlPWQpO2E9ZTswIT09YSYmYz5hJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfXZhciBrZj0hMTtmdW5jdGlvbiBsZihhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBtZihhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gb2YoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWxmKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1tZihlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1tZihkKSk7bnVsbD09PWV8fGQ9PT1lP29mKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8ob2YoZCxiKSxvZihlLGIpKToob2YoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBxZihhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWxmKGEubWVtb2l6ZWRTdGF0ZSk6cmYoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiByZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1tZihiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBzZihhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIDE6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIDM6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAwOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSAyOmtmPSEwfXJldHVybiBkfVxuZnVuY3Rpb24gdGYoYSxiLGMsZCxlKXtrZj0hMTtiPXJmKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsaz1iLmZpcnN0VXBkYXRlLGw9ZjtudWxsIT09azspe3ZhciBtPWsuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9ayxmPWwpLGg8bSYmKGg9bSkpOihsPXNmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciByPWsuZXhwaXJhdGlvblRpbWU7cjxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8ciYmKGg9cikpOihsPXNmKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cbjMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiB1ZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7dmYoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO3ZmKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiB2ZihhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz90KFwiMTkxXCIsYyk6dm9pZCAwO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG5mdW5jdGlvbiB3ZihhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOm5jKGIpfX12YXIgeGY9e2N1cnJlbnQ6bnVsbH0seWY9bnVsbCx6Zj1udWxsLEFmPW51bGw7ZnVuY3Rpb24gQmYoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7Sih4ZixjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gQ2YoYSl7dmFyIGI9eGYuY3VycmVudDtJKHhmLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gRGYoYSl7eWY9YTtBZj16Zj1udWxsO2EuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1udWxsfVxuZnVuY3Rpb24gRWYoYSxiKXtpZihBZiE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpQWY9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PXpmPyhudWxsPT09eWY/dChcIjI5M1wiKTp2b2lkIDAseWYuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT16Zj1iKTp6Zj16Zi5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgRmY9e30sTz17Y3VycmVudDpGZn0sR2Y9e2N1cnJlbnQ6RmZ9LEhmPXtjdXJyZW50OkZmfTtmdW5jdGlvbiBJZihhKXthPT09RmY/dChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZihhLGIpe0ooSGYsYixhKTtKKEdmLGEsYSk7SihPLEZmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOm1lKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1tZShiLGMpfUkoTyxhKTtKKE8sYixhKX1mdW5jdGlvbiBLZihhKXtJKE8sYSk7SShHZixhKTtJKEhmLGEpfWZ1bmN0aW9uIExmKGEpe0lmKEhmLmN1cnJlbnQpO3ZhciBiPUlmKE8uY3VycmVudCk7dmFyIGM9bWUoYixhLnR5cGUpO2IhPT1jJiYoSihHZixhLGEpLEooTyxjLGEpKX1mdW5jdGlvbiBNZihhKXtHZi5jdXJyZW50PT09YSYmKEkoTyxhKSxJKEdmLGEpKX1cbmZ1bmN0aW9uIFAoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9ZnVuY3Rpb24gTmYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OnRocm93IGEuX3N0YXR1cz0wLGI9YS5fY3RvcixiPWIoKSxiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pLGEuX3Jlc3VsdD1iLGI7fX12YXIgT2Y9WGIuUmVhY3RDdXJyZW50T3duZXIsUGY9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBRZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBWZj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVJmKCk7ZD1TZihkLGEpO3ZhciBlPW5mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtUZigpO3BmKGEsZSk7VWYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UmYoKTtkPVNmKGQsYSk7dmFyIGU9bmYoZCk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7VGYoKTtwZihhLGUpO1VmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVJmKCk7Yz1TZihjLGEpO3ZhciBkPW5mKGMpO2QudGFnPVxuMjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7VGYoKTtwZihhLGQpO1VmKGEsYyl9fTtmdW5jdGlvbiBXZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFqZChjLGQpfHwhamQoZSxmKTohMH1cbmZ1bmN0aW9uIFhmKGEsYixjKXt2YXIgZD0hMSxlPUtlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGYpOihlPU0oYik/TGU6Sy5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/TWUoYSxlKTpLZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVZmO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFpmKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZWZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uICRmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9UGY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1PZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChmKTooZj1NKGIpP0xlOksuY3VycmVudCxlLmNvbnRleHQ9TWUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYodGYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKFFmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlZmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHRmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgYWc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIGJnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz90KFwiMjg5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp0KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1QZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT90KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6dChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gY2coYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJnQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIGRnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9JGUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1kZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9YmcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPWFmKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPWJnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGcpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9YmYoYyxhLm1vZGUsZCxnKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHIoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWRmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjPWFmKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPWJnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYjpyZXR1cm4gYj1lZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoYWcoYil8fFxubGMoYikpcmV0dXJuIGI9YmYoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7Y2coYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB3KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWM/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRiOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKGFnKGMpfHxsYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7Y2coYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFjP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKGFnKGQpfHxsYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7Y2coYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBCKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHE9bnVsbCxtPWcsdT1nPTAscD1udWxsO251bGwhPT1tJiZ1PGgubGVuZ3RoO3UrKyl7bS5pbmRleD51PyhwPW0sbT1udWxsKTpwPW0uc2libGluZzt2YXIgdj13KGUsbSxoW3VdLGspO2lmKG51bGw9PT12KXtudWxsPT09bSYmKG09cCk7YnJlYWt9YSYmXG5tJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodixnLHUpO251bGw9PT1xP2w9djpxLnNpYmxpbmc9djtxPXY7bT1wfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYobT1yKGUsaFt1XSxrKSlnPWYobSxnLHUpLG51bGw9PT1xP2w9bTpxLnNpYmxpbmc9bSxxPW07cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3U8aC5sZW5ndGg7dSsrKWlmKHA9eShtLGUsdSxoW3VdLGspKWEmJm51bGwhPT1wLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PXAua2V5P3U6cC5rZXkpLGc9ZihwLGcsdSksbnVsbD09PXE/bD1wOnEuc2libGluZz1wLHE9cDthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFIoZSxnLGgsayl7dmFyIGw9bGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/dChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD90KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscT1nLHU9Zz0wLHA9bnVsbCx2PWgubmV4dCgpO251bGwhPT1xJiYhdi5kb25lO3UrKyx2PWgubmV4dCgpKXtxLmluZGV4PnU/KHA9cSxxPW51bGwpOnA9cS5zaWJsaW5nO3ZhciBBPXcoZSxxLHYudmFsdWUsayk7aWYobnVsbD09PUEpe3F8fChxPXApO2JyZWFrfWEmJnEmJm51bGw9PT1BLmFsdGVybmF0ZSYmYihlLHEpO2c9ZihBLGcsdSk7bnVsbD09PW0/bD1BOm0uc2libGluZz1BO209QTtxPXB9aWYodi5kb25lKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9cihlLHYudmFsdWUsayksbnVsbCE9PXYmJihnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO3JldHVybiBsfWZvcihxPWQoZSxxKTshdi5kb25lO3UrKyx2PWgubmV4dCgpKXY9eShxLGUsdSx2LnZhbHVlLGspLG51bGwhPT12JiYoYSYmbnVsbCE9PXYuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09di5rZXk/dTpcbnYua2V5KSxnPWYodixnLHUpLG51bGw9PT1tP2w9djptLnNpYmxpbmc9dixtPXYpO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFjJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFpiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09YWM6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09YWM/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPWJnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09YWM/KGQ9YmYoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWFmKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPWJnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWVmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1kZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihhZyhmKSlyZXR1cm4gQihhLGQsZixoKTtpZihsYyhmKSlyZXR1cm4gUihhLGQsZixoKTtsJiZjZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHQoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBlZz1kZyghMCksZmc9ZGcoITEpLGdnPW51bGwsaGc9bnVsbCxpZz0hMTtcbmZ1bmN0aW9uIGpnKGEsYil7dmFyIGM9Tig1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGtnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbGcoYSl7aWYoaWcpe3ZhciBiPWhnO2lmKGIpe3ZhciBjPWI7aWYoIWtnKGEsYikpe2I9R2UoYyk7aWYoIWJ8fCFrZyhhLGIpKXthLmVmZmVjdFRhZ3w9MjtpZz0hMTtnZz1hO3JldHVybn1qZyhnZyxjKX1nZz1hO2hnPUhlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsaWc9ITEsZ2c9YX19ZnVuY3Rpb24gbWcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWEucmV0dXJuO2dnPWF9ZnVuY3Rpb24gbmcoYSl7aWYoYSE9PWdnKXJldHVybiExO2lmKCFpZylyZXR1cm4gbWcoYSksaWc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFDZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9aGc7YjspamcoYSxiKSxiPUdlKGIpO21nKGEpO2hnPWdnP0dlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIG9nKCl7aGc9Z2c9bnVsbDtpZz0hMX12YXIgcGc9WGIuUmVhY3RDdXJyZW50T3duZXI7XG5mdW5jdGlvbiBRKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/ZmcoYixudWxsLGMsZCk6ZWcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gcWcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0RmKGIsZSk7ZD1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7UShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHJnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhWWUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsc2coYSxiLGcsZCxlLGYpO2E9YWYoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpqZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiB0ZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT0kZShnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gc2coYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZTxmJiZqZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWY/dGcoYSxiLGYpOnVnKGEsYixjLGQsZil9ZnVuY3Rpb24gdmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiB1ZyhhLGIsYyxkLGUpe3ZhciBmPU0oYyk/TGU6Sy5jdXJyZW50O2Y9TWUoYixmKTtEZihiLGUpO2M9YyhkLGYpO2IuZWZmZWN0VGFnfD0xO1EoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB3ZyhhLGIsYyxkLGUpe2lmKE0oYykpe3ZhciBmPSEwO1JlKGIpfWVsc2UgZj0hMTtEZihiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksWGYoYixjLGQsZSksJGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9T2YuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TShjKT9MZTpLLmN1cnJlbnQsbD1NZShiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtyfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWmYoYixnLGQsbCk7a2Y9ITE7dmFyIHc9Yi5tZW1vaXplZFN0YXRlO2s9Zy5zdGF0ZT13O3ZhciB5PWIudXBkYXRlUXVldWU7bnVsbCE9PXkmJih0ZihiLHksZCxnLGUpLGs9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8dyE9PWt8fEwuY3VycmVudHx8a2Y/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUWYoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPWtmfHxXZihiLGMsaCxkLHcsayxsKSk/KHJ8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpQKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPU9mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGwpOihsPU0oYyk/TGU6Sy5jdXJyZW50LGw9TWUoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcbihyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWmYoYixnLGQsbCksa2Y9ITEsaz1iLm1lbW9pemVkU3RhdGUsdz1nLnN0YXRlPWsseT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT15JiYodGYoYix5LGQsZyxlKSx3PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT13fHxMLmN1cnJlbnR8fGtmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKFFmKGIsYyxtLGQpLHc9Yi5tZW1vaXplZFN0YXRlKSwobT1rZnx8V2YoYixjLGgsZCxrLHcsbCkpPyhyfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdyxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHcsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9dyksZy5wcm9wcz1kLGcuc3RhdGU9dyxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4geGcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24geGcoYSxiLGMsZCxlLGYpe3ZnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZTZShiLGMsITEpLHRnKGEsYixmKTtkPWIuc3RhdGVOb2RlO3BnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWVnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9ZWcoYixudWxsLGgsZikpOlEoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmU2UoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB5ZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P1BlKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJlBlKGEsYi5jb250ZXh0LCExKTtKZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiB6ZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9YmYobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPWJmKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPWZnKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPSRlKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz0kZShoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1lZyhiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1iZihudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1iZihnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPWVnKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZyhhLGIsYyl7bnVsbCE9PWEmJihiLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9YS5maXJzdENvbnRleHREZXBlbmRlbmN5KTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/dChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPSRlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPSRlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIEFnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hJiZhLm1lbW9pemVkUHJvcHM9PT1iLnBlbmRpbmdQcm9wcyYmIUwuY3VycmVudCYmZDxjKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzp5ZyhiKTtvZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6TShiLnR5cGUpJiZSZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOkJmKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB6ZyhhLGIsYyk7Yj10ZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gdGcoYSxiLGMpfWIuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIuZWxlbWVudFR5cGU7bnVsbCE9PVxuYSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1NZShiLEsuY3VycmVudCk7RGYoYixjKTtlPWQoYSxlKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7aWYoTShkKSl7dmFyIGY9ITA7UmUoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJlFmKGIsZCxnLGEpO2UudXBkYXRlcj1WZjtiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iOyRmKGIsZCxhLGMpO2I9eGcobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUShudWxsLGIsZSxjKSxiPWIuY2hpbGQ7XG5yZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7Zj1iLnBlbmRpbmdQcm9wczthPU5mKGUpO2IudHlwZT1hO2U9Yi50YWc9WmUoYSk7Zj1QKGEsZik7Zz12b2lkIDA7c3dpdGNoKGUpe2Nhc2UgMDpnPXVnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxOmc9d2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDExOmc9cWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE0Omc9cmcobnVsbCxiLGEsUChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OnQoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLHVnKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksd2coYSxiLFxuZCxlLGMpO2Nhc2UgMzp5ZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/dChcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt0ZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKW9nKCksYj10ZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSloZz1IZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxnZz1iLGU9aWc9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1mZyhiLG51bGwsZCxjKSk6KFEoYSxiLGQsYyksb2coKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gTGYoYiksbnVsbD09PWEmJmxnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sQ2UoZCxlKT9nPW51bGw6bnVsbCE9PVxuZiYmQ2UoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksdmcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUShhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmbGcoYiksbnVsbDtjYXNlIDEzOnJldHVybiB6ZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1lZyhiLG51bGwsZCxjKTpRKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6UChkLGUpLHFnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBRKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtCZihiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9aD09PWYmJigwIT09aHx8MS9oPT09MS9mKXx8aCE9PWgmJmYhPT1mPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTC5jdXJyZW50KXtiPXRnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihnPWIuY2hpbGQsbnVsbCE9PWcmJihnLnJldHVybj1iKTtudWxsIT09Zzspe2g9Zy5maXJzdENvbnRleHREZXBlbmRlbmN5O2lmKG51bGwhPT1oKXtkb3tpZihoLmNvbnRleHQ9PT1kJiYwIT09KGgub2JzZXJ2ZWRCaXRzJmYpKXtpZigxPT09Zy50YWcpe3ZhciBrPW5mKGMpO2sudGFnPTI7cGYoZyxrKX1nLmV4cGlyYXRpb25UaW1lPFxuYyYmKGcuZXhwaXJhdGlvblRpbWU9Yyk7az1nLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtmb3IodmFyIGw9Zy5yZXR1cm47bnVsbCE9PWw7KXtrPWwuYWx0ZXJuYXRlO2lmKGwuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWwuY2hpbGRFeHBpcmF0aW9uVGltZT1jLG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YyYmKGsuY2hpbGRFeHBpcmF0aW9uVGltZT1jKTtlbHNlIGlmKG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YylrLmNoaWxkRXhwaXJhdGlvblRpbWU9YztlbHNlIGJyZWFrO2w9bC5yZXR1cm59fWs9Zy5jaGlsZDtoPWgubmV4dH13aGlsZShudWxsIT09aCl9ZWxzZSBrPTEwPT09Zy50YWc/Zy50eXBlPT09Yi50eXBlP251bGw6Zy5jaGlsZDpnLmNoaWxkO2lmKG51bGwhPT1rKWsucmV0dXJuPWc7ZWxzZSBmb3Ioaz1nO251bGwhPT1rOyl7aWYoaz09PWIpe2s9bnVsbDticmVha31nPWsuc2libGluZztcbmlmKG51bGwhPT1nKXtnLnJldHVybj1rLnJldHVybjtrPWc7YnJlYWt9az1rLnJldHVybn1nPWt9fVEoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sRGYoYixjKSxlPUVmKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxRKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1QKGUsYi5wZW5kaW5nUHJvcHMpLGY9UChlLnR5cGUsZikscmcoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHNnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpQKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTShkKT8oYT1cbiEwLFJlKGIpKTphPSExLERmKGIsYyksWGYoYixkLGUsYyksJGYoYixkLGUsYykseGcobnVsbCxiLGQsITAsYSxjKTtkZWZhdWx0OnQoXCIxNTZcIil9fWZ1bmN0aW9uIEJnKGEpe2EuZWZmZWN0VGFnfD00fXZhciBDZz12b2lkIDAsR2c9dm9pZCAwLEhnPXZvaWQgMCxJZz12b2lkIDA7Q2c9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0dnPWZ1bmN0aW9uKCl7fTtcbkhnPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihPLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YyhnLGYpO2Q9emMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPWVlKGcsZik7ZD1lZShnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWdlKGcsZik7ZD1nZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXllKX12ZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGs9ZltjXTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgbD1kW2NdO2s9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZsIT09ayYmKG51bGwhPWx8fG51bGwhPWspKWlmKFwic3R5bGVcIj09PWMpaWYoayl7Zm9yKGcgaW4gaykhay5oYXNPd25Qcm9wZXJ0eShnKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYma1tnXSE9PWxbZ10mJihofHxcbihoPXt9KSxoW2ddPWxbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmayE9PWwmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitsKSk6XCJjaGlsZHJlblwiPT09Yz9rPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihzYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9bCYmeGUoZSxjKSxhfHxrPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGwpKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZCZyhiKX19O0lnPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZCZyhiKX07XG52YXIgSmc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gS2coYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1uYyhjKSk7bnVsbCE9PWMmJm1jKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJm1jKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIExnKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe01nKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIE5nKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1zZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gT2coYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVlJiZVZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYobnVsbCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtNZyhlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOkxnKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtNZyhhLGYpfWJyZWFrO2Nhc2UgNTpMZyhhKTticmVhaztjYXNlIDQ6UGcoYSl9fVxuZnVuY3Rpb24gUWcoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBSZyhhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihRZyhiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnQoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihwZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8UWcoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXllKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gUGcoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/dChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKE9nKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz8oZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGU9ITApOk9nKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNnKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmRmUoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9Yi5tZW1vaXplZFN0YXRlO2Q9dm9pZCAwO2E9YjtudWxsPT09Yz9kPSExOihkPSEwLGE9Yi5jaGlsZCwwPT09Yy50aW1lZE91dEF0JiYoYy50aW1lZE91dEF0PVJmKCkpKTtudWxsIT09YSYmTmcoYSxkKTtjPWIudXBkYXRlUXVldWU7XG5pZihudWxsIT09Yyl7Yi51cGRhdGVRdWV1ZT1udWxsO3ZhciBnPWIuc3RhdGVOb2RlO251bGw9PT1nJiYoZz1iLnN0YXRlTm9kZT1uZXcgSmcpO2MuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYz1UZy5iaW5kKG51bGwsYixhKTtnLmhhcyhhKXx8KGcuYWRkKGEpLGEudGhlbihjLGMpKX0pfWJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX12YXIgVWc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gVmcoYSxiLGMpe2M9bmYoYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7V2coZCk7S2coYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBYZyhhLGIsYyl7Yz1uZihjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1ZZz9ZZz1uZXcgU2V0KFt0aGlzXSk6WWcuYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztLZyhhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFpnKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOk0oYS50eXBlKSYmTmUoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gS2YoYSksT2UoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3QoXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIE1mKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gQ2YoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciAkZz17cmVhZENvbnRleHQ6RWZ9LGFoPVhiLlJlYWN0Q3VycmVudE93bmVyLGJoPTEwNzM3NDE4MjIsY2g9MCxkaD0hMSxTPW51bGwsVD1udWxsLFU9MCxlaD0tMSxmaD0hMSxWPW51bGwsZ2g9ITEsaGg9bnVsbCxpaD1udWxsLFlnPW51bGw7ZnVuY3Rpb24gamgoKXtpZihudWxsIT09Uylmb3IodmFyIGE9Uy5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmTmUoYik7YnJlYWs7Y2FzZSAzOktmKGIpO09lKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTticmVhaztjYXNlIDQ6S2YoYik7YnJlYWs7Y2FzZSAxMDpDZihiKX1hPWEucmV0dXJufVQ9bnVsbDtVPTA7ZWg9LTE7Zmg9ITE7Uz1udWxsfWZ1bmN0aW9uIFRmKCl7bnVsbCE9PWloJiYoYmEudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2soaGgpLGloKCkpfVxuZnVuY3Rpb24ga2goYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1M9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1VO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOk0oYi50eXBlKSYmTmUoYik7YnJlYWs7Y2FzZSAzOktmKGIpO09lKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKW5nKGIpLGIuZWZmZWN0VGFnJj0tMztHZyhiKTticmVhaztjYXNlIDU6TWYoYik7dmFyIGg9SWYoSGYuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKUhnKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgaz1JZihPLmN1cnJlbnQpO2lmKG5nKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgbD1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscj1oO2VbR2FdPWc7ZVtIYV09bTtmPXZvaWQgMDtoPWw7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6SChcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IobD0wO2w8YmIubGVuZ3RoO2wrKylIKGJiW2xdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpIKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixlKTtIKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6SChcInJlc2V0XCIsZSk7SChcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6SChcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKGUsbSk7SChcImludmFsaWRcIixlKTt4ZShyLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0goXCJpbnZhbGlkXCIsZSk7eGUocixcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKGUsbSksSChcImludmFsaWRcIixlKSx4ZShyLFwib25DaGFuZ2VcIil9dmUoaCxtKTtsPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYoaz1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrP2UudGV4dENvbnRlbnQhPT1rJiYobD1bXCJjaGlsZHJlblwiLGtdKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJmUudGV4dENvbnRlbnQhPT1cIlwiK2smJihsPVtcImNoaWxkcmVuXCIsXCJcIitrXSk6c2EuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWsmJnhlKHIsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpWYihlKTtFYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZiKGUpO2plKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz15ZSl9Zj1sO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJkJnKGIpfWVsc2V7bT1iO2U9ZjtyPWc7bD05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtrPT09a2UuaHRtbCYmKGs9bGUoZSkpO2s9PT1rZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWwuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGw9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHIuaXM/bD1sLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ci5pc30pOihsPWwuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmci5tdWx0aXBsZSYmKGwubXVsdGlwbGU9ITApKTpsPWwuY3JlYXRlRWxlbWVudE5TKGssZSk7ZT1sO2VbR2FdPW07ZVtIYV09ZztDZyhlLGIsITEsITEpO3I9ZTtsPWY7bT1nO3ZhciB3PWgseT13ZShsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkgoXCJsb2FkXCIsXG5yKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGJiLmxlbmd0aDtoKyspSChiYltoXSxyKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkgoXCJlcnJvclwiLHIpO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpIKFwiZXJyb3JcIixyKTtIKFwibG9hZFwiLHIpO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkgoXCJyZXNldFwiLHIpO0goXCJzdWJtaXRcIixyKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpIKFwidG9nZ2xlXCIscik7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFjKHIsbSk7aD16YyhyLG0pO0goXCJpbnZhbGlkXCIscik7eGUodyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPWVlKHIsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnIuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7SChcImludmFsaWRcIixyKTt4ZSh3LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUocixcbm0pO2g9Z2UocixtKTtIKFwiaW52YWxpZFwiLHIpO3hlKHcsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX12ZShsLGgpO2s9dm9pZCAwO3ZhciBCPWwsUj1yLHY9aDtmb3IoayBpbiB2KWlmKHYuaGFzT3duUHJvcGVydHkoaykpe3ZhciBxPXZba107XCJzdHlsZVwiPT09az90ZShSLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWs/KHE9cT9xLl9faHRtbDp2b2lkIDAsbnVsbCE9cSYmb2UoUixxKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHE/KFwidGV4dGFyZWFcIiE9PUJ8fFwiXCIhPT1xKSYmcGUoUixxKTpcIm51bWJlclwiPT09dHlwZW9mIHEmJnBlKFIsXCJcIitxKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYoc2EuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9cSYmeGUodyxrKTpudWxsIT1xJiZ4YyhSLGsscSx5KSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOlZiKHIpO1xuRWMocixtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihyKTtqZShyLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZyLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit5YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cjtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtyPW0udmFsdWU7bnVsbCE9cj9mZShoLCEhbS5tdWx0aXBsZSxyLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmZmUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHIub25jbGljaz15ZSl9KGc9QmUoZixnKSkmJkJnKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP0lnKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwKSxlPUlmKEhmLmN1cnJlbnQpLElmKE8uY3VycmVudCksbmcoYik/KGc9YixmPWcuc3RhdGVOb2RlLGU9Zy5tZW1vaXplZFByb3BzLGZbR2FdPWcsKGc9Zi5ub2RlVmFsdWUhPT1lKSYmQmcoYikpOihmPWIsZz0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGcpLGdbR2FdPWIsZi5zdGF0ZU5vZGU9ZykpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpnPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1mO1M9YjticmVhayBhfWc9bnVsbCE9PWc7Zj1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmIWcmJmYmJihlPWUuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGg9Yi5maXJzdEVmZmVjdCxudWxsIT09aD8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1oKTooYi5maXJzdEVmZmVjdD1cbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZyE9PWZ8fDA9PT0oYi5lZmZlY3RUYWcmMSkmJmcpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpLZihiKTtHZyhiKTticmVhaztjYXNlIDEwOkNmKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TShiLnR5cGUpJiZOZShiKTticmVhaztkZWZhdWx0OnQoXCIxNTZcIil9Uz1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVMpcmV0dXJuIFM7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09XG5jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPVpnKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGxoKGEpe3ZhciBiPUFnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1raChhKSk7YWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gbWgoYSxiKXtkaD90KFwiMjQzXCIpOnZvaWQgMDtUZigpO2RoPSEwO2FoLmN1cnJlbnREaXNwYXRjaGVyPSRnO3ZhciBjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoYyE9PVV8fGEhPT1UfHxudWxsPT09UylqaCgpLFQ9YSxVPWMsUz0kZShULmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVMmJiFuaCgpOylTPWxoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz1saChTKX1jYXRjaChCKXtpZihBZj16Zj15Zj1udWxsLG51bGw9PT1TKWQ9ITAsV2coQik7ZWxzZXtudWxsPT09Uz90KFwiMjcxXCIpOnZvaWQgMDt2YXIgZT1TLGY9ZS5yZXR1cm47aWYobnVsbD09PWYpZD0hMCxXZyhCKTtlbHNle2E6e3ZhciBnPWEsaD1mLGs9ZSxsPUI7Zj1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWwmJlwib2JqZWN0XCI9PT1cbnR5cGVvZiBsJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbC50aGVuKXt2YXIgbT1sO2w9aDt2YXIgcj0tMSx3PS0xO2Rve2lmKDEzPT09bC50YWcpe3ZhciB5PWwuYWx0ZXJuYXRlO2lmKG51bGwhPT15JiYoeT15Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXkpKXt3PTEwKigxMDczNzQxODIyLXkudGltZWRPdXRBdCk7YnJlYWt9eT1sLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHkpaWYoMD49eSlyPTA7ZWxzZSBpZigtMT09PXJ8fHk8cilyPXl9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1oO2Rve2lmKHk9MTM9PT1sLnRhZyl5PXZvaWQgMD09PWwubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bC5tZW1vaXplZFN0YXRlO2lmKHkpe2g9bC51cGRhdGVRdWV1ZTtudWxsPT09aD9sLnVwZGF0ZVF1ZXVlPW5ldyBTZXQoW21dKTpoLmFkZChtKTtpZigwPT09KGwubW9kZSYxKSl7bC5lZmZlY3RUYWd8PTY0O2suZWZmZWN0VGFnJj0tMTk1NztcbjE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZj1uZigxMDczNzQxODIzKSxmLnRhZz0yLHBmKGssZikpKTtrLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1rPWcucGluZ0NhY2hlO251bGw9PT1rPyhrPWcucGluZ0NhY2hlPW5ldyBVZyxoPW5ldyBTZXQsay5zZXQobSxoKSk6KGg9ay5nZXQobSksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxrLnNldChtLGgpKSk7aC5oYXMoZil8fChoLmFkZChmKSxrPW9oLmJpbmQobnVsbCxnLG0sZiksbS50aGVuKGssaykpOy0xPT09cj9nPTEwNzM3NDE4MjM6KC0xPT09dyYmKHc9MTAqKDEwNzM3NDE4MjItamYoZyxmKSktNUUzKSxnPXcrcik7MDw9ZyYmZWg8ZyYmKGVoPWcpO2wuZWZmZWN0VGFnfD0yMDQ4O2wuZXhwaXJhdGlvblRpbWU9ZjticmVhayBhfWw9bC5yZXR1cm59d2hpbGUobnVsbCE9PWwpO2w9RXJyb3IoKG1jKGsudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitcbm5jKGspKX1maD0hMDtsPXdmKGwsayk7Zz1oO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmcuZWZmZWN0VGFnfD0yMDQ4O2cuZXhwaXJhdGlvblRpbWU9ZjtmPVZnKGcsbCxmKTtxZihnLGYpO2JyZWFrIGE7Y2FzZSAxOmlmKG09bCxyPWcudHlwZSx3PWcuc3RhdGVOb2RlLDA9PT0oZy5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHIuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09WWd8fCFZZy5oYXModykpKSl7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9WGcoZyxtLGYpO3FmKGcsZik7YnJlYWsgYX19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyl9Uz1raChlKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO2RoPSExO0FmPXpmPXlmPWFoLmN1cnJlbnREaXNwYXRjaGVyPW51bGw7aWYoZClUPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtcbmVsc2UgaWYobnVsbCE9PVMpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2Q9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09ZD90KFwiMjgxXCIpOnZvaWQgMDtUPW51bGw7aWYoZmgpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxjfHwwIT09ZiYmZjxjfHwwIT09ZyYmZzxjKXtoZihhLGMpO3BoKGEsZCxjLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249YztiPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztwaChhLGQsYyxiLC0xKTtyZXR1cm59fWImJi0xIT09ZWg/KGhmKGEsYyksYj0xMCooMTA3Mzc0MTgyMi1qZihhLGMpKSxiPGVoJiYoZWg9YiksYj0xMCooMTA3Mzc0MTgyMi1SZigpKSxiPWVoLWIscGgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPVxuYyxhLmZpbmlzaGVkV29yaz1kKX19ZnVuY3Rpb24gTWcoYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09WWd8fCFZZy5oYXMoZCkpKXthPXdmKGIsYSk7YT1YZyhjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtVZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT13ZihiLGEpO2E9VmcoYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7VWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPXdmKGIsYSksYz1WZyhhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxVZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIFNmKGEsYil7MCE9PWNoP2E9Y2g6ZGg/YT1naD8xMDczNzQxODIzOlU6Yi5tb2RlJjE/KGE9cWg/MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpOjEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSksbnVsbCE9PVQmJmE9PT1VJiYtLWEpOmE9MTA3Mzc0MTgyMztxaCYmKDA9PT1yaHx8YTxyaCkmJihyaD1hKTtyZXR1cm4gYX1mdW5jdGlvbiBvaChhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1UJiZVPT09YylUPW51bGw7ZWxzZSBpZihiPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXRlc3RTdXNwZW5kZWRUaW1lLDAhPT1iJiZjPD1iJiZjPj1kKXthLmRpZEVycm9yPSExO2I9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1ifHxiPmMpYS5sYXRlc3RQaW5nZWRUaW1lPWM7Z2YoYyxhKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJnNoKGEsYyl9fVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1SZigpO2I9U2YoYixhKTthPXRoKGEsYik7bnVsbCE9PWEmJihmZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmc2goYSxiKSl9XG5mdW5jdGlvbiB0aChhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gVWYoYSxiKXthPXRoKGEsYik7bnVsbCE9PWEmJighZGgmJjAhPT1VJiZiPlUmJmpoKCksZmYoYSxiKSxkaCYmIWdoJiZUPT09YXx8c2goYSxhLmV4cGlyYXRpb25UaW1lKSx1aD52aCYmKHVoPTAsdChcIjE4NVwiKSkpfWZ1bmN0aW9uIHdoKGEsYixjLGQsZSl7dmFyIGY9Y2g7Y2g9MTA3Mzc0MTgyMzt0cnl7cmV0dXJuIGEoYixjLGQsZSl9ZmluYWxseXtjaD1mfX12YXIgeGg9bnVsbCxXPW51bGwseWg9MCx6aD12b2lkIDAsWD0hMSxBaD1udWxsLFk9MCxyaD0wLEJoPSExLENoPW51bGwsWj0hMSxEaD0hMSxxaD0hMSxFaD1udWxsLEZoPWJhLnVuc3RhYmxlX25vdygpLEdoPTEwNzM3NDE4MjItKEZoLzEwfDApLEhoPUdoLHZoPTUwLHVoPTAsSWg9bnVsbDtmdW5jdGlvbiBKaCgpe0doPTEwNzM3NDE4MjItKChiYS51bnN0YWJsZV9ub3coKS1GaCkvMTB8MCl9XG5mdW5jdGlvbiBLaChhLGIpe2lmKDAhPT15aCl7aWYoYjx5aClyZXR1cm47bnVsbCE9PXpoJiZiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayh6aCl9eWg9YjthPWJhLnVuc3RhYmxlX25vdygpLUZoO3poPWJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soTGgse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIHBoKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxuaCgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT1EZShNaC5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBNaChhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO0poKCk7SGg9R2g7TmgoYSxjKX1mdW5jdGlvbiBSZigpe2lmKFgpcmV0dXJuIEhoO09oKCk7aWYoMD09PVl8fDE9PT1ZKUpoKCksSGg9R2g7cmV0dXJuIEhofVxuZnVuY3Rpb24gc2goYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1XPyh4aD1XPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooVz1XLm5leHRTY2hlZHVsZWRSb290PWEsVy5uZXh0U2NoZWR1bGVkUm9vdD14aCkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7WHx8KFo/RGgmJihBaD1hLFk9MTA3Mzc0MTgyMyxQaChhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9RaCgxMDczNzQxODIzLCExKTpLaChhLGIpKX1cbmZ1bmN0aW9uIE9oKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVcpZm9yKHZhciBjPVcsZD14aDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Vz90KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7eGg9Vz1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09eGgpeGg9ZT1kLm5leHRTY2hlZHVsZWRSb290LFcubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Vyl7Vz1jO1cubmV4dFNjaGVkdWxlZFJvb3Q9eGg7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09VylicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fUFoPWI7WT1hfXZhciBSaD0hMTtmdW5jdGlvbiBuaCgpe3JldHVybiBSaD8hMDpiYS51bnN0YWJsZV9zaG91bGRZaWVsZCgpP1JoPSEwOiExfWZ1bmN0aW9uIExoKCl7dHJ5e2lmKCFuaCgpJiZudWxsIT09eGgpe0poKCk7dmFyIGE9eGg7ZG97dmFyIGI9YS5leHBpcmF0aW9uVGltZTswIT09YiYmR2g8PWImJihhLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPUdoKTthPWEubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYSE9PXhoKX1RaCgwLCEwKX1maW5hbGx5e1JoPSExfX1cbmZ1bmN0aW9uIFFoKGEsYil7T2goKTtpZihiKWZvcihKaCgpLEhoPUdoO251bGwhPT1BaCYmMCE9PVkmJmE8PVkmJiEoUmgmJkdoPlkpOylQaChBaCxZLEdoPlkpLE9oKCksSmgoKSxIaD1HaDtlbHNlIGZvcig7bnVsbCE9PUFoJiYwIT09WSYmYTw9WTspUGgoQWgsWSwhMSksT2goKTtiJiYoeWg9MCx6aD1udWxsKTswIT09WSYmS2goQWgsWSk7dWg9MDtJaD1udWxsO2lmKG51bGwhPT1FaClmb3IoYT1FaCxFaD1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe0JofHwoQmg9ITAsQ2g9ZCl9fWlmKEJoKXRocm93IGE9Q2gsQ2g9bnVsbCxCaD0hMSxhO31mdW5jdGlvbiBOaChhLGIpe1g/dChcIjI1M1wiKTp2b2lkIDA7QWg9YTtZPWI7UGgoYSxiLCExKTtRaCgxMDczNzQxODIzLCExKX1cbmZ1bmN0aW9uIFBoKGEsYixjKXtYP3QoXCIyNDVcIik6dm9pZCAwO1g9ITA7aWYoYyl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/U2goYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSxFZShkKSksbWgoYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYobmgoKT9hLmZpbmlzaGVkV29yaz1kOlNoKGEsZCxiKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9TaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxtaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJlNoKGEsZCxiKSk7WD0hMX1cbmZ1bmN0aW9uIFNoKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1jJiYobnVsbD09PUVoP0VoPVtkXTpFaC5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLmV4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7YT09PUloP3VoKys6KEloPWEsdWg9MCk7Z2g9ZGg9ITA7YS5jdXJyZW50PT09Yj90KFwiMTc3XCIpOnZvaWQgMDtjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3QoXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7ZD1iLmV4cGlyYXRpb25UaW1lO3ZhciBlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtkPWU+ZD9lOmQ7YS5kaWRFcnJvcj0hMTswPT09ZD8oYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPVxuMCk6KGQ8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApLGU9YS5sYXRlc3RQZW5kaW5nVGltZSwwIT09ZSYmKGU+ZD9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5kJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKSxlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLDA9PT1lP2ZmKGEsZCk6ZDxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsZmYoYSxkKSk6ZD5lJiZmZihhLGQpKTtnZigwLGEpO2FoLmN1cnJlbnQ9bnVsbDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3plPUhkO2U9VGQoKTtpZihVZChlKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW5cbmUpdmFyIGY9e3N0YXJ0OmUuc2VsZWN0aW9uU3RhcnQsZW5kOmUuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2Y9KGY9ZS5vd25lckRvY3VtZW50KSYmZi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBnPWYuZ2V0U2VsZWN0aW9uJiZmLmdldFNlbGVjdGlvbigpO2lmKGcmJjAhPT1nLnJhbmdlQ291bnQpe2Y9Zy5hbmNob3JOb2RlO3ZhciBoPWcuYW5jaG9yT2Zmc2V0LGs9Zy5mb2N1c05vZGU7Zz1nLmZvY3VzT2Zmc2V0O3RyeXtmLm5vZGVUeXBlLGsubm9kZVR5cGV9Y2F0Y2goZGIpe2Y9bnVsbDticmVhayBhfXZhciBsPTAsbT0tMSxyPS0xLHc9MCx5PTAsQj1lLFI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB2Ozspe0IhPT1mfHwwIT09aCYmMyE9PUIubm9kZVR5cGV8fChtPWwraCk7QiE9PWt8fDAhPT1nJiYzIT09Qi5ub2RlVHlwZXx8KHI9bCtnKTszPT09Qi5ub2RlVHlwZSYmKGwrPUIubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh2PUIuZmlyc3RDaGlsZCkpYnJlYWs7Uj1CO0I9dn1mb3IoOzspe2lmKEI9PT1cbmUpYnJlYWsgYjtSPT09ZiYmKyt3PT09aCYmKG09bCk7Uj09PWsmJisreT09PWcmJihyPWwpO2lmKG51bGwhPT0odj1CLm5leHRTaWJsaW5nKSlicmVhaztCPVI7Uj1CLnBhcmVudE5vZGV9Qj12fWY9LTE9PT1tfHwtMT09PXI/bnVsbDp7c3RhcnQ6bSxlbmQ6cn19ZWxzZSBmPW51bGx9Zj1mfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBmPW51bGw7QWU9e2ZvY3VzZWRFbGVtOmUsc2VsZWN0aW9uUmFuZ2U6Zn07SGQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVY7KXtpZihWLmVmZmVjdFRhZyYyNTYpYTp7dmFyIHE9Vi5hbHRlcm5hdGU7aD1WO3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhayBhO2Nhc2UgMTppZihoLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1xKXt2YXIgdT1xLm1lbW9pemVkUHJvcHMsQT1xLm1lbW9pemVkU3RhdGUsWWY9aC5zdGF0ZU5vZGUsVmg9WWYuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoaC5lbGVtZW50VHlwZT09PVxuaC50eXBlP3U6UChoLnR5cGUsdSksQSk7WWYuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Vmh9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6dChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtlPSEwLGY9ZGJ9ZSYmKG51bGw9PT1WP3QoXCIxNzhcIik6dm9pZCAwLE1nKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtxPSExO3U9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1WOyl7dmFyIHg9Vi5lZmZlY3RUYWc7eCYxNiYmcGUoVi5zdGF0ZU5vZGUsXCJcIik7aWYoeCYxMjgpe3ZhciBDPVYuYWx0ZXJuYXRlO2lmKG51bGwhPT1DKXt2YXIgcD1DLnJlZjtudWxsIT09cCYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBwP3AobnVsbCk6cC5jdXJyZW50PW51bGwpfX1zd2l0Y2goeCYxNCl7Y2FzZSAyOlJnKFYpO1YuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UmcoVik7XG5WLmVmZmVjdFRhZyY9LTM7U2coVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OlNnKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODpBPVY7UGcoQSk7QS5yZXR1cm49bnVsbDtBLmNoaWxkPW51bGw7QS5tZW1vaXplZFN0YXRlPW51bGw7QS51cGRhdGVRdWV1ZT1udWxsO3ZhciBHPUEuYWx0ZXJuYXRlO251bGwhPT1HJiYoRy5yZXR1cm49bnVsbCxHLmNoaWxkPW51bGwsRy5tZW1vaXplZFN0YXRlPW51bGwsRy51cGRhdGVRdWV1ZT1udWxsKX1WPVYubmV4dEVmZmVjdH19Y2F0Y2goZGIpe3E9ITAsdT1kYn1xJiYobnVsbD09PVY/dChcIjE3OFwiKTp2b2lkIDAsTWcoVix1KSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9cD1BZTtDPVRkKCk7eD1wLmZvY3VzZWRFbGVtO3E9cC5zZWxlY3Rpb25SYW5nZTtpZihDIT09eCYmeCYmeC5vd25lckRvY3VtZW50JiZTZCh4Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHgpKXtudWxsIT09cSYmVWQoeCkmJihDPXEuc3RhcnQscD1xLmVuZCxcbnZvaWQgMD09PXAmJihwPUMpLFwic2VsZWN0aW9uU3RhcnRcImluIHg/KHguc2VsZWN0aW9uU3RhcnQ9Qyx4LnNlbGVjdGlvbkVuZD1NYXRoLm1pbihwLHgudmFsdWUubGVuZ3RoKSk6KHA9KEM9eC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkMuZGVmYXVsdFZpZXd8fHdpbmRvdyxwLmdldFNlbGVjdGlvbiYmKHA9cC5nZXRTZWxlY3Rpb24oKSx1PXgudGV4dENvbnRlbnQubGVuZ3RoLEc9TWF0aC5taW4ocS5zdGFydCx1KSxxPXZvaWQgMD09PXEuZW5kP0c6TWF0aC5taW4ocS5lbmQsdSksIXAuZXh0ZW5kJiZHPnEmJih1PXEscT1HLEc9dSksdT1SZCh4LEcpLEE9UmQoeCxxKSx1JiZBJiYoMSE9PXAucmFuZ2VDb3VudHx8cC5hbmNob3JOb2RlIT09dS5ub2RlfHxwLmFuY2hvck9mZnNldCE9PXUub2Zmc2V0fHxwLmZvY3VzTm9kZSE9PUEubm9kZXx8cC5mb2N1c09mZnNldCE9PUEub2Zmc2V0KSYmKEM9Qy5jcmVhdGVSYW5nZSgpLEMuc2V0U3RhcnQodS5ub2RlLHUub2Zmc2V0KSxwLnJlbW92ZUFsbFJhbmdlcygpLFxuRz5xPyhwLmFkZFJhbmdlKEMpLHAuZXh0ZW5kKEEubm9kZSxBLm9mZnNldCkpOihDLnNldEVuZChBLm5vZGUsQS5vZmZzZXQpLHAuYWRkUmFuZ2UoQykpKSkpKTtDPVtdO2ZvcihwPXg7cD1wLnBhcmVudE5vZGU7KTE9PT1wLm5vZGVUeXBlJiZDLnB1c2goe2VsZW1lbnQ6cCxsZWZ0OnAuc2Nyb2xsTGVmdCx0b3A6cC5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgeC5mb2N1cyYmeC5mb2N1cygpO2Zvcih4PTA7eDxDLmxlbmd0aDt4KyspcD1DW3hdLHAuZWxlbWVudC5zY3JvbGxMZWZ0PXAubGVmdCxwLmVsZW1lbnQuc2Nyb2xsVG9wPXAudG9wfUFlPW51bGw7SGQ9ISF6ZTt6ZT1udWxsO2EuY3VycmVudD1iO2ZvcihWPWQ7bnVsbCE9PVY7KXtkPSExO3g9dm9pZCAwO3RyeXtmb3IoQz1jO251bGwhPT1WOyl7dmFyIEZiPVYuZWZmZWN0VGFnO2lmKEZiJjM2KXt2YXIgR2I9Vi5hbHRlcm5hdGU7cD1WO0c9Qztzd2l0Y2gocC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6dmFyIEhjPXAuc3RhdGVOb2RlO2lmKHAuZWZmZWN0VGFnJjQpaWYobnVsbD09PUdiKUhjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgaWk9cC5lbGVtZW50VHlwZT09PXAudHlwZT9HYi5tZW1vaXplZFByb3BzOlAocC50eXBlLEdiLm1lbW9pemVkUHJvcHMpO0hjLmNvbXBvbmVudERpZFVwZGF0ZShpaSxHYi5tZW1vaXplZFN0YXRlLEhjLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgRGc9cC51cGRhdGVRdWV1ZTtudWxsIT09RGcmJnVmKHAsRGcsSGMsRyk7YnJlYWs7Y2FzZSAzOnZhciBFZz1wLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1FZyl7cT1udWxsO2lmKG51bGwhPT1wLmNoaWxkKXN3aXRjaChwLmNoaWxkLnRhZyl7Y2FzZSA1OnE9cC5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOnE9cC5jaGlsZC5zdGF0ZU5vZGV9dWYocCxFZyxxLEcpfWJyZWFrO2Nhc2UgNTp2YXIgamk9cC5zdGF0ZU5vZGU7bnVsbD09PUdiJiZwLmVmZmVjdFRhZyZcbjQmJkJlKHAudHlwZSxwLm1lbW9pemVkUHJvcHMpJiZqaS5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0KFwiMTYzXCIpfX1pZihGYiYxMjgpe3ZhciBJYz1WLnJlZjtpZihudWxsIT09SWMpe3ZhciBGZz1WLnN0YXRlTm9kZTtzd2l0Y2goVi50YWcpe2Nhc2UgNTp2YXIgY2U9Rmc7YnJlYWs7ZGVmYXVsdDpjZT1GZ31cImZ1bmN0aW9uXCI9PT10eXBlb2YgSWM/SWMoY2UpOkljLmN1cnJlbnQ9Y2V9fVY9Vi5uZXh0RWZmZWN0fX1jYXRjaChkYil7ZD0hMCx4PWRifWQmJihudWxsPT09Vj90KFwiMTc4XCIpOnZvaWQgMCxNZyhWLHgpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1kaD1naD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVGUmJlRlKGIuc3RhdGVOb2RlKTtGYj1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9Yj5GYj9iOkZiOzA9PT1iJiYoWWc9XG5udWxsKTthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1mdW5jdGlvbiBXZyhhKXtudWxsPT09QWg/dChcIjI0NlwiKTp2b2lkIDA7QWguZXhwaXJhdGlvblRpbWU9MDtCaHx8KEJoPSEwLENoPWEpfWZ1bmN0aW9uIFRoKGEsYil7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhaPWMpfHxYfHxRaCgxMDczNzQxODIzLCExKX19ZnVuY3Rpb24gVWgoYSxiKXtpZihaJiYhRGgpe0RoPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e0RoPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBXaChhLGIsYyl7aWYocWgpcmV0dXJuIGEoYixjKTtafHxYfHwwPT09cmh8fChRaChyaCwhMSkscmg9MCk7dmFyIGQ9cWgsZT1aO1o9cWg9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXtxaD1kLChaPWUpfHxYfHxRaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBYaChhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6ezI9PT1rZChjKSYmMT09PWMudGFnP3ZvaWQgMDp0KFwiMTcwXCIpO3ZhciBnPWM7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zz1nLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKE0oZy50eXBlKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKTt0KFwiMTcxXCIpO2c9dm9pZCAwfWlmKDE9PT1jLnRhZyl7dmFyIGg9Yy50eXBlO2lmKE0oaCkpe2M9UWUoYyxoLGcpO2JyZWFrIGF9fWM9Z31lbHNlIGM9S2U7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9bmYoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1xuVGYoKTtwZihmLGUpO1VmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gWWgoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9UmYoKTtlPVNmKGYsZSk7cmV0dXJuIFhoKGEsYixjLGUsZCl9ZnVuY3Rpb24gWmgoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiAkaChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuQ2I9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9TGEoZCk7ZT92b2lkIDA6dChcIjkwXCIpO1diKGQpO0NjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIGFpKGEpe3ZhciBiPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1SZigpKzUwMCkvMjV8MCkrMSk7Yj49YmgmJihiPWJoLTEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPWJoPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1haS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp0KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgYmk7WGgoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuYWkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuYWkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOnQoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/dChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtOaChhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTthaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gYmkoKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1iaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuYmkucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBjaShhLGIsYyl7Yj1OKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHBpbmdDYWNoZTpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cbmNpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgYmk7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO1loKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07Y2kucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IGJpO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtZaChudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O2NpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBiaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7WWgoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcbmNpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBhaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIGRpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1LYj1UaDtMYj1XaDtNYj1mdW5jdGlvbigpe1h8fDA9PT1yaHx8KFFoKHJoLCExKSxyaD0wKX07XG5mdW5jdGlvbiBlaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGNpKGEsITEsYil9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2RpKGMpP3ZvaWQgMDp0KFwiMjAwXCIpO3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9WmgoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1laShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1aaChmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19VWgoZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIFpoKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBnaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2RpKGIpP3ZvaWQgMDp0KFwiMjAwXCIpO3JldHVybiAkaChhLGIsbnVsbCxjKX1cbnZhciBraT17Y3JlYXRlUG9ydGFsOmdpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/dChcIjE4OFwiKTp0KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPW5kKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGZpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmaShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP3QoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIGZpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe2RpKGEpP1xudm9pZCAwOnQoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhVaChmdW5jdGlvbigpe2ZpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIGdpLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpUaCx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6V2gsZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7WD90KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiB3aChhLGIpfWZpbmFsbHl7Wj1jLFFoKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfY3JlYXRlUm9vdDpoaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9WjtaPSEwO3RyeXt3aChhKX1maW5hbGx5eyhaPWIpfHxYfHxRaCgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0phLFxuS2EsTGEsQ2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHFhLFJhLGZ1bmN0aW9uKGEpe3phKGEsUWEpfSxJYixKYixKZCxFYV19fTtmdW5jdGlvbiBoaShhLGIpe2RpKGEpP3ZvaWQgMDp0KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgY2koYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9KGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFdlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bmQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SWEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi43LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBsaT17ZGVmYXVsdDpraX0sbWk9bGkmJmtpfHxsaTttb2R1bGUuZXhwb3J0cz1taS5kZWZhdWx0fHxtaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwiZXhwb3J0IHZhciBhZGRMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59O1xuXG5leHBvcnQgdmFyIGhhc0Jhc2VuYW1lID0gZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBCYXNlbmFtZSA9IGZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBzdHJpcFRyYWlsaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBwYXJzZVBhdGggPSBmdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuXG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn07XG5cbmV4cG9ydCB2YXIgY3JlYXRlUGF0aCA9IGZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcblxuXG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogJz8nICsgc2VhcmNoO1xuXG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6ICcjJyArIGhhc2g7XG5cbiAgcmV0dXJuIHBhdGg7XG59OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tICcuL1BhdGhVdGlscyc7XG5cbmV4cG9ydCB2YXIgY3JlYXRlTG9jYXRpb24gPSBmdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uID0gdm9pZCAwO1xuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuXG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufTtcblxuZXhwb3J0IHZhciBsb2NhdGlvbnNBcmVFcXVhbCA9IGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufTsiLCJpbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcblxudmFyIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyID0gZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIHZhciBzZXRQcm9tcHQgPSBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpO1xuXG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGNvbmZpcm1UcmFuc2l0aW9uVG8gPSBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJyk7XG5cbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICB2YXIgYXBwZW5kTGlzdGVuZXIgPSBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbm90aWZ5TGlzdGVuZXJzID0gZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXI7IiwiZXhwb3J0IHZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG5leHBvcnQgdmFyIGFkZEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5hZGRFdmVudExpc3RlbmVyID8gbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5hdHRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgcmVtb3ZlRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnQsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPyBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSkgOiBub2RlLmRldGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xufTtcblxuZXhwb3J0IHZhciBnZXRDb25maXJtYXRpb24gPSBmdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTtcbn07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0hpc3RvcnkgPSBmdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlID0gZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuZXhwb3J0IHZhciBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCA9IGZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuZXhwb3J0IHZhciBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50ID0gZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCB3YXJuaW5nIGZyb20gJ3dhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IHsgYWRkTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzSGlzdG9yeSwgc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSwgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCB9IGZyb20gJy4vRE9NVXRpbHMnO1xuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG52YXIgZ2V0SGlzdG9yeVN0YXRlID0gZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG52YXIgY3JlYXRlQnJvd3Nlckhpc3RvcnkgPSBmdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeSgpIHtcbiAgdmFyIHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblxuICBpbnZhcmlhbnQoY2FuVXNlRE9NLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJyk7XG5cbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcblxuICB2YXIgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IHByb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IHByb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB1bmRlZmluZWQgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdW5kZWZpbmVkID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG5cbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuXG5cbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcblxuICAgIHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJyk7XG5cbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcblxuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIHZhciBzZXRTdGF0ZSA9IGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgaGFuZGxlUG9wU3RhdGUgPSBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG5cbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfTtcblxuICB2YXIgaGFuZGxlSGFzaENoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIHZhciBoYW5kbGVQb3AgPSBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcblxuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcmV2ZXJ0UG9wID0gZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcblxuICAgIC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuXG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07XG5cbiAgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9O1xuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoISgodHlwZW9mIHBhdGggPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHBhdGgpKSA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG5cbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoeyBrZXk6IGtleSwgc3RhdGU6IHN0YXRlIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuXG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcblxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG5cbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuXG4gICAgICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5Jyk7XG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvID0gZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcblxuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSBhZGRFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgcmVtb3ZlRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICB2YXIgYmxvY2sgPSBmdW5jdGlvbiBibG9jaygpIHtcbiAgICB2YXIgcHJvbXB0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTtcblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgbGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG5cbiAgcmV0dXJuIGhpc3Rvcnk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVCcm93c2VySGlzdG9yeTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoIH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG52YXIgZ2V0SGFzaFBhdGggPSBmdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn07XG5cbnZhciBwdXNoSGFzaFBhdGggPSBmdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufTtcblxudmFyIHJlcGxhY2VIYXNoUGF0aCA9IGZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCcjJyk7XG5cbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2UoMCwgaGFzaEluZGV4ID49IDAgPyBoYXNoSW5kZXggOiAwKSArICcjJyArIHBhdGgpO1xufTtcblxudmFyIGNyZWF0ZUhhc2hIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuXG4gIHZhciBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdW5kZWZpbmVkID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcblxuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuXG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuXG4gICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKTtcblxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuXG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKTtcblxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhhc2hIaXN0b3J5OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgeyBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuXG52YXIgY2xhbXAgPSBmdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG52YXIgY3JlYXRlTWVtb3J5SGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBnZXRVc2VyQ29uZmlybWF0aW9uID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IHByb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHVuZGVmaW5lZCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IHByb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHVuZGVmaW5lZCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcblxuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBjYW5HbyA9IGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH07XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU1lbW9yeUhpc3Rvcnk7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBoaXN0b3J5ID0gX3Byb3BzLmhpc3Rvcnk7XG5cblxuICAgIGludmFyaWFudChjaGlsZHJlbiA9PSBudWxsIHx8IFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMSwgXCJBIDxSb3V0ZXI+IG1heSBoYXZlIG9ubHkgb25lIGNoaWxkIGVsZW1lbnRcIik7XG5cbiAgICAvLyBEbyB0aGlzIGhlcmUgc28gd2UgY2FuIHNldFN0YXRlIHdoZW4gYSA8UmVkaXJlY3Q+IGNoYW5nZXMgdGhlXG4gICAgLy8gbG9jYXRpb24gaW4gY29tcG9uZW50V2lsbE1vdW50LiBUaGlzIGhhcHBlbnMgZS5nLiB3aGVuIGRvaW5nXG4gICAgLy8gc2VydmVyIHJlbmRlcmluZyB1c2luZyBhIDxTdGF0aWNSb3V0ZXI+LlxuICAgIHRoaXMudW5saXN0ZW4gPSBoaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICBtYXRjaDogX3RoaXMyLmNvbXB1dGVNYXRjaChoaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lKVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKHRoaXMucHJvcHMuaGlzdG9yeSA9PT0gbmV4dFByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICByZXR1cm4gY2hpbGRyZW4gPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5Sb3V0ZXIuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZXIuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXI7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCcm93c2VyUm91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKTtcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7IGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSwgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IEJyb3dzZXJSb3V0ZXI7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlSGFzaEhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSGFzaFJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBIYXNoUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5IYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKSxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IEhhc2hSb3V0ZXI7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tIFwiaGlzdG9yeVwiO1xuXG52YXIgaXNNb2RpZmllZEV2ZW50ID0gZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn07XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5cbnZhciBMaW5rID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKExpbmssIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpbmsoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaW5rKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oYW5kbGVDbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKF90aGlzLnByb3BzLm9uQ2xpY2spIF90aGlzLnByb3BzLm9uQ2xpY2soZXZlbnQpO1xuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIV90aGlzLnByb3BzLnRhcmdldCAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICB2YXIgaGlzdG9yeSA9IF90aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG4gICAgICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgICAgIHJlcGxhY2UgPSBfdGhpcyRwcm9wcy5yZXBsYWNlLFxuICAgICAgICAgICAgICB0byA9IF90aGlzJHByb3BzLnRvO1xuXG5cbiAgICAgICAgICBpZiAocmVwbGFjZSkge1xuICAgICAgICAgICAgaGlzdG9yeS5yZXBsYWNlKHRvKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaGlzdG9yeS5wdXNoKHRvKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIExpbmsucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgcmVwbGFjZSA9IF9wcm9wcy5yZXBsYWNlLFxuICAgICAgICB0byA9IF9wcm9wcy50byxcbiAgICAgICAgaW5uZXJSZWYgPSBfcHJvcHMuaW5uZXJSZWYsXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9wcm9wcywgW1wicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG5cbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIGludmFyaWFudCh0byAhPT0gdW5kZWZpbmVkLCAnWW91IG11c3Qgc3BlY2lmeSB0aGUgXCJ0b1wiIHByb3BlcnR5Jyk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHRoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeTtcblxuICAgIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBoaXN0b3J5LmxvY2F0aW9uKSA6IHRvO1xuXG4gICAgdmFyIGhyZWYgPSBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsgb25DbGljazogdGhpcy5oYW5kbGVDbGljaywgaHJlZjogaHJlZiwgcmVmOiBpbm5lclJlZiB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIExpbms7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkxpbmsucHJvcFR5cGVzID0ge1xuICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByZXBsYWNlOiBQcm9wVHlwZXMuYm9vbCxcbiAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkLFxuICBpbm5lclJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKVxufTtcbkxpbmsuZGVmYXVsdFByb3BzID0ge1xuICByZXBsYWNlOiBmYWxzZVxufTtcbkxpbmsuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHB1c2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICByZXBsYWNlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgY3JlYXRlSHJlZjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWRcbiAgfSkuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBMaW5rOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnkgYXMgY3JlYXRlSGlzdG9yeSB9IGZyb20gXCJoaXN0b3J5XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVtb3J5Um91dGVyKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGlzdG9yeShfdGhpcy5wcm9wcyksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKTtcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHsgaGlzdG9yeTogdGhpcy5oaXN0b3J5LCBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5NZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBNZW1vcnlSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBNZW1vcnlSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9NZW1vcnlSb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgTWVtb3J5Um91dGVyOyIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbnZhciBwYXR0ZXJuQ2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbnZhciBjb21waWxlUGF0aCA9IGZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdHRlcm4sIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIGNhY2hlID0gcGF0dGVybkNhY2hlW2NhY2hlS2V5XSB8fCAocGF0dGVybkNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAoY2FjaGVbcGF0dGVybl0pIHJldHVybiBjYWNoZVtwYXR0ZXJuXTtcblxuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmUgPSBwYXRoVG9SZWdleHAocGF0dGVybiwga2V5cywgb3B0aW9ucyk7XG4gIHZhciBjb21waWxlZFBhdHRlcm4gPSB7IHJlOiByZSwga2V5czoga2V5cyB9O1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdHRlcm5dID0gY29tcGlsZWRQYXR0ZXJuO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBjb21waWxlZFBhdHRlcm47XG59O1xuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aCBwYXR0ZXJuLlxuICovXG52YXIgbWF0Y2hQYXRoID0gZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIHBhcmVudCA9IGFyZ3VtZW50c1syXTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIG9wdGlvbnMgPSB7IHBhdGg6IG9wdGlvbnMgfTtcblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuXG5cbiAgaWYgKHBhdGggPT0gbnVsbCkgcmV0dXJuIHBhcmVudDtcblxuICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgocGF0aCwgeyBlbmQ6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSksXG4gICAgICByZSA9IF9jb21waWxlUGF0aC5yZSxcbiAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICB2YXIgbWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lKTtcblxuICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcblxuICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcblxuICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG5cbiAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4ge1xuICAgIHBhdGg6IHBhdGgsIC8vIHRoZSBwYXRoIHBhdHRlcm4gdXNlZCB0byBtYXRjaFxuICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgIGlzRXhhY3Q6IGlzRXhhY3QsIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgIHJldHVybiBtZW1vO1xuICAgIH0sIHt9KVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxudmFyIGlzRW1wdHlDaGlsZHJlbiA9IGZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cbnZhciBSb3V0ZSA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZSk7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBtYXRjaDogX3RoaXMuY29tcHV0ZU1hdGNoKF90aGlzLnByb3BzLCBfdGhpcy5jb250ZXh0LnJvdXRlcilcbiAgICB9LCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIFJvdXRlLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgcm91dGU6IHtcbiAgICAgICAgICBsb2NhdGlvbjogdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCB0aGlzLmNvbnRleHQucm91dGVyLnJvdXRlLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoOiB0aGlzLnN0YXRlLm1hdGNoXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKF9yZWYsIHJvdXRlcikge1xuICAgIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICAgIHBhdGggPSBfcmVmLnBhdGgsXG4gICAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgICBleGFjdCA9IF9yZWYuZXhhY3QsXG4gICAgICAgIHNlbnNpdGl2ZSA9IF9yZWYuc2Vuc2l0aXZlO1xuXG4gICAgaWYgKGNvbXB1dGVkTWF0Y2gpIHJldHVybiBjb21wdXRlZE1hdGNoOyAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcblxuICAgIGludmFyaWFudChyb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3Igd2l0aFJvdXRlcigpIG91dHNpZGUgYSA8Um91dGVyPlwiKTtcblxuICAgIHZhciByb3V0ZSA9IHJvdXRlci5yb3V0ZTtcblxuICAgIHZhciBwYXRobmFtZSA9IChsb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbikucGF0aG5hbWU7XG5cbiAgICByZXR1cm4gbWF0Y2hQYXRoKHBhdGhuYW1lLCB7IHBhdGg6IHBhdGgsIHN0cmljdDogc3RyaWN0LCBleGFjdDogZXhhY3QsIHNlbnNpdGl2ZTogc2Vuc2l0aXZlIH0sIHJvdXRlLm1hdGNoKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcblxuICAgIHdhcm5pbmcoISh0aGlzLnByb3BzLnJlbmRlciAmJiB0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNoaWxkcmVuPiB3aWxsIGJlIGlnbm9yZWRcIik7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcywgbmV4dENvbnRleHQpIHtcbiAgICB3YXJuaW5nKCEobmV4dFByb3BzLmxvY2F0aW9uICYmICF0aGlzLnByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHdhcm5pbmcoISghbmV4dFByb3BzLmxvY2F0aW9uICYmIHRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG1hdGNoOiB0aGlzLmNvbXB1dGVNYXRjaChuZXh0UHJvcHMsIG5leHRDb250ZXh0LnJvdXRlcilcbiAgICB9KTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBtYXRjaCA9IHRoaXMuc3RhdGUubWF0Y2g7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBjb21wb25lbnQgPSBfcHJvcHMuY29tcG9uZW50LFxuICAgICAgICByZW5kZXIgPSBfcHJvcHMucmVuZGVyO1xuICAgIHZhciBfY29udGV4dCRyb3V0ZXIgPSB0aGlzLmNvbnRleHQucm91dGVyLFxuICAgICAgICBoaXN0b3J5ID0gX2NvbnRleHQkcm91dGVyLmhpc3RvcnksXG4gICAgICAgIHJvdXRlID0gX2NvbnRleHQkcm91dGVyLnJvdXRlLFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gX2NvbnRleHQkcm91dGVyLnN0YXRpY0NvbnRleHQ7XG5cbiAgICB2YXIgbG9jYXRpb24gPSB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uO1xuICAgIHZhciBwcm9wcyA9IHsgbWF0Y2g6IG1hdGNoLCBsb2NhdGlvbjogbG9jYXRpb24sIGhpc3Rvcnk6IGhpc3RvcnksIHN0YXRpY0NvbnRleHQ6IHN0YXRpY0NvbnRleHQgfTtcblxuICAgIGlmIChjb21wb25lbnQpIHJldHVybiBtYXRjaCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiBudWxsO1xuXG4gICAgaWYgKHJlbmRlcikgcmV0dXJuIG1hdGNoID8gcmVuZGVyKHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBjaGlsZHJlbihwcm9wcyk7XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikpIHJldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGUucHJvcFR5cGVzID0ge1xuICBjb21wdXRlZE1hdGNoOiBQcm9wVHlwZXMub2JqZWN0LCAvLyBwcml2YXRlLCBmcm9tIDxTd2l0Y2g+XG4gIHBhdGg6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29tcG9uZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxufTtcblJvdXRlLmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfSlcbn07XG5Sb3V0ZS5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZSBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1JvdXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgUm91dGUgZnJvbSBcIi4vUm91dGVcIjtcbmltcG9ydCBMaW5rIGZyb20gXCIuL0xpbmtcIjtcblxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xudmFyIE5hdkxpbmsgPSBmdW5jdGlvbiBOYXZMaW5rKF9yZWYpIHtcbiAgdmFyIHRvID0gX3JlZi50byxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIHN0cmljdCA9IF9yZWYuc3RyaWN0LFxuICAgICAgbG9jYXRpb24gPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZi5hY3RpdmVDbGFzc05hbWUsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIHN0eWxlID0gX3JlZi5zdHlsZSxcbiAgICAgIGdldElzQWN0aXZlID0gX3JlZi5pc0FjdGl2ZSxcbiAgICAgIGFyaWFDdXJyZW50ID0gX3JlZltcImFyaWEtY3VycmVudFwiXSxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgW1widG9cIiwgXCJleGFjdFwiLCBcInN0cmljdFwiLCBcImxvY2F0aW9uXCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiY2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJzdHlsZVwiLCBcImlzQWN0aXZlXCIsIFwiYXJpYS1jdXJyZW50XCJdKTtcblxuICB2YXIgcGF0aCA9ICh0eXBlb2YgdG8gPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZih0bykpID09PSBcIm9iamVjdFwiID8gdG8ucGF0aG5hbWUgOiB0bztcblxuICAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgZXhhY3Q6IGV4YWN0LFxuICAgIHN0cmljdDogc3RyaWN0LFxuICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICBjaGlsZHJlbjogZnVuY3Rpb24gY2hpbGRyZW4oX3JlZjIpIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF9yZWYyLmxvY2F0aW9uLFxuICAgICAgICAgIG1hdGNoID0gX3JlZjIubWF0Y2g7XG5cbiAgICAgIHZhciBpc0FjdGl2ZSA9ICEhKGdldElzQWN0aXZlID8gZ2V0SXNBY3RpdmUobWF0Y2gsIGxvY2F0aW9uKSA6IG1hdGNoKTtcblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgX2V4dGVuZHMoe1xuICAgICAgICB0bzogdG8sXG4gICAgICAgIGNsYXNzTmFtZTogaXNBY3RpdmUgPyBbY2xhc3NOYW1lLCBhY3RpdmVDbGFzc05hbWVdLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICB9KS5qb2luKFwiIFwiKSA6IGNsYXNzTmFtZSxcbiAgICAgICAgc3R5bGU6IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlLCBhY3RpdmVTdHlsZSkgOiBzdHlsZSxcbiAgICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbFxuICAgICAgfSwgcmVzdCkpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5OYXZMaW5rLnByb3BUeXBlcyA9IHtcbiAgdG86IExpbmsucHJvcFR5cGVzLnRvLFxuICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBpc0FjdGl2ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIFwiYXJpYS1jdXJyZW50XCI6IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKVxufTtcblxuTmF2TGluay5kZWZhdWx0UHJvcHMgPSB7XG4gIGFjdGl2ZUNsYXNzTmFtZTogXCJhY3RpdmVcIixcbiAgXCJhcmlhLWN1cnJlbnRcIjogXCJwYWdlXCJcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5hdkxpbms7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXlcbiAqIGZyb20gYSBzY3JlZW4gd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG52YXIgUHJvbXB0ID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFByb21wdCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUHJvbXB0KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9tcHQpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBQcm9tcHQucHJvdG90eXBlLmVuYWJsZSA9IGZ1bmN0aW9uIGVuYWJsZShtZXNzYWdlKSB7XG4gICAgaWYgKHRoaXMudW5ibG9jaykgdGhpcy51bmJsb2NrKCk7XG5cbiAgICB0aGlzLnVuYmxvY2sgPSB0aGlzLmNvbnRleHQucm91dGVyLmhpc3RvcnkuYmxvY2sobWVzc2FnZSk7XG4gIH07XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5kaXNhYmxlID0gZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICBpZiAodGhpcy51bmJsb2NrKSB7XG4gICAgICB0aGlzLnVuYmxvY2soKTtcbiAgICAgIHRoaXMudW5ibG9jayA9IG51bGw7XG4gICAgfVxuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIik7XG5cbiAgICBpZiAodGhpcy5wcm9wcy53aGVuKSB0aGlzLmVuYWJsZSh0aGlzLnByb3BzLm1lc3NhZ2UpO1xuICB9O1xuXG4gIFByb21wdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgaWYgKG5leHRQcm9wcy53aGVuKSB7XG4gICAgICBpZiAoIXRoaXMucHJvcHMud2hlbiB8fCB0aGlzLnByb3BzLm1lc3NhZ2UgIT09IG5leHRQcm9wcy5tZXNzYWdlKSB0aGlzLmVuYWJsZShuZXh0UHJvcHMubWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgIH1cbiAgfTtcblxuICBQcm9tcHQucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5kaXNhYmxlKCk7XG4gIH07XG5cbiAgUHJvbXB0LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFByb21wdDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gIG1lc3NhZ2U6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSkuaXNSZXF1aXJlZFxufTtcblByb21wdC5kZWZhdWx0UHJvcHMgPSB7XG4gIHdoZW46IHRydWVcbn07XG5Qcm9tcHQuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIGJsb2NrOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFByb21wdDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFByb21wdCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1Byb21wdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBQcm9tcHQ7IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVHZW5lcmF0b3IgPSBmdW5jdGlvbiBjb21waWxlR2VuZXJhdG9yKHBhdHRlcm4pIHtcbiAgdmFyIGNhY2hlS2V5ID0gcGF0dGVybjtcbiAgdmFyIGNhY2hlID0gcGF0dGVybkNhY2hlW2NhY2hlS2V5XSB8fCAocGF0dGVybkNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAoY2FjaGVbcGF0dGVybl0pIHJldHVybiBjYWNoZVtwYXR0ZXJuXTtcblxuICB2YXIgY29tcGlsZWRHZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXR0ZXJuKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXR0ZXJuXSA9IGNvbXBpbGVkR2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBjb21waWxlZEdlbmVyYXRvcjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0dGVybiBhbmQgcGFyYW1ldGVycy5cbiAqL1xudmFyIGdlbmVyYXRlUGF0aCA9IGZ1bmN0aW9uIGdlbmVyYXRlUGF0aCgpIHtcbiAgdmFyIHBhdHRlcm4gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFwiL1wiO1xuICB2YXIgcGFyYW1zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICBpZiAocGF0dGVybiA9PT0gXCIvXCIpIHtcbiAgICByZXR1cm4gcGF0dGVybjtcbiAgfVxuICB2YXIgZ2VuZXJhdG9yID0gY29tcGlsZUdlbmVyYXRvcihwYXR0ZXJuKTtcbiAgcmV0dXJuIGdlbmVyYXRvcihwYXJhbXMsIHsgcHJldHR5OiB0cnVlIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVQYXRoOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBnZW5lcmF0ZVBhdGggZnJvbSBcIi4vZ2VuZXJhdGVQYXRoXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHVwZGF0aW5nIHRoZSBsb2NhdGlvbiBwcm9ncmFtbWF0aWNhbGx5XG4gKiB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbnZhciBSZWRpcmVjdCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSZWRpcmVjdCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUmVkaXJlY3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlZGlyZWN0KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmlzU3RhdGljID0gZnVuY3Rpb24gaXNTdGF0aWMoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udGV4dC5yb3V0ZXIgJiYgdGhpcy5jb250ZXh0LnJvdXRlci5zdGF0aWNDb250ZXh0O1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgaWYgKHRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKCF0aGlzLmlzU3RhdGljKCkpIHRoaXMucGVyZm9ybSgpO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgdmFyIHByZXZUbyA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG4gICAgdmFyIG5leHRUbyA9IGNyZWF0ZUxvY2F0aW9uKHRoaXMucHJvcHMudG8pO1xuXG4gICAgaWYgKGxvY2F0aW9uc0FyZUVxdWFsKHByZXZUbywgbmV4dFRvKSkge1xuICAgICAgd2FybmluZyhmYWxzZSwgXCJZb3UgdHJpZWQgdG8gcmVkaXJlY3QgdG8gdGhlIHNhbWUgcm91dGUgeW91J3JlIGN1cnJlbnRseSBvbjogXCIgKyAoXCJcXFwiXCIgKyBuZXh0VG8ucGF0aG5hbWUgKyBuZXh0VG8uc2VhcmNoICsgXCJcXFwiXCIpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnBlcmZvcm0oKTtcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcHV0ZVRvID0gZnVuY3Rpb24gY29tcHV0ZVRvKF9yZWYpIHtcbiAgICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgICAgdG8gPSBfcmVmLnRvO1xuXG4gICAgaWYgKGNvbXB1dGVkTWF0Y2gpIHtcbiAgICAgIGlmICh0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdG87XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLnBlcmZvcm0gPSBmdW5jdGlvbiBwZXJmb3JtKCkge1xuICAgIHZhciBoaXN0b3J5ID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgIHZhciBwdXNoID0gdGhpcy5wcm9wcy5wdXNoO1xuXG4gICAgdmFyIHRvID0gdGhpcy5jb21wdXRlVG8odGhpcy5wcm9wcyk7XG5cbiAgICBpZiAocHVzaCkge1xuICAgICAgaGlzdG9yeS5wdXNoKHRvKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGlzdG9yeS5yZXBsYWNlKHRvKTtcbiAgICB9XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUmVkaXJlY3Q7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgY29tcHV0ZWRNYXRjaDogUHJvcFR5cGVzLm9iamVjdCwgLy8gcHJpdmF0ZSwgZnJvbSA8U3dpdGNoPlxuICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG59O1xuUmVkaXJlY3QuZGVmYXVsdFByb3BzID0ge1xuICBwdXNoOiBmYWxzZVxufTtcblJlZGlyZWN0LmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBwdXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgcmVwbGFjZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJlZGlyZWN0OyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUmVkaXJlY3QgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9SZWRpcmVjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBSZWRpcmVjdDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGNyZWF0ZVBhdGggfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxudmFyIGFkZExlYWRpbmdTbGFzaCA9IGZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufTtcblxudmFyIGFkZEJhc2VuYW1lID0gZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcblxuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn07XG5cbnZhciBzdHJpcEJhc2VuYW1lID0gZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcblxuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuXG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn07XG5cbnZhciBjcmVhdGVVUkwgPSBmdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59O1xuXG52YXIgc3RhdGljSGFuZGxlciA9IGZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSk7XG4gIH07XG59O1xuXG52YXIgbm9vcCA9IGZ1bmN0aW9uIG5vb3AoKSB7fTtcblxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cbnZhciBTdGF0aWNSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdGF0aWNSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmNyZWF0ZUhyZWYgPSBmdW5jdGlvbiAocGF0aCkge1xuICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChfdGhpcy5wcm9wcy5iYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgfSwgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dDtcblxuICAgICAgY29udGV4dC5hY3Rpb24gPSBcIlBVU0hcIjtcbiAgICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICAgIH0sIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczIgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQ7XG5cbiAgICAgIGNvbnRleHQuYWN0aW9uID0gXCJSRVBMQUNFXCI7XG4gICAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgICB9LCBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9LCBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjoge1xuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLmNvbnRleHRcbiAgICAgIH1cbiAgICB9O1xuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGJhc2VuYW1lID0gX3Byb3BzLmJhc2VuYW1lLFxuICAgICAgICBjb250ZXh0ID0gX3Byb3BzLmNvbnRleHQsXG4gICAgICAgIGxvY2F0aW9uID0gX3Byb3BzLmxvY2F0aW9uLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHMsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogdGhpcy5jcmVhdGVIcmVmLFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHByb3BzLCB7IGhpc3Rvcnk6IGhpc3RvcnkgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbn07XG5TdGF0aWNSb3V0ZXIuZGVmYXVsdFByb3BzID0ge1xuICBiYXNlbmFtZTogXCJcIixcbiAgbG9jYXRpb246IFwiL1wiXG59O1xuU3RhdGljUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBTdGF0aWNSb3V0ZXI7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBTdGF0aWNSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9TdGF0aWNSb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgU3RhdGljUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTd2l0Y2gpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIHJvdXRlID0gdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZTtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcblxuICAgIHZhciBtYXRjaCA9IHZvaWQgMCxcbiAgICAgICAgY2hpbGQgPSB2b2lkIDA7XG4gICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgIHZhciBfZWxlbWVudCRwcm9wcyA9IGVsZW1lbnQucHJvcHMsXG4gICAgICAgICAgICBwYXRoUHJvcCA9IF9lbGVtZW50JHByb3BzLnBhdGgsXG4gICAgICAgICAgICBleGFjdCA9IF9lbGVtZW50JHByb3BzLmV4YWN0LFxuICAgICAgICAgICAgc3RyaWN0ID0gX2VsZW1lbnQkcHJvcHMuc3RyaWN0LFxuICAgICAgICAgICAgc2Vuc2l0aXZlID0gX2VsZW1lbnQkcHJvcHMuc2Vuc2l0aXZlLFxuICAgICAgICAgICAgZnJvbSA9IF9lbGVtZW50JHByb3BzLmZyb207XG5cbiAgICAgICAgdmFyIHBhdGggPSBwYXRoUHJvcCB8fCBmcm9tO1xuXG4gICAgICAgIGNoaWxkID0gZWxlbWVudDtcbiAgICAgICAgbWF0Y2ggPSBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgZXhhY3Q6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7IGxvY2F0aW9uOiBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSkgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN3aXRjaC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5Td2l0Y2gucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1N3aXRjaFwiO1xuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBnZW5lcmF0ZVBhdGggZnJvbSBcInJlYWN0LXJvdXRlci9lcy9nZW5lcmF0ZVBhdGhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVQYXRoOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvbWF0Y2hQYXRoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IG1hdGNoUGF0aDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSBcImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI7XG5pbXBvcnQgUm91dGUgZnJvbSBcIi4vUm91dGVcIjtcblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xudmFyIHdpdGhSb3V0ZXIgPSBmdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgICBjaGlsZHJlbjogZnVuY3Rpb24gY2hpbGRyZW4ocm91dGVDb21wb25lbnRQcm9wcykge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgcm91dGVDb21wb25lbnRQcm9wcywge1xuICAgICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcbiAgQy5wcm9wVHlwZXMgPSB7XG4gICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLmZ1bmNcbiAgfTtcblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgd2l0aFJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL3dpdGhSb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcjsiLCJpbXBvcnQgX0Jyb3dzZXJSb3V0ZXIgZnJvbSBcIi4vQnJvd3NlclJvdXRlclwiO1xuZXhwb3J0IHsgX0Jyb3dzZXJSb3V0ZXIgYXMgQnJvd3NlclJvdXRlciB9O1xuaW1wb3J0IF9IYXNoUm91dGVyIGZyb20gXCIuL0hhc2hSb3V0ZXJcIjtcbmV4cG9ydCB7IF9IYXNoUm91dGVyIGFzIEhhc2hSb3V0ZXIgfTtcbmltcG9ydCBfTGluayBmcm9tIFwiLi9MaW5rXCI7XG5leHBvcnQgeyBfTGluayBhcyBMaW5rIH07XG5pbXBvcnQgX01lbW9yeVJvdXRlciBmcm9tIFwiLi9NZW1vcnlSb3V0ZXJcIjtcbmV4cG9ydCB7IF9NZW1vcnlSb3V0ZXIgYXMgTWVtb3J5Um91dGVyIH07XG5pbXBvcnQgX05hdkxpbmsgZnJvbSBcIi4vTmF2TGlua1wiO1xuZXhwb3J0IHsgX05hdkxpbmsgYXMgTmF2TGluayB9O1xuaW1wb3J0IF9Qcm9tcHQgZnJvbSBcIi4vUHJvbXB0XCI7XG5leHBvcnQgeyBfUHJvbXB0IGFzIFByb21wdCB9O1xuaW1wb3J0IF9SZWRpcmVjdCBmcm9tIFwiLi9SZWRpcmVjdFwiO1xuZXhwb3J0IHsgX1JlZGlyZWN0IGFzIFJlZGlyZWN0IH07XG5pbXBvcnQgX1JvdXRlIGZyb20gXCIuL1JvdXRlXCI7XG5leHBvcnQgeyBfUm91dGUgYXMgUm91dGUgfTtcbmltcG9ydCBfUm91dGVyIGZyb20gXCIuL1JvdXRlclwiO1xuZXhwb3J0IHsgX1JvdXRlciBhcyBSb3V0ZXIgfTtcbmltcG9ydCBfU3RhdGljUm91dGVyIGZyb20gXCIuL1N0YXRpY1JvdXRlclwiO1xuZXhwb3J0IHsgX1N0YXRpY1JvdXRlciBhcyBTdGF0aWNSb3V0ZXIgfTtcbmltcG9ydCBfU3dpdGNoIGZyb20gXCIuL1N3aXRjaFwiO1xuZXhwb3J0IHsgX1N3aXRjaCBhcyBTd2l0Y2ggfTtcbmltcG9ydCBfZ2VuZXJhdGVQYXRoIGZyb20gXCIuL2dlbmVyYXRlUGF0aFwiO1xuZXhwb3J0IHsgX2dlbmVyYXRlUGF0aCBhcyBnZW5lcmF0ZVBhdGggfTtcbmltcG9ydCBfbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuZXhwb3J0IHsgX21hdGNoUGF0aCBhcyBtYXRjaFBhdGggfTtcbmltcG9ydCBfd2l0aFJvdXRlciBmcm9tIFwiLi93aXRoUm91dGVyXCI7XG5leHBvcnQgeyBfd2l0aFJvdXRlciBhcyB3aXRoUm91dGVyIH07IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi43LjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LEI9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixDPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBhYShhLGIsZSxjLGQsZyxoLGYpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtlLGMsZCxnLGgsZl0sbT0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbbSsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIEQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxlPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTA7YzxiO2MrKyllKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTthYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGUpfXZhciBFPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxGPXt9O1xuZnVuY3Rpb24gRyhhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfUcucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ry5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP0QoXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtHLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBIKCl7fUgucHJvdG90eXBlPUcucHJvdG90eXBlO2Z1bmN0aW9uIEkoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Rjt0aGlzLnVwZGF0ZXI9ZXx8RX12YXIgSj1JLnByb3RvdHlwZT1uZXcgSDtcbkouY29uc3RydWN0b3I9STtrKEosRy5wcm90b3R5cGUpO0ouaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEs9e2N1cnJlbnQ6bnVsbCxjdXJyZW50RGlzcGF0Y2hlcjpudWxsfSxMPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTT17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTihhLGIsZSl7dmFyIGM9dm9pZCAwLGQ9e30sZz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpTC5jYWxsKGIsYykmJiFNLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGw9QXJyYXkoZiksbT0wO208ZjttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbY10mJihkW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpLLmN1cnJlbnR9fVxuZnVuY3Rpb24gYmEoYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsZSxjKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWU7ZC5jb250ZXh0PWM7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmUsY29udGV4dDpjLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixlLGMpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBlKGMsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBoPTA7aDxhLmxlbmd0aDtoKyspe2Q9YVtoXTt2YXIgZj1iK1UoZCxoKTtnKz1UKGQsZixlLGMpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QyYmYVtDXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxoPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGgrKyksZys9VChkLGYsZSxjKTtlbHNlXCJvYmplY3RcIj09PWQmJihlPVwiXCIrYSxEKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjplLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixlKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsZSl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gY2EoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gZGEoYSxiLGUpe3ZhciBjPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VyhhLGMsZSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1iYShhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2UpKSxjLnB1c2goYSkpfWZ1bmN0aW9uIFcoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxjLGQpO1YoYSxkYSxiKTtTKGIpfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VyhhLGMsbnVsbCxiLGUpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixlKTtWKGEsY2EsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtXKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TyhhKT92b2lkIDA6RChcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RyxQdXJlQ29tcG9uZW50OkksY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkIsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19LG1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6QSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpOLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7bnVsbD09PWF8fHZvaWQgMD09PWE/RChcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZD1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO1xuaWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YylkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1OLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tyx2ZXJzaW9uOlwiMTYuNy4wXCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudE93bmVyOkssYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gVGhpcyBtZXRob2Qgb2Ygb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IG5lZWRzIHRvIGJlXG4vLyBrZXB0IGlkZW50aWNhbCB0byB0aGUgd2F5IGl0IGlzIG9idGFpbmVkIGluIHJ1bnRpbWUuanNcbnZhciBnID0gKGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcyB9KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcblxuLy8gVXNlIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBiZWNhdXNlIG5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCBjYWxsaW5nXG4vLyBgaGFzT3duUHJvcGVydHlgIG9uIHRoZSBnbG9iYWwgYHNlbGZgIG9iamVjdCBpbiBhIHdvcmtlci4gU2VlICMxODMuXG52YXIgaGFkUnVudGltZSA9IGcucmVnZW5lcmF0b3JSdW50aW1lICYmXG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGcpLmluZGV4T2YoXCJyZWdlbmVyYXRvclJ1bnRpbWVcIikgPj0gMDtcblxuLy8gU2F2ZSB0aGUgb2xkIHJlZ2VuZXJhdG9yUnVudGltZSBpbiBjYXNlIGl0IG5lZWRzIHRvIGJlIHJlc3RvcmVkIGxhdGVyLlxudmFyIG9sZFJ1bnRpbWUgPSBoYWRSdW50aW1lICYmIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuXG4vLyBGb3JjZSByZWV2YWx1dGF0aW9uIG9mIHJ1bnRpbWUuanMuXG5nLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9ydW50aW1lXCIpO1xuXG5pZiAoaGFkUnVudGltZSkge1xuICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBydW50aW1lLlxuICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IG9sZFJ1bnRpbWU7XG59IGVsc2Uge1xuICAvLyBSZW1vdmUgdGhlIGdsb2JhbCBwcm9wZXJ0eSBhZGRlZCBieSBydW50aW1lLmpzLlxuICB0cnkge1xuICAgIGRlbGV0ZSBnLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuIShmdW5jdGlvbihnbG9iYWwpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIE9wID0gT2JqZWN0LnByb3RvdHlwZTtcbiAgdmFyIGhhc093biA9IE9wLmhhc093blByb3BlcnR5O1xuICB2YXIgdW5kZWZpbmVkOyAvLyBNb3JlIGNvbXByZXNzaWJsZSB0aGFuIHZvaWQgMC5cbiAgdmFyICRTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2wgOiB7fTtcbiAgdmFyIGl0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIjtcbiAgdmFyIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIjtcbiAgdmFyIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcblxuICB2YXIgaW5Nb2R1bGUgPSB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiO1xuICB2YXIgcnVudGltZSA9IGdsb2JhbC5yZWdlbmVyYXRvclJ1bnRpbWU7XG4gIGlmIChydW50aW1lKSB7XG4gICAgaWYgKGluTW9kdWxlKSB7XG4gICAgICAvLyBJZiByZWdlbmVyYXRvclJ1bnRpbWUgaXMgZGVmaW5lZCBnbG9iYWxseSBhbmQgd2UncmUgaW4gYSBtb2R1bGUsXG4gICAgICAvLyBtYWtlIHRoZSBleHBvcnRzIG9iamVjdCBpZGVudGljYWwgdG8gcmVnZW5lcmF0b3JSdW50aW1lLlxuICAgICAgbW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuICAgIH1cbiAgICAvLyBEb24ndCBib3RoZXIgZXZhbHVhdGluZyB0aGUgcmVzdCBvZiB0aGlzIGZpbGUgaWYgdGhlIHJ1bnRpbWUgd2FzXG4gICAgLy8gYWxyZWFkeSBkZWZpbmVkIGdsb2JhbGx5LlxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIERlZmluZSB0aGUgcnVudGltZSBnbG9iYWxseSAoYXMgZXhwZWN0ZWQgYnkgZ2VuZXJhdGVkIGNvZGUpIGFzIGVpdGhlclxuICAvLyBtb2R1bGUuZXhwb3J0cyAoaWYgd2UncmUgaW4gYSBtb2R1bGUpIG9yIGEgbmV3LCBlbXB0eSBvYmplY3QuXG4gIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lID0gaW5Nb2R1bGUgPyBtb2R1bGUuZXhwb3J0cyA6IHt9O1xuXG4gIGZ1bmN0aW9uIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBJZiBvdXRlckZuIHByb3ZpZGVkIGFuZCBvdXRlckZuLnByb3RvdHlwZSBpcyBhIEdlbmVyYXRvciwgdGhlbiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvci5cbiAgICB2YXIgcHJvdG9HZW5lcmF0b3IgPSBvdXRlckZuICYmIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yID8gb3V0ZXJGbiA6IEdlbmVyYXRvcjtcbiAgICB2YXIgZ2VuZXJhdG9yID0gT2JqZWN0LmNyZWF0ZShwcm90b0dlbmVyYXRvci5wcm90b3R5cGUpO1xuICAgIHZhciBjb250ZXh0ID0gbmV3IENvbnRleHQodHJ5TG9jc0xpc3QgfHwgW10pO1xuXG4gICAgLy8gVGhlIC5faW52b2tlIG1ldGhvZCB1bmlmaWVzIHRoZSBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlIC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcy5cbiAgICBnZW5lcmF0b3IuX2ludm9rZSA9IG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdG9yO1xuICB9XG4gIHJ1bnRpbWUud3JhcCA9IHdyYXA7XG5cbiAgLy8gVHJ5L2NhdGNoIGhlbHBlciB0byBtaW5pbWl6ZSBkZW9wdGltaXphdGlvbnMuIFJldHVybnMgYSBjb21wbGV0aW9uXG4gIC8vIHJlY29yZCBsaWtlIGNvbnRleHQudHJ5RW50cmllc1tpXS5jb21wbGV0aW9uLiBUaGlzIGludGVyZmFjZSBjb3VsZFxuICAvLyBoYXZlIGJlZW4gKGFuZCB3YXMgcHJldmlvdXNseSkgZGVzaWduZWQgdG8gdGFrZSBhIGNsb3N1cmUgdG8gYmVcbiAgLy8gaW52b2tlZCB3aXRob3V0IGFyZ3VtZW50cywgYnV0IGluIGFsbCB0aGUgY2FzZXMgd2UgY2FyZSBhYm91dCB3ZVxuICAvLyBhbHJlYWR5IGhhdmUgYW4gZXhpc3RpbmcgbWV0aG9kIHdlIHdhbnQgdG8gY2FsbCwgc28gdGhlcmUncyBubyBuZWVkXG4gIC8vIHRvIGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBvYmplY3QuIFdlIGNhbiBldmVuIGdldCBhd2F5IHdpdGggYXNzdW1pbmdcbiAgLy8gdGhlIG1ldGhvZCB0YWtlcyBleGFjdGx5IG9uZSBhcmd1bWVudCwgc2luY2UgdGhhdCBoYXBwZW5zIHRvIGJlIHRydWVcbiAgLy8gaW4gZXZlcnkgY2FzZSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB0b3VjaCB0aGUgYXJndW1lbnRzIG9iamVjdC4gVGhlXG4gIC8vIG9ubHkgYWRkaXRpb25hbCBhbGxvY2F0aW9uIHJlcXVpcmVkIGlzIHRoZSBjb21wbGV0aW9uIHJlY29yZCwgd2hpY2hcbiAgLy8gaGFzIGEgc3RhYmxlIHNoYXBlIGFuZCBzbyBob3BlZnVsbHkgc2hvdWxkIGJlIGNoZWFwIHRvIGFsbG9jYXRlLlxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJub3JtYWxcIiwgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKSB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJ0aHJvd1wiLCBhcmc6IGVyciB9O1xuICAgIH1cbiAgfVxuXG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0ID0gXCJzdXNwZW5kZWRTdGFydFwiO1xuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCA9IFwic3VzcGVuZGVkWWllbGRcIjtcbiAgdmFyIEdlblN0YXRlRXhlY3V0aW5nID0gXCJleGVjdXRpbmdcIjtcbiAgdmFyIEdlblN0YXRlQ29tcGxldGVkID0gXCJjb21wbGV0ZWRcIjtcblxuICAvLyBSZXR1cm5pbmcgdGhpcyBvYmplY3QgZnJvbSB0aGUgaW5uZXJGbiBoYXMgdGhlIHNhbWUgZWZmZWN0IGFzXG4gIC8vIGJyZWFraW5nIG91dCBvZiB0aGUgZGlzcGF0Y2ggc3dpdGNoIHN0YXRlbWVudC5cbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICAvLyBEdW1teSBjb25zdHJ1Y3RvciBmdW5jdGlvbnMgdGhhdCB3ZSB1c2UgYXMgdGhlIC5jb25zdHJ1Y3RvciBhbmRcbiAgLy8gLmNvbnN0cnVjdG9yLnByb3RvdHlwZSBwcm9wZXJ0aWVzIGZvciBmdW5jdGlvbnMgdGhhdCByZXR1cm4gR2VuZXJhdG9yXG4gIC8vIG9iamVjdHMuIEZvciBmdWxsIHNwZWMgY29tcGxpYW5jZSwgeW91IG1heSB3aXNoIHRvIGNvbmZpZ3VyZSB5b3VyXG4gIC8vIG1pbmlmaWVyIG5vdCB0byBtYW5nbGUgdGhlIG5hbWVzIG9mIHRoZXNlIHR3byBmdW5jdGlvbnMuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fVxuXG4gIC8vIFRoaXMgaXMgYSBwb2x5ZmlsbCBmb3IgJUl0ZXJhdG9yUHJvdG90eXBlJSBmb3IgZW52aXJvbm1lbnRzIHRoYXRcbiAgLy8gZG9uJ3QgbmF0aXZlbHkgc3VwcG9ydCBpdC5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIEl0ZXJhdG9yUHJvdG90eXBlW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB2YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG4gIHZhciBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvICYmIGdldFByb3RvKGdldFByb3RvKHZhbHVlcyhbXSkpKTtcbiAgaWYgKE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICYmXG4gICAgICBOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAhPT0gT3AgJiZcbiAgICAgIGhhc093bi5jYWxsKE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlLCBpdGVyYXRvclN5bWJvbCkpIHtcbiAgICAvLyBUaGlzIGVudmlyb25tZW50IGhhcyBhIG5hdGl2ZSAlSXRlcmF0b3JQcm90b3R5cGUlOyB1c2UgaXQgaW5zdGVhZFxuICAgIC8vIG9mIHRoZSBwb2x5ZmlsbC5cbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlO1xuICB9XG5cbiAgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID1cbiAgICBHZW5lcmF0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSk7XG4gIEdlbmVyYXRvckZ1bmN0aW9uLnByb3RvdHlwZSA9IEdwLmNvbnN0cnVjdG9yID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7XG4gIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLmNvbnN0cnVjdG9yID0gR2VuZXJhdG9yRnVuY3Rpb247XG4gIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlW3RvU3RyaW5nVGFnU3ltYm9sXSA9XG4gICAgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBcIkdlbmVyYXRvckZ1bmN0aW9uXCI7XG5cbiAgLy8gSGVscGVyIGZvciBkZWZpbmluZyB0aGUgLm5leHQsIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcyBvZiB0aGVcbiAgLy8gSXRlcmF0b3IgaW50ZXJmYWNlIGluIHRlcm1zIG9mIGEgc2luZ2xlIC5faW52b2tlIG1ldGhvZC5cbiAgZnVuY3Rpb24gZGVmaW5lSXRlcmF0b3JNZXRob2RzKHByb3RvdHlwZSkge1xuICAgIFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgcHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbihhcmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludm9rZShtZXRob2QsIGFyZyk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9XG5cbiAgcnVudGltZS5pc0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24oZ2VuRnVuKSB7XG4gICAgdmFyIGN0b3IgPSB0eXBlb2YgZ2VuRnVuID09PSBcImZ1bmN0aW9uXCIgJiYgZ2VuRnVuLmNvbnN0cnVjdG9yO1xuICAgIHJldHVybiBjdG9yXG4gICAgICA/IGN0b3IgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8XG4gICAgICAgIC8vIEZvciB0aGUgbmF0aXZlIEdlbmVyYXRvckZ1bmN0aW9uIGNvbnN0cnVjdG9yLCB0aGUgYmVzdCB3ZSBjYW5cbiAgICAgICAgLy8gZG8gaXMgdG8gY2hlY2sgaXRzIC5uYW1lIHByb3BlcnR5LlxuICAgICAgICAoY3Rvci5kaXNwbGF5TmFtZSB8fCBjdG9yLm5hbWUpID09PSBcIkdlbmVyYXRvckZ1bmN0aW9uXCJcbiAgICAgIDogZmFsc2U7XG4gIH07XG5cbiAgcnVudGltZS5tYXJrID0gZnVuY3Rpb24oZ2VuRnVuKSB7XG4gICAgaWYgKE9iamVjdC5zZXRQcm90b3R5cGVPZikge1xuICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGdlbkZ1biwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7XG4gICAgICBpZiAoISh0b1N0cmluZ1RhZ1N5bWJvbCBpbiBnZW5GdW4pKSB7XG4gICAgICAgIGdlbkZ1blt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvckZ1bmN0aW9uXCI7XG4gICAgICB9XG4gICAgfVxuICAgIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKTtcbiAgICByZXR1cm4gZ2VuRnVuO1xuICB9O1xuXG4gIC8vIFdpdGhpbiB0aGUgYm9keSBvZiBhbnkgYXN5bmMgZnVuY3Rpb24sIGBhd2FpdCB4YCBpcyB0cmFuc2Zvcm1lZCB0b1xuICAvLyBgeWllbGQgcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHgpYCwgc28gdGhhdCB0aGUgcnVudGltZSBjYW4gdGVzdFxuICAvLyBgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKWAgdG8gZGV0ZXJtaW5lIGlmIHRoZSB5aWVsZGVkIHZhbHVlIGlzXG4gIC8vIG1lYW50IHRvIGJlIGF3YWl0ZWQuXG4gIHJ1bnRpbWUuYXdyYXAgPSBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4geyBfX2F3YWl0OiBhcmcgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goZ2VuZXJhdG9yW21ldGhvZF0sIGdlbmVyYXRvciwgYXJnKTtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHJlamVjdChyZWNvcmQuYXJnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWNvcmQuYXJnO1xuICAgICAgICB2YXIgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIGlmICh2YWx1ZSAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpKSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh2YWx1ZS5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJuZXh0XCIsIHZhbHVlLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgaW52b2tlKFwidGhyb3dcIiwgZXJyLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihmdW5jdGlvbih1bndyYXBwZWQpIHtcbiAgICAgICAgICAvLyBXaGVuIGEgeWllbGRlZCBQcm9taXNlIGlzIHJlc29sdmVkLCBpdHMgZmluYWwgdmFsdWUgYmVjb21lc1xuICAgICAgICAgIC8vIHRoZSAudmFsdWUgb2YgdGhlIFByb21pc2U8e3ZhbHVlLGRvbmV9PiByZXN1bHQgZm9yIHRoZVxuICAgICAgICAgIC8vIGN1cnJlbnQgaXRlcmF0aW9uLiBJZiB0aGUgUHJvbWlzZSBpcyByZWplY3RlZCwgaG93ZXZlciwgdGhlXG4gICAgICAgICAgLy8gcmVzdWx0IGZvciB0aGlzIGl0ZXJhdGlvbiB3aWxsIGJlIHJlamVjdGVkIHdpdGggdGhlIHNhbWVcbiAgICAgICAgICAvLyByZWFzb24uIE5vdGUgdGhhdCByZWplY3Rpb25zIG9mIHlpZWxkZWQgUHJvbWlzZXMgYXJlIG5vdFxuICAgICAgICAgIC8vIHRocm93biBiYWNrIGludG8gdGhlIGdlbmVyYXRvciBmdW5jdGlvbiwgYXMgaXMgdGhlIGNhc2VcbiAgICAgICAgICAvLyB3aGVuIGFuIGF3YWl0ZWQgUHJvbWlzZSBpcyByZWplY3RlZC4gVGhpcyBkaWZmZXJlbmNlIGluXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYmV0d2VlbiB5aWVsZCBhbmQgYXdhaXQgaXMgaW1wb3J0YW50LCBiZWNhdXNlIGl0XG4gICAgICAgICAgLy8gYWxsb3dzIHRoZSBjb25zdW1lciB0byBkZWNpZGUgd2hhdCB0byBkbyB3aXRoIHRoZSB5aWVsZGVkXG4gICAgICAgICAgLy8gcmVqZWN0aW9uIChzd2FsbG93IGl0IGFuZCBjb250aW51ZSwgbWFudWFsbHkgLnRocm93IGl0IGJhY2tcbiAgICAgICAgICAvLyBpbnRvIHRoZSBnZW5lcmF0b3IsIGFiYW5kb24gaXRlcmF0aW9uLCB3aGF0ZXZlcikuIFdpdGhcbiAgICAgICAgICAvLyBhd2FpdCwgYnkgY29udHJhc3QsIHRoZXJlIGlzIG5vIG9wcG9ydHVuaXR5IHRvIGV4YW1pbmUgdGhlXG4gICAgICAgICAgLy8gcmVqZWN0aW9uIHJlYXNvbiBvdXRzaWRlIHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24sIHNvIHRoZVxuICAgICAgICAgIC8vIG9ubHkgb3B0aW9uIGlzIHRvIHRocm93IGl0IGZyb20gdGhlIGF3YWl0IGV4cHJlc3Npb24sIGFuZFxuICAgICAgICAgIC8vIGxldCB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhbmRsZSB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJlc3VsdC52YWx1ZSA9IHVud3JhcHBlZDtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0sIHJlamVjdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcblxuICAgIGZ1bmN0aW9uIGVucXVldWUobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9XG4gICAgICAgIC8vIElmIGVucXVldWUgaGFzIGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiB3ZSB3YW50IHRvIHdhaXQgdW50aWxcbiAgICAgICAgLy8gYWxsIHByZXZpb3VzIFByb21pc2VzIGhhdmUgYmVlbiByZXNvbHZlZCBiZWZvcmUgY2FsbGluZyBpbnZva2UsXG4gICAgICAgIC8vIHNvIHRoYXQgcmVzdWx0cyBhcmUgYWx3YXlzIGRlbGl2ZXJlZCBpbiB0aGUgY29ycmVjdCBvcmRlci4gSWZcbiAgICAgICAgLy8gZW5xdWV1ZSBoYXMgbm90IGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiBpdCBpcyBpbXBvcnRhbnQgdG9cbiAgICAgICAgLy8gY2FsbCBpbnZva2UgaW1tZWRpYXRlbHksIHdpdGhvdXQgd2FpdGluZyBvbiBhIGNhbGxiYWNrIHRvIGZpcmUsXG4gICAgICAgIC8vIHNvIHRoYXQgdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRvXG4gICAgICAgIC8vIGFueSBuZWNlc3Nhcnkgc2V0dXAgaW4gYSBwcmVkaWN0YWJsZSB3YXkuIFRoaXMgcHJlZGljdGFiaWxpdHlcbiAgICAgICAgLy8gaXMgd2h5IHRoZSBQcm9taXNlIGNvbnN0cnVjdG9yIHN5bmNocm9ub3VzbHkgaW52b2tlcyBpdHNcbiAgICAgICAgLy8gZXhlY3V0b3IgY2FsbGJhY2ssIGFuZCB3aHkgYXN5bmMgZnVuY3Rpb25zIHN5bmNocm9ub3VzbHlcbiAgICAgICAgLy8gZXhlY3V0ZSBjb2RlIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQuIFNpbmNlIHdlIGltcGxlbWVudCBzaW1wbGVcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25zIGluIHRlcm1zIG9mIGFzeW5jIGdlbmVyYXRvcnMsIGl0IGlzIGVzcGVjaWFsbHlcbiAgICAgICAgLy8gaW1wb3J0YW50IHRvIGdldCB0aGlzIHJpZ2h0LCBldmVuIHRob3VnaCBpdCByZXF1aXJlcyBjYXJlLlxuICAgICAgICBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihcbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyxcbiAgICAgICAgICAvLyBBdm9pZCBwcm9wYWdhdGluZyBmYWlsdXJlcyB0byBQcm9taXNlcyByZXR1cm5lZCBieSBsYXRlclxuICAgICAgICAgIC8vIGludm9jYXRpb25zIG9mIHRoZSBpdGVyYXRvci5cbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZ1xuICAgICAgICApIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgdGhlIHVuaWZpZWQgaGVscGVyIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gaW1wbGVtZW50IC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gKHNlZSBkZWZpbmVJdGVyYXRvck1ldGhvZHMpLlxuICAgIHRoaXMuX2ludm9rZSA9IGVucXVldWU7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBBc3luY0l0ZXJhdG9yLnByb3RvdHlwZVthc3luY0l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgcnVudGltZS5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvcjtcblxuICAvLyBOb3RlIHRoYXQgc2ltcGxlIGFzeW5jIGZ1bmN0aW9ucyBhcmUgaW1wbGVtZW50ZWQgb24gdG9wIG9mXG4gIC8vIEFzeW5jSXRlcmF0b3Igb2JqZWN0czsgdGhleSBqdXN0IHJldHVybiBhIFByb21pc2UgZm9yIHRoZSB2YWx1ZSBvZlxuICAvLyB0aGUgZmluYWwgcmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBpdGVyYXRvci5cbiAgcnVudGltZS5hc3luYyA9IGZ1bmN0aW9uKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpXG4gICAgKTtcblxuICAgIHJldHVybiBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24ob3V0ZXJGbilcbiAgICAgID8gaXRlciAvLyBJZiBvdXRlckZuIGlzIGEgZ2VuZXJhdG9yLCByZXR1cm4gdGhlIGZ1bGwgaXRlcmF0b3IuXG4gICAgICA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkge1xuICAgIHZhciBzdGF0ZSA9IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlRXhlY3V0aW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVDb21wbGV0ZWQpIHtcbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgdGhyb3cgYXJnO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQmUgZm9yZ2l2aW5nLCBwZXIgMjUuMy4zLjMuMyBvZiB0aGUgc3BlYzpcbiAgICAgICAgLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWdlbmVyYXRvcnJlc3VtZVxuICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpO1xuICAgICAgfVxuXG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgIGNvbnRleHQuYXJnID0gYXJnO1xuXG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuICAgICAgICBpZiAoZGVsZWdhdGUpIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcbiAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAgIC8vIFNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICAgICAgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydCkge1xuICAgICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAgIHRocm93IGNvbnRleHQuYXJnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgICBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0ZSA9IEdlblN0YXRlRXhlY3V0aW5nO1xuXG4gICAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcbiAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiKSB7XG4gICAgICAgICAgLy8gSWYgYW4gZXhjZXB0aW9uIGlzIHRocm93biBmcm9tIGlubmVyRm4sIHdlIGxlYXZlIHN0YXRlID09PVxuICAgICAgICAgIC8vIEdlblN0YXRlRXhlY3V0aW5nIGFuZCBsb29wIGJhY2sgZm9yIGFub3RoZXIgaW52b2NhdGlvbi5cbiAgICAgICAgICBzdGF0ZSA9IGNvbnRleHQuZG9uZVxuICAgICAgICAgICAgPyBHZW5TdGF0ZUNvbXBsZXRlZFxuICAgICAgICAgICAgOiBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkO1xuXG4gICAgICAgICAgaWYgKHJlY29yZC5hcmcgPT09IENvbnRpbnVlU2VudGluZWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogcmVjb3JkLmFyZyxcbiAgICAgICAgICAgIGRvbmU6IGNvbnRleHQuZG9uZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAvLyBEaXNwYXRjaCB0aGUgZXhjZXB0aW9uIGJ5IGxvb3BpbmcgYmFjayBhcm91bmQgdG8gdGhlXG4gICAgICAgICAgLy8gY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZykgY2FsbCBhYm92ZS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gQ2FsbCBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF0oY29udGV4dC5hcmcpIGFuZCBoYW5kbGUgdGhlXG4gIC8vIHJlc3VsdCwgZWl0aGVyIGJ5IHJldHVybmluZyBhIHsgdmFsdWUsIGRvbmUgfSByZXN1bHQgZnJvbSB0aGVcbiAgLy8gZGVsZWdhdGUgaXRlcmF0b3IsIG9yIGJ5IG1vZGlmeWluZyBjb250ZXh0Lm1ldGhvZCBhbmQgY29udGV4dC5hcmcsXG4gIC8vIHNldHRpbmcgY29udGV4dC5kZWxlZ2F0ZSB0byBudWxsLCBhbmQgcmV0dXJuaW5nIHRoZSBDb250aW51ZVNlbnRpbmVsLlxuICBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIG1ldGhvZCA9IGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIEEgLnRocm93IG9yIC5yZXR1cm4gd2hlbiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIG5vIC50aHJvd1xuICAgICAgLy8gbWV0aG9kIGFsd2F5cyB0ZXJtaW5hdGVzIHRoZSB5aWVsZCogbG9vcC5cbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICBpZiAoZGVsZWdhdGUuaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBhIHJldHVybiBtZXRob2QsIGdpdmUgaXQgYVxuICAgICAgICAgIC8vIGNoYW5jZSB0byBjbGVhbiB1cC5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG5cbiAgICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgLy8gSWYgbWF5YmVJbnZva2VEZWxlZ2F0ZShjb250ZXh0KSBjaGFuZ2VkIGNvbnRleHQubWV0aG9kIGZyb21cbiAgICAgICAgICAgIC8vIFwicmV0dXJuXCIgdG8gXCJ0aHJvd1wiLCBsZXQgdGhhdCBvdmVycmlkZSB0aGUgVHlwZUVycm9yIGJlbG93LlxuICAgICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBcIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJ3Rocm93JyBtZXRob2RcIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChtZXRob2QsIGRlbGVnYXRlLml0ZXJhdG9yLCBjb250ZXh0LmFyZyk7XG5cbiAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcblxuICAgIGlmICghIGluZm8pIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIik7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgIC8vIEFzc2lnbiB0aGUgcmVzdWx0IG9mIHRoZSBmaW5pc2hlZCBkZWxlZ2F0ZSB0byB0aGUgdGVtcG9yYXJ5XG4gICAgICAvLyB2YXJpYWJsZSBzcGVjaWZpZWQgYnkgZGVsZWdhdGUucmVzdWx0TmFtZSAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dFtkZWxlZ2F0ZS5yZXN1bHROYW1lXSA9IGluZm8udmFsdWU7XG5cbiAgICAgIC8vIFJlc3VtZSBleGVjdXRpb24gYXQgdGhlIGRlc2lyZWQgbG9jYXRpb24gKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHQubmV4dCA9IGRlbGVnYXRlLm5leHRMb2M7XG5cbiAgICAgIC8vIElmIGNvbnRleHQubWV0aG9kIHdhcyBcInRocm93XCIgYnV0IHRoZSBkZWxlZ2F0ZSBoYW5kbGVkIHRoZVxuICAgICAgLy8gZXhjZXB0aW9uLCBsZXQgdGhlIG91dGVyIGdlbmVyYXRvciBwcm9jZWVkIG5vcm1hbGx5LiBJZlxuICAgICAgLy8gY29udGV4dC5tZXRob2Qgd2FzIFwibmV4dFwiLCBmb3JnZXQgY29udGV4dC5hcmcgc2luY2UgaXQgaGFzIGJlZW5cbiAgICAgIC8vIFwiY29uc3VtZWRcIiBieSB0aGUgZGVsZWdhdGUgaXRlcmF0b3IuIElmIGNvbnRleHQubWV0aG9kIHdhc1xuICAgICAgLy8gXCJyZXR1cm5cIiwgYWxsb3cgdGhlIG9yaWdpbmFsIC5yZXR1cm4gY2FsbCB0byBjb250aW51ZSBpbiB0aGVcbiAgICAgIC8vIG91dGVyIGdlbmVyYXRvci5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCAhPT0gXCJyZXR1cm5cIikge1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZS15aWVsZCB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBkZWxlZ2F0ZSBtZXRob2QuXG4gICAgICByZXR1cm4gaW5mbztcbiAgICB9XG5cbiAgICAvLyBUaGUgZGVsZWdhdGUgaXRlcmF0b3IgaXMgZmluaXNoZWQsIHNvIGZvcmdldCBpdCBhbmQgY29udGludWUgd2l0aFxuICAgIC8vIHRoZSBvdXRlciBnZW5lcmF0b3IuXG4gICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gIH1cblxuICAvLyBEZWZpbmUgR2VuZXJhdG9yLnByb3RvdHlwZS57bmV4dCx0aHJvdyxyZXR1cm59IGluIHRlcm1zIG9mIHRoZVxuICAvLyB1bmlmaWVkIC5faW52b2tlIGhlbHBlciBtZXRob2QuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCk7XG5cbiAgR3BbdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JcIjtcblxuICAvLyBBIEdlbmVyYXRvciBzaG91bGQgYWx3YXlzIHJldHVybiBpdHNlbGYgYXMgdGhlIGl0ZXJhdG9yIG9iamVjdCB3aGVuIHRoZVxuICAvLyBAQGl0ZXJhdG9yIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbiBpdC4gU29tZSBicm93c2VycycgaW1wbGVtZW50YXRpb25zIG9mIHRoZVxuICAvLyBpdGVyYXRvciBwcm90b3R5cGUgY2hhaW4gaW5jb3JyZWN0bHkgaW1wbGVtZW50IHRoaXMsIGNhdXNpbmcgdGhlIEdlbmVyYXRvclxuICAvLyBvYmplY3QgdG8gbm90IGJlIHJldHVybmVkIGZyb20gdGhpcyBjYWxsLiBUaGlzIGVuc3VyZXMgdGhhdCBkb2Vzbid0IGhhcHBlbi5cbiAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9pc3N1ZXMvMjc0IGZvciBtb3JlIGRldGFpbHMuXG4gIEdwW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIEdwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwiW29iamVjdCBHZW5lcmF0b3JdXCI7XG4gIH07XG5cbiAgZnVuY3Rpb24gcHVzaFRyeUVudHJ5KGxvY3MpIHtcbiAgICB2YXIgZW50cnkgPSB7IHRyeUxvYzogbG9jc1swXSB9O1xuXG4gICAgaWYgKDEgaW4gbG9jcykge1xuICAgICAgZW50cnkuY2F0Y2hMb2MgPSBsb2NzWzFdO1xuICAgIH1cblxuICAgIGlmICgyIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmZpbmFsbHlMb2MgPSBsb2NzWzJdO1xuICAgICAgZW50cnkuYWZ0ZXJMb2MgPSBsb2NzWzNdO1xuICAgIH1cblxuICAgIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VHJ5RW50cnkoZW50cnkpIHtcbiAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbiB8fCB7fTtcbiAgICByZWNvcmQudHlwZSA9IFwibm9ybWFsXCI7XG4gICAgZGVsZXRlIHJlY29yZC5hcmc7XG4gICAgZW50cnkuY29tcGxldGlvbiA9IHJlY29yZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIENvbnRleHQodHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBUaGUgcm9vdCBlbnRyeSBvYmplY3QgKGVmZmVjdGl2ZWx5IGEgdHJ5IHN0YXRlbWVudCB3aXRob3V0IGEgY2F0Y2hcbiAgICAvLyBvciBhIGZpbmFsbHkgYmxvY2spIGdpdmVzIHVzIGEgcGxhY2UgdG8gc3RvcmUgdmFsdWVzIHRocm93biBmcm9tXG4gICAgLy8gbG9jYXRpb25zIHdoZXJlIHRoZXJlIGlzIG5vIGVuY2xvc2luZyB0cnkgc3RhdGVtZW50LlxuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogXCJyb290XCIgfV07XG4gICAgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpO1xuICAgIHRoaXMucmVzZXQodHJ1ZSk7XG4gIH1cblxuICBydW50aW1lLmtleXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH1cbiAgICBrZXlzLnJldmVyc2UoKTtcblxuICAgIC8vIFJhdGhlciB0aGFuIHJldHVybmluZyBhbiBvYmplY3Qgd2l0aCBhIG5leHQgbWV0aG9kLCB3ZSBrZWVwXG4gICAgLy8gdGhpbmdzIHNpbXBsZSBhbmQgcmV0dXJuIHRoZSBuZXh0IGZ1bmN0aW9uIGl0c2VsZi5cbiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHdoaWxlIChrZXlzLmxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICBuZXh0LnZhbHVlID0ga2V5O1xuICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRvIGF2b2lkIGNyZWF0aW5nIGFuIGFkZGl0aW9uYWwgb2JqZWN0LCB3ZSBqdXN0IGhhbmcgdGhlIC52YWx1ZVxuICAgICAgLy8gYW5kIC5kb25lIHByb3BlcnRpZXMgb2ZmIHRoZSBuZXh0IGZ1bmN0aW9uIG9iamVjdCBpdHNlbGYuIFRoaXNcbiAgICAgIC8vIGFsc28gZW5zdXJlcyB0aGF0IHRoZSBtaW5pZmllciB3aWxsIG5vdCBhbm9ueW1pemUgdGhlIGZ1bmN0aW9uLlxuICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcbiAgICAgIHJldHVybiBuZXh0O1xuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07XG4gICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGl0ZXJhYmxlLm5leHQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gaXRlcmFibGU7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuZXh0ID0gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgaXRlcmFibGUubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSB7XG4gICAgICAgICAgICAgIG5leHQudmFsdWUgPSBpdGVyYWJsZVtpXTtcbiAgICAgICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5leHQudmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBuZXh0Lm5leHQgPSBuZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJldHVybiBhbiBpdGVyYXRvciB3aXRoIG5vIHZhbHVlcy5cbiAgICByZXR1cm4geyBuZXh0OiBkb25lUmVzdWx0IH07XG4gIH1cbiAgcnVudGltZS52YWx1ZXMgPSB2YWx1ZXM7XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH1cblxuICBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcblxuICAgIHJlc2V0OiBmdW5jdGlvbihza2lwVGVtcFJlc2V0KSB7XG4gICAgICB0aGlzLnByZXYgPSAwO1xuICAgICAgdGhpcy5uZXh0ID0gMDtcbiAgICAgIC8vIFJlc2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuZG9uZSA9IGZhbHNlO1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcblxuICAgICAgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSk7XG5cbiAgICAgIGlmICghc2tpcFRlbXBSZXNldCkge1xuICAgICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgICAvLyBOb3Qgc3VyZSBhYm91dCB0aGUgb3B0aW1hbCBvcmRlciBvZiB0aGVzZSBjb25kaXRpb25zOlxuICAgICAgICAgIGlmIChuYW1lLmNoYXJBdCgwKSA9PT0gXCJ0XCIgJiZcbiAgICAgICAgICAgICAgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiZcbiAgICAgICAgICAgICAgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSkge1xuICAgICAgICAgICAgdGhpc1tuYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuXG4gICAgICB2YXIgcm9vdEVudHJ5ID0gdGhpcy50cnlFbnRyaWVzWzBdO1xuICAgICAgdmFyIHJvb3RSZWNvcmQgPSByb290RW50cnkuY29tcGxldGlvbjtcbiAgICAgIGlmIChyb290UmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByb290UmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuXG4gICAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uKGV4Y2VwdGlvbikge1xuICAgICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgICB0aHJvdyBleGNlcHRpb247XG4gICAgICB9XG5cbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcbiAgICAgIGZ1bmN0aW9uIGhhbmRsZShsb2MsIGNhdWdodCkge1xuICAgICAgICByZWNvcmQudHlwZSA9IFwidGhyb3dcIjtcbiAgICAgICAgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbjtcbiAgICAgICAgY29udGV4dC5uZXh0ID0gbG9jO1xuXG4gICAgICAgIGlmIChjYXVnaHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGlzcGF0Y2hlZCBleGNlcHRpb24gd2FzIGNhdWdodCBieSBhIGNhdGNoIGJsb2NrLFxuICAgICAgICAgIC8vIHRoZW4gbGV0IHRoYXQgY2F0Y2ggYmxvY2sgaGFuZGxlIHRoZSBleGNlcHRpb24gbm9ybWFsbHkuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAhISBjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSBcInJvb3RcIikge1xuICAgICAgICAgIC8vIEV4Y2VwdGlvbiB0aHJvd24gb3V0c2lkZSBvZiBhbnkgdHJ5IGJsb2NrIHRoYXQgY291bGQgaGFuZGxlXG4gICAgICAgICAgLy8gaXQsIHNvIHNldCB0aGUgY29tcGxldGlvbiB2YWx1ZSBvZiB0aGUgZW50aXJlIGZ1bmN0aW9uIHRvXG4gICAgICAgICAgLy8gdGhyb3cgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXR1cm4gaGFuZGxlKFwiZW5kXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKTtcbiAgICAgICAgICB2YXIgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFicnVwdDogZnVuY3Rpb24odHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiZcbiAgICAgICAgICAgIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSAmJlxuICAgICAgICAgICh0eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICAgdHlwZSA9PT0gXCJjb250aW51ZVwiKSAmJlxuICAgICAgICAgIGZpbmFsbHlFbnRyeS50cnlMb2MgPD0gYXJnICYmXG4gICAgICAgICAgYXJnIDw9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgIC8vIElnbm9yZSB0aGUgZmluYWxseSBlbnRyeSBpZiBjb250cm9sIGlzIG5vdCBqdW1waW5nIHRvIGFcbiAgICAgICAgLy8gbG9jYXRpb24gb3V0c2lkZSB0aGUgdHJ5L2NhdGNoIGJsb2NrLlxuICAgICAgICBmaW5hbGx5RW50cnkgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTtcbiAgICAgIHJlY29yZC50eXBlID0gdHlwZTtcbiAgICAgIHJlY29yZC5hcmcgPSBhcmc7XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkpIHtcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2M7XG4gICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG5cbiAgICBjb21wbGV0ZTogZnVuY3Rpb24ocmVjb3JkLCBhZnRlckxvYykge1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICByZWNvcmQudHlwZSA9PT0gXCJjb250aW51ZVwiKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IHJlY29yZC5hcmc7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInJldHVyblwiKSB7XG4gICAgICAgIHRoaXMucnZhbCA9IHRoaXMuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICB0aGlzLm5leHQgPSBcImVuZFwiO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIiAmJiBhZnRlckxvYykge1xuICAgICAgICB0aGlzLm5leHQgPSBhZnRlckxvYztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfSxcblxuICAgIGZpbmlzaDogZnVuY3Rpb24oZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSB7XG4gICAgICAgICAgdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyk7XG4gICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbih0cnlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgdmFyIHRocm93biA9IHJlY29yZC5hcmc7XG4gICAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRocm93bjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUaGUgY29udGV4dC5jYXRjaCBtZXRob2QgbXVzdCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgbG9jYXRpb25cbiAgICAgIC8vIGFyZ3VtZW50IHRoYXQgY29ycmVzcG9uZHMgdG8gYSBrbm93biBjYXRjaCBibG9jay5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTtcbiAgICB9LFxuXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24oaXRlcmFibGUsIHJlc3VsdE5hbWUsIG5leHRMb2MpIHtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgIC8vIERlbGliZXJhdGVseSBmb3JnZXQgdGhlIGxhc3Qgc2VudCB2YWx1ZSBzbyB0aGF0IHdlIGRvbid0XG4gICAgICAgIC8vIGFjY2lkZW50YWxseSBwYXNzIGl0IG9uIHRvIHRoZSBkZWxlZ2F0ZS5cbiAgICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cbiAgfTtcbn0pKFxuICAvLyBJbiBzbG9wcHkgbW9kZSwgdW5ib3VuZCBgdGhpc2AgcmVmZXJzIHRvIHRoZSBnbG9iYWwgb2JqZWN0LCBmYWxsYmFjayB0b1xuICAvLyBGdW5jdGlvbiBjb25zdHJ1Y3RvciBpZiB3ZSdyZSBpbiBnbG9iYWwgc3RyaWN0IG1vZGUuIFRoYXQgaXMgc2FkbHkgYSBmb3JtXG4gIC8vIG9mIGluZGlyZWN0IGV2YWwgd2hpY2ggdmlvbGF0ZXMgQ29udGVudCBTZWN1cml0eSBQb2xpY3kuXG4gIChmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXMgfSkoKSB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKClcbik7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTIuMFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBjPW51bGwsZj0hMSxoPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWMuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWMsYj1jLm5leHQ7aWYoYz09PWIpYz1udWxsO2Vsc2V7dmFyIGQ9Yy5wcmV2aW91cztjPWQubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsO2Q9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGU9aCxRPWw7aD1hO2w9Yjt0cnl7dmFyIGc9ZCgpfWZpbmFsbHl7aD1lLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZylpZihnPXtjYWxsYmFjazpnLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09YyljPWcubmV4dD1nLnByZXZpb3VzPWc7ZWxzZXtkPW51bGw7YT1jO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2Q9YTticmVha31hPWEubmV4dH13aGlsZShhIT09Yyk7bnVsbD09PWQ/ZD1jOmQ9PT1jJiYoYz1nLHAoKSk7Yj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWc7Zy5uZXh0PWQ7Zy5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1jJiYxPT09Yy5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJjE9PT1jLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09Yz9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1mO2Y9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1jOyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihjLmV4cGlyYXRpb25UaW1lPD1kKXtkbyB1KCk7d2hpbGUobnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8PWQpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1jJiYhdygpKX19ZmluYWxseXttPSExLGY9YixudWxsIT09Yz9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHcsRz1udWxsO1widW5kZWZpbmVkXCIhPT10eXBlb2Ygd2luZG93P0c9d2luZG93OlwidW5kZWZpbmVkXCIhPT10eXBlb2YgZ2xvYmFsJiYoRz1nbG9iYWwpO1xuaWYoRyYmRy5fc2NoZWRNb2NrKXt2YXIgSD1HLl9zY2hlZE1vY2s7cj1IWzBdO3E9SFsxXTt3PUhbMl07ZXhwb3J0cy51bnN0YWJsZV9ub3c9SFszXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBJPW51bGwsSj1mdW5jdGlvbihhKXtpZihudWxsIT09SSl0cnl7SShhKX1maW5hbGx5e0k9bnVsbH19O3I9ZnVuY3Rpb24oYSl7bnVsbCE9PUk/c2V0VGltZW91dChyLDAsYSk6KEk9YSxzZXRUaW1lb3V0KEosMCwhMSkpfTtxPWZ1bmN0aW9uKCl7ST1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCksZT0hMTtpZigwPj1QLWQpaWYoLTEhPT1iJiZiPD1kKWU9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShlKX1maW5hbGx5e089ITF9fX07XG52YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09Syl7RShWKTt2YXIgYj1hLVArUztiPFMmJlI8Uz8oOD5iJiYoYj04KSxTPWI8Uj9SOmIpOlI9YjtQPWErUztMfHwoTD0hMCxVLnBvc3RNZXNzYWdlKHZvaWQgMCkpfWVsc2UgTj0hMX07cj1mdW5jdGlvbihhLGIpe0s9YTtNPWI7T3x8MD5iP1UucG9zdE1lc3NhZ2Uodm9pZCAwKTpOfHwoTj0hMCxFKFYpKX07cT1mdW5jdGlvbigpe0s9bnVsbDtMPSExO009LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O1xuZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgZD1oLGU9aztoPWE7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7aD1kLGs9ZSx2KCl9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3ZhciBkPS0xIT09az9rOmV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQpYj1kK2IudGltZW91dDtlbHNlIHN3aXRjaChoKXtjYXNlIDE6Yj1kKy0xO2JyZWFrO2Nhc2UgMjpiPWQrMjUwO2JyZWFrO2Nhc2UgNTpiPWQrMTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6Yj1kKzFFNDticmVhaztkZWZhdWx0OmI9ZCs1RTN9YT17Y2FsbGJhY2s6YSxwcmlvcml0eUxldmVsOmgsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH07aWYobnVsbD09PWMpYz1hLm5leHQ9YS5wcmV2aW91cz1hLHAoKTtlbHNle2Q9bnVsbDt2YXIgZT1jO2Rve2lmKGUuZXhwaXJhdGlvblRpbWU+Yil7ZD1lO2JyZWFrfWU9ZS5uZXh0fXdoaWxlKGUhPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWEscCgpKTtcbmI9ZC5wcmV2aW91cztiLm5leHQ9ZC5wcmV2aW91cz1hO2EubmV4dD1kO2EucHJldmlvdXM9Yn1yZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWM9bnVsbDtlbHNle2E9PT1jJiYoYz1iKTt2YXIgZD1hLnByZXZpb3VzO2QubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9aDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZD1oLGU9aztoPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtoPWQsaz1lLHYoKX19fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIGh9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiFmJiYobnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8bHx8dygpKX07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe251bGwhPT1jJiZwKCl9O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gY307XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEJyb3dzZXJSb3V0ZXIsIFJvdXRlLCBTd2l0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IHsgSG9tZVZpZXcgfSBmcm9tICcuL3ZpZXdzL0hvbWUnO1xyXG5cclxuXHJcbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPEJyb3dzZXJSb3V0ZXI+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL1wiIENvbXBvbmVudD17SG9tZVZpZXd9IC8+XHJcbiAgICAgICAgICA8L1N3aXRjaD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Ccm93c2VyUm91dGVyPlxyXG4gICAgKVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBwOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAnO1xyXG5pbXBvcnQgeyByZW5kZXIsIHVubW91bnRDb21wb25lbnRBdE5vZGUgfSBmcm9tICdyZWFjdC1kb20nO1xyXG5cclxuXHJcbmZ1bmN0aW9uIHN0YXJ0dXAoKSB7XHJcbiAgbGV0IHRhcmdldE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpO1xyXG4gIFByb21pc2UucmVzb2x2ZShpbml0aWFsaXplQ2xpZW50KHRhcmdldE5vZGUpKVxyXG4gICAgLmNhdGNoKGVyciA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0FuIGVycm9yIG9jY3VycmVkIHdoZW4gc3RhcnRpbmcgdGhlIGNsaWVudCcpO1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0aWFsaXplQ2xpZW50KHRhcmdldE5vZGUpIHtcclxuICBjbGVhclRhcmdldE5vZGUodGFyZ2V0Tm9kZSk7XHJcbiAgcmVuZGVyKFxyXG4gICAgPEFwcCAvPixcclxuICAgIHRhcmdldE5vZGUsXHJcbiAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xlYXJUYXJnZXROb2RlKHRhcmdldE5vZGUpIHtcclxuICB1bm1vdW50Q29tcG9uZW50QXROb2RlKHRhcmdldE5vZGUpO1xyXG59XHJcblxyXG5pZiAobW9kdWxlLmhvdCkge1xyXG4gIG1vZHVsZS5ob3QuYWNjZXB0KGZ1bmN0aW9uICgpIHtcclxuICAgIHN0YXJ0dXAoKTtcclxuICB9KTtcclxuICBzdGFydHVwKCk7XHJcbn0gZWxzZSB7XHJcbiAgc3RhcnR1cCgpO1xyXG59IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBjbGFzcyBIb21lVmlldyBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdj5cclxuICAgICAgICA8aDE+SGVsbG8gUm9vZmluZyBXb3JsZCE8L2gxPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==